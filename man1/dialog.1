'\" t
.\" $Id: dialog.1,v 1.226 2021/01/17 17:25:01 tom Exp $
.\" Авторское право 2005-2020,2021 Томас Э. Дики
.\"
.\" Эта программа является свободным программным обеспечением; вы можете распространять и/или модифицировать
.\" её на условиях GNU Lesser General Public License, версии 2.1,
.\" опубликованной в Фонде свободного программного обеспечения.
.\"
.\" Эта программа распространяется в надежде, что она будет полезной,
.\" но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ; даже без подразумеваемой гарантии
.\" КОММЕРЧЕСКОЙ ЦЕННОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. См. GNU
.\" Lesser General Public License для более детальной информации.
.\"
.\" Вы должны были получить копию GNU Lesser General Public License
.\" вместе с этой программой; если нет, напишите в
.\" Фонд свободного программного обеспечения, Inc.
.\" Улица Франклина, 51, пятый этаж
.\" Бостон, Массачусетс, 02110, США.
.\"
.\" определения для переименования
.ds p dialog
.ds l dialog
.ds L Dialog
.ds D DIALOG
.\"
.de ES
.ne 8
.IP
..
.de Ex
.RS +7
.PP
.nf
.ft CW
..
.de Ee
.fi
.ft R
.RE
..
.\" Нумерованный абзац
.de bP
.ie n  .IP \(bu 4
.el    .IP \(bu 2
..
.ie \n(.g .ds `` \(lq
.el       .ds `` ``
.ie \n(.g .ds '' \(rq
.el       .ds '' ''
.
.TH \*D 1 "" "$Date: 2021/01/17 17:25:01 $"
.SH НАЗВАНИЕ
dialog - отображение диалоговых окон из сценариев оболочки
.SH СИНТАКСИС
\fB\*p \-\-clear\fP
.br
.BI "\*p \-\-create\-rc " file
.br
\fB\*p \-\-print\-maxsize\fP
.br
\fB\*p\fP
\fIcommon-options\fP
\fIbox-options\fP
.SH ОПИСАНИЕ
\fB\*L\fP
это программа, которая позволяет вам представлять различные вопросы или
отображать сообщения с помощью диалоговых окон из сценария оболочки.
Такие типы диалоговых окон реализованы
(хотя не все обязательно скомпилированы в \fB\*p\fR):
.RS
.LP
.nh
.na
.BR buildlist ", "
.BR calendar ", "
.BR checklist ", "
.BR dselect ", "
.BR editbox ", "
.BR form ", "
.BR fselect ", "
.BR gauge ", "
.BR infobox ", "
.BR inputbox ", "
.BR inputmenu ", "
.BR menu ", "
.BR mixedform ", "
.BR mixedgauge ", "
.BR msgbox " (сообщение), "
.BR passwordbox ", "
.BR passwordform ", "
.BR pause ", "
.BR prgbox ", "
.BR programbox ", "
.BR progressbox ", "
.BR radiolist ", "
.BR rangebox ", "
.BR tailbox ", "
.BR tailboxbg ", "
.BR textbox ", "
.BR timebox ", "
.BR treeview ", и "
.BR yesno " (да/нет)."
.ad
.RE
.PP
Вы можете поместить более одного диалогового окна в сценарий:
.bP
Используйте токен "\fB\-\-and\-widget\fP" чтобы заставить \fB\*p\fP перейти к следующему
диалогу, если вы не нажали ESC для отмены, или
.bP
Просто добавьте токены для следующего диалогового окна, создавая цепочку.
\*L прекращает цепочку, когда возвращаемый код из диалога отличен от нуля,
например, Отмена или Нет (см. ДИАГНОСТИКУ).
.PP
Некоторые виджеты, например, checklist, будут писать текст в вывод \fB\*p\fP.
Обычно это стандартная ошибка, но есть параметры для
изменения этого:
\*(``\fB\-\-output\-fd\fP\*('',
\*(``\fB\-\-stderr\fP\*('' и
\*(``\fB\-\-stdout\fP\*(''.
Текст не пишется, если нажата кнопка Отмена (или ESC);
\fB\*p\fP немедленно выходит в этом случае.
.
.\" ************************************************************************
.Sh ПАРАМЕТРЫ
Все параметры начинаются с \*(``\fB--\fP\*(''
(две ASCII тире,
для тех, кто использует системы с неправильной поддержкой локалей).
.PP
Опция \*(``\fB--\fP\*('' сама по себе используется как escape,
то есть следующий токен в командной строке не обрабатывается как опция.
.RS
.B \*p --title -- --Not an option
.RE
.PP
Когда обычная (например, не виджет) опция повторяется,
используется последняя найденная.
параметры типа boolean обрабатываются особо, так что их можно отменить,
добавив (или убрав) модификатор \*(``no\*(''
после ведущего \*(``\fB--\fP\*(''.
Например, \fB\-\-no-shadow\fP здесь описан,
но \fB\-\-shadow\fP также принимается.
.PP
Опция \*(``\fB\-\-args\fP\*('' говорит \fB\*p\fP выводить параметры командной строки
на стандартную ошибку.
Это полезно при отладке сложных сценариев с использованием
\*(``\fB--\fP\*('' и \*(``\fB\-\-file\fP\*('',
поскольку командная строка может быть переписана при их расширении.
.PP
Опция \*(``\fB\-\-file\fP\*('' говорит \fB\*p\fP читать параметры из
файла, указанного в её значении.
.RS
.B \*p --file \fIparameterfile
.RE
.PP
Пробелы вне двойных кавычек игнорируются
(используйте обратные слэши для цитирования отдельных символов).
Результат вставляется в командную строку,
заменяя \*(``\fB\-\-file\fP\*('' и его значение параметры.
Интерпретация командной строки возобновляется с этого момента.
Если \fIparameterfile\fP начинается с \*(``&\*('', \fB\*p\fP
интерпретирует следующий текст как номер файлового дескриптора
вместо имени файла.
.PP
Большинство виджетов принимают параметры \fIheight\fP и \fIwidth\fP,
которые можно использовать для автоматической настройки размера виджета для размещения
многострочного сообщения \fIprompt\fP:
.bP
Если параметр отрицательный,
\fB\*l\fP использует размер экрана.
.bP
Если параметр нулевой,
\fB\*l\fP использует минимальный размер для отображения \fIprompt\fP
и данных.
.bP
В противном случае, \fB\*l\fP использует заданный размер для виджета.
.
.SS \fBОбщие параметры\fP
Большинство общих опций сбрасываются перед обработкой каждого виджета.
.
.IP "\fB--ascii-lines
Вместо отрисовки графических линий вокруг коробок,
рисует ASCII \*(``+\*('' и \*(``-\*('' на том же месте.
см. также \*(``\fB\-\-no\-lines\fR\*(''.
.
.IP "\fB--aspect \fIratio"
Это дает вам некоторый контроль над размерами коробки при использовании автоматической настройки
размеров (указание 0 для высоты и ширины).
Оно представляет ширину / высоту.
По умолчанию это 9, что означает 9 символов в ширину на каждую строку в высоту.
.
.IP "\fB--backtitle \fIbacktitle"
Указывает строку
\fIbacktitle\fP
для отображения на фоне, в верхней части экрана.
.
.IP "\fB--begin \fIy x"
Укажите позицию верхнего левого угла диалогового окна на экране.
.
.IP "\fB--cancel-label \fIstring"
Заменяет метку, используемую для кнопок \*(``Отмена\*(''.
.
.IP "\fB--clear"
Очищает экран виджета, оставляя только фоновый цвет экрана.
Используйте это, когда вы комбинируете виджеты
с \*(``\fB\-\-and\-widget\fR\*('' для стирания
содержимого предыдущего виджета на экране, чтобы оно не было видно
под содержимым следующего виджета.
Понимайте это как дополнение к \*(``\fB\-\-keep\-window\fR\*(''.
Для сравнения эффектов, используйте эти:
.
.ES
Все три виджета видны, эффект лестницы, упорядоченные 1,2,3:
.Ex
\*p \e
                               --begin 2 2 --yesno "" 0 0 \e
    --and-widget               --begin 4 4 --yesno "" 0 0 \e
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
Остается видимым только последний виджет:
.Ex
\*p \e
                 --clear       --begin 2 2 --yesno "" 0 0 \e
    --and-widget --clear       --begin 4 4 --yesno "" 0 0 \e
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
Все три виджета видны, эффект лестницы, упорядоченные 3,2,1:
.Ex
\*p \e
                 --keep-window --begin 2 2 --yesno "" 0 0 \e
    --and-widget --keep-window --begin 4 4 --yesno "" 0 0 \e
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
Видны первый и третий виджет, эффект лестницы, упорядоченные 3,1:
.Ex
\*p \e
                 --keep-window --begin 2 2 --yesno "" 0 0 \e
    --and-widget --clear       --begin 4 4 --yesno "" 0 0 \e
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.IP
Обратите внимание, если вы хотите восстановить оригинальные цвета консоли и отправить ваш
курсор домой после выхода из программы диалога, используйте команду \fBclear\fR\ (1)
Напротив, если вы хотите очистить экран и отправить ваш курсор в нижний левый угол после выхода из
программы \fB\*p\fP, используйте
\fB\-\-erase\-on\-exit\fR\ опцию.
.
.IP "\fB--colors"
Интерпретирует встроенные последовательности \*(``\eZ\*('' в тексте диалога
по следующему символу,
который говорит \fB\*p\fP установить цвета или видеоатрибуты:
.RS
.bP
0 до 7 - это номера цветов ANSI, используемые в curses:
черный,
красный,
зеленый,
желтый,
синий,
пурпурный,
голубой и
белый соответственно.
.bP
Жирный задается 'b', сбрасывается 'B'.
.bP
Реверс задается 'r', сбрасывается 'R'.
.bP
Подчеркивание задается 'u', сбрасывается 'U'.
.bP
Настройки накапливаются, например, \*(``\eZb\eZ1\*('' делает следующий текст
жирным (возможно ярким) красным.
.bP
Восстановите обычные настройки с \*(``\eZn\*(''.
.RE
.
.IP "\fB--column-separator \fIstring"
Говорит \fB\*p\fP разделить данные для радио/флажков и меню на
вхождения данной строки и выровнять разделенные данные в столбцы.
.
.IP "\fB--cr-wrap"
Интерпретирует встроенные переводы строки в тексте диалога как перевод строки на экране.
В противном случае, \fB\*p\fR будет только переносить строки
где это необходимо, чтобы они поместились внутри текстового поля.
.IP
Хотя вы можете контролировать переносы строк с помощью этого,
\fB\*L\fR все равно будет переносить любые строки, которые слишком длинные для ширины коробки.
Без cr-wrap расположение вашего текста может быть отформатировано так, чтобы выглядеть красиво
в исходном коде вашего сценария, не влияя на то, как он будет
выглядеть в диалоге.
.IP
Функция \fIcr\-wrap\fP реализована с учетом этих условий:
.RS
.bP
строка содержит \*(``\en\*('' и опция \fB\-\-no\-nl\-expand\fP не
используется, или
.bP
опция \fB\-\-trim\fP используется.
.RE
.IP
Для более подробной информации см. \fBпараметры пробелов\fP.
.
.IP "\fB--create-rc \fIfile"
Когда
\fB\*p\fP
поддерживает конфигурацию в реальном времени,
это может быть использовано для создания образца файла конфигурации в указанном
файле
.IR файл "."
.
.IP "\fB--cursor-off-label"
Размещает курсор терминала в конце кнопки вместо
первого символа метки кнопки.
Это полезно для уменьшения визуальной путаницы, когда цвета курсора
плохо взаимодействуют с цветами текста метки кнопки.
.
.IP "\fB--date-format \fIformat"
Если хост предоставляет \fBstrftime\fP,
эта опция позволяет вам указать формат даты, печатаемой для
виджета \fB\-\-calendar\fP.
Время суток (час, минута, секунда) - это текущее местное время.
.
.IP "\fB--defaultno"
Устанавливает значение по умолчанию для
\fByes/no\fP
окна в
.BR No .
Точно так же, обрабатывает кнопку по умолчанию виджетов, которые предоставляют
\*(``OK\*('' и \*(``Отмена\*(''
как \fICancel\fP.
Если даны \*(``\fB\-\-no\-cancel\fP\*('' или \*(``\fB\-\-visit\-items\fP\*(''
эти параметры переопределяют это,
делая кнопку по умолчанию всегда \*(``Да\*(''
(внутренне то же самое, что \*(``OK\*('').
.
.IP "\fB--default-button \fIstring"
Устанавливает кнопку по умолчанию (предвыбранную) в виджете.
Предвыбор кнопки,
сценарий делает возможным для пользователя просто нажать \fIEnter\fP
для продолжения диалога с минимальным взаимодействием.
.IP
Значение параметры - это имя кнопки:
.IR ok ,
.IR yes ,
.IR cancel ,
.IR no ,
.IR help "\ или"
.IR extra .
.IP
Обычно первая кнопка в каждом виджете является кнопкой по умолчанию.
Первая показанная кнопка определяется виджетом
совместно с опциями \*(``\fB\-\-no\-ok\fP\*(''
и \*(``\fB\-\-no\-cancel\fP\*(''.
Если эта опция не дана, кнопка по умолчанию не назначается.
.
.IP "\fB--default-item \fIstring"
Устанавливает элемент по умолчанию в чеклисте, форме или меню.
Обычно первый элемент в окне является элементом по умолчанию.
.
.IP "\fB--erase-on-exit"
Когда \fB\*p\fP выходит, удаляет виджет диалога, стирая весь
экран до его натурального фонового цвета и помещая курсор терминала
в нижний левый угол.
.
.IP "\fB--exit-label \fIstring"
Заменяет метку, используемую для кнопок \*(``ВЫХОД\*(''.
.
.IP "\fB--extra-button"
Показывает дополнительную кнопку, между кнопками \*(``OK\*('' и \*(``Отмена\*(''.
.
.IP "\fB--extra-label \fIstring"
Заменяет метку, используемую для кнопок \*(``Дополнительно\*(''.
Примечание: для виджетов inputmenu это по умолчанию \*(``Переименовать\*(''.
.
.IP "\fB--help"
Печатает справочное сообщение в стандартный вывод и выходит.
Справочное сообщение также печатается, если не даны параметры,
или если дана нераспознанная опция.
.
.IP "\fB--help-button"
Показывает кнопку справки после кнопок \*(``OK\*('' и \*(``Отмена\*(''
в коробках, которые имеют список меченных элементов
(т.е., checklist, radiolist, menu и treeview коробки).
.IP
При выходе статус возврата указывает, что кнопка Справки была нажата.
\fB\*L\fP также пишет сообщение в свой вывод
после токена \*(``HELP\*('':
.RS
.bP
Если дана также "\fB\-\-item\-help\fR", печатается текст справки по элементу.
.bP
В противном случае пишется тег элемента (первое поле).
.RE
.IP
Эта опция может быть применена к другим виджетам,
которые имеют кнопку \*(``OK\*('',
независимо от того, используется ли кнопка \*(``Отмена\*(''.
Статус возврата и вывод не обрабатываются специально для других виджетов;
кнопка справки - это просто дополнительная кнопка.
.
.IP "\fB--help-label \fIstring"
Заменяет метку, используемую для кнопок \*(``Справка\*(''.
.
.IP "\fB--help-status"
Если выбрана кнопка справки,
пишет информацию checklist, radiolist или формы
после информации справки по элементу \*(``HELP\*(''.
Это может быть использовано для восстановления состояния checklist после обработки
запроса справки.
.
.IP "\fB--help-tags"
Модифицирует сообщения, написанные при выходе для \fB\-\-help\-button\fP,
делая их всегда просто тегом элемента.
Это не влияет на код статуса выхода.
.
.IP "\fB--hfile \fIfilename"
Отображает данный файл с помощью текстбокса, когда пользователь нажимает F1.
.
.IP "\fB--hline \fIstring"
Отображает данную строку, центрированную в нижней части виджета.
.
.IP "\fB--ignore"
Игнорирует параметры, которые \fB\*p\fP не распознает.
Некоторые хорошо известные, такие как \*(``\fB\-\-icon\fP\*('', игнорируются в любом случае,
но это лучший выбор для совместимости с другими реализациями.
.
.IP "\fB--input-fd \fIfd"
Читает ввод с клавиатуры из данного файлового дескриптора.
Большинство сценариев \fB\*p\fR читают из стандартного ввода,
но виджет gauge читает из трубы (которая всегда является стандартным вводом).
Некоторые конфигурации не работают должным образом, когда
\fB\*p\fP пытается переоткрыть терминал.
Используйте эту опцию (с соответствующей перестановкой файловых дескрипторов)
если ваш сценарий должен работать в таком типе окружения.
.
.IP "\fB--insecure"
Делает виджет пароля дружелюбнее, но менее безопасным,
отображая звездочки за каждый символ.
.
.IP "\fB--iso-week"
Устанавливает точку начала нумерации недели
показанной в параметры \*(``\fB\-\-calendar\fP\*('')
согласно ISO-8601, которая начинает нумерацию
с первой недели, которая включает в себя четверг в январе.
.
.IP "\fB--item-help"
Интерпретирует данные тегов для checklist, radiolist и меню
добавляя столбец, который отображается в нижней строке
экрана для текущего выбранного элемента.
.
.IP "\fB--keep-tite"
Когда собрана с \fBncurses\fP,
\fB\*p\fP обычно проверяет, работает ли она в \fBxterm\fP,
и в этом случае пытается подавить инициализирующие строки, которые
заставили бы ее переключиться на альтернативный экран.
Переключение между нормальным и альтернативным экранами
визуально отвлекает в сценарии, который запускает \fB\*p\fP
несколько раз.
Используйте эту опцию, чтобы разрешить \fB\*p\fP использовать эти инициализирующие строки.
.
.IP "\fB--keep-window"
Обычно, когда \fB\*p\fR выполняет несколько виджетов \fBtailboxbg\fR,
соединенных с помощью \*(``\fB\-\-and\-widget\fR\*('',
она очищает старый виджет с экрана, закрашивая его.
Используйте эту опцию, чтобы подавить эту перекраску.
.IP
При выходе \fB\*p\fR перекрашивает все виджеты, которые были
отмечены с помощью \*(``\fB\-\-keep\-window\fR\*('',
даже если это не виджеты \fBtailboxbg\fR.
Это заставляет их перерисовываться в обратном порядке.
Смотрите обсуждение параметры \*(``\fB\-\-clear\fR\*('' для примеров.
.
.IP "\fB--last-key"
При выходе сообщает последнюю клавишу, которую ввел пользователь.
Это код клавиши curses, а не символ или буквальный символ,
и сообщается только для клавиш, которые привязаны к действию.
Это может быть использовано скриптами для различения двух клавиш, которые
привязаны к одному и тому же действию.
.
.IP "\fB--max-input \fIsize"
Ограничивает вводимые строки данной величиной.
Если не указано, лимит составляет 2048.
.
.IP "\fB--no-cancel"
Подавляет кнопку \*(``Отмена\*('' в режимах checklist, inputbox и menu box.
Сценарий все равно может проверить, нажал ли пользователь клавишу ESC для отмены выхода.
.
.IP "\fB--no-collapse"
Обычно \fB\*p\fR преобразует табуляции в пробелы и сокращает несколько
пробелов до одного пробела для текста, который отображается в сообщениях и т. д.
Используйте эту опцию, чтобы отключить эту функцию.
Обратите внимание, что \fB\*p\fR все равно будет переносить текст,
с учетом опций \*(``\fB\-\-cr\-wrap\fR\*('')
и \*(``\fB\-\-trim\fR\*(''.
.IP
Функция \fIno\-collapse\fP реализована с учетом этих условий:
.RS
.bP
строка содержит \*(``\en\*('' и опция \fB\-\-no\-nl\-expand\fP не
используется, или
.bP
опция \fB\-\-trim\fP не используется.
.RE
.IP
Для более подробной информации см. \fBпараметры пробелов\fP.
.


.IP "\fB\-\-no\-hot\-list"
Сообщает
\fB\*p\fP
о необходимости отключения функции горячих клавиш для списков, например, для флажков, меню.
.IP
Обычно первая заглавная буква в элементе списка выделяется,
и нажатие этой буквы перемещает фокус на данный элемент.
Эта опция отключает как выделение, так и перемещение.
.IP
Горячие клавиши для кнопок (\*(``OK\*('' , \*(``Cancel\*('', и т.д.) не затрагиваются.
.
.IP "\fB--no-items"
Некоторые виджеты (список с флажками, ввод с меню, радиосписок, меню) отображают список
с двумя колонками (\*(``тег\*('' и \*(``элемент\*('',
т.е. \*(``описание\*('').
Эта опция позволяет \fB\*p\fP читать более короткие строки,
пропуская часть списка \*(``элемент\*(''.
Это иногда полезно, например, если теги предоставляют достаточно информации.
.IP
см. также \fB\-\-no\-tags\fP.
Если обе параметры указаны, эта игнорируется.
.
.IP "\fB--no-kill"
Сообщает
\fB\*p\fP
что
\fBtailboxbg\fP
окно будет работать в фоновом режиме,
выводя его идентификатор процесса в выходные данные \fB\*p\fP.
SIGHUP отключен для фонового процесса.
.
.IP "\fB--no-label \fIstring"
Заменяет метку, используемую для кнопок \*(``No\*(''.
.
.IP "\fB--no-lines
Вместо рисования линий вокруг окон рисует пробелы на их месте.
см. также \*(``\fB\-\-ascii\-lines\fR\*(''.
.
.IP "\fB--no-mouse
Не включать поддержку мыши.
.
.IP "\fB--no-nl-expand
Не преобразовывать подстроки \*(``\en\*('' в тексте сообщения/приглашения в
буквальные переводы строк.
.IP
Опция \fIno\-nl\-expand\fP используется только если
в строке есть \*(``\en\*('', так что есть что преобразовывать.
.IP
Для получения дополнительной информации смотрите \fBWhitespace Options\fP.
.
.IP "\fB--no-ok"
Скрывает кнопку \*(``OK\*('', так что она не отображается.
Скрипт все еще может проверить, нажал ли пользователь
клавишу \*(``Enter\*('' для подтверждения данных:
.RS
.bP
Клавиша \*(``Enter\*('' всегда обрабатывается как кнопка \*(``OK\*(''
при использовании параметры \fB\-\-no\-ok\fP.
По умолчанию она связана с виртуальной клавишей \fILEAVE\fP.
.IP
Когда \fB\-\-no\-ok\fP не используется,
можно использовать клавишу \fITab\fP для перемещения курсора по
полям и кнопкам виджета.
В этом случае клавиша \*(``Enter\*('' активирует текущую кнопку,
если курсор находится на кнопке.
.bP
Чтобы предусмотреть случай, когда вы хотите активировать кнопку
при использовании \fB\-\-no\-ok\fP,
есть другая виртуальная клавиша \fILEAVE\fP,
которая активирует текущую кнопку.
По умолчанию \fB^D\fP (EOF) привязан к этой клавише.
.RE
.
.IP "\fB--no-shadow"
Скрывает тени, которые были бы нарисованы справа и снизу каждого диалогового окна.
.
.IP "\fB--no-tags"
Некоторые виджеты (список с флажками, ввод с меню, радиосписок, меню) отображают список
с двумя колонками (\*(``тег\*('' и \*(``описание\*('').
Тег полезен для скриптов, но может не помоь пользователю.
Опция \fB\-\-no\-tags\fP (из Xdialog) может быть использована для скрытия
колонки тегов на экране.
В отличие от параметры \fB\-\-no\-items\fP,
она не влияет на данные, которые читаются из скрипта.
.IP
Xdialog не отображает колонку тегов для аналогичных виджетов buildlist
и treeview; \fB\*p\fP делает то же самое.
.IP
Обычно \fB\*p\fP позволяет быстро перейти к записям на отображаемом списке,
сопоставляя один символ с первым символом тега.
Когда задана опция \fB\-\-no\-tags\fP, \fB\*p\fP сопоставляет против
первого символа описания.
В любом случае, сопоставляемый символ выделяется.
.
.IP "\fB--ok-label \fIstring"
Заменяет метку, используемую для кнопок \*(``OK\*(''.
.
.IP "\fB--output-fd \fIfd"
Перенаправляет вывод на указанный файловый дескриптор.
Большинство скриптов \fB\*p\fR записывают в стандартную ошибку,
но сообщения об ошибках также могут быть там записаны, в зависимости от вашего скрипта.
.
.IP "\fB--separator \fIstring"
.IP "\fB--output-separator \fIstring"
Указывает строку, которая будет разделять вывод на выходе \fB\*p\fP от
списков, скорее чем новая строка (для \fB\-\-separate\-output\fP) или пробел.
Это относится к другим виджетам, таким как формы и редактирование текста, которые обычно
используют новую строку.
.
.IP "\fB--print-maxsize"
Печатает максимальный размер диалоговых окон, т.е. размер экрана,
на выходе \fB\*p\fP.
Эта опция может использоваться самостоятельно, без других опций.
.
.IP "\fB--print-size"
Печатает размер каждого диалогового окна на выходе \fB\*p\fP
когда окно инициализируется.
.
.IP "\fB--print-text-only \fIstring [ height [ width ] ]"
Печатает строку, как если бы она была обёрнута в окно сообщения
на выходе \fB\*p\fP.
.IP
Поскольку необязательные параметры \fIheight\fP и \fIwidth\fP по умолчанию равны нулю,
если они опущены, \fB\*p\fP автоматически подбирает размер в соответствии с размерами экрана.
.
.IP "\fB--print-text-size \fIstring [ height [ width ] ]"
Печатает размер строки, как если бы она была обёрнута в окно сообщения,
на выходе \fB\*p\fP,
как
.Ex
height width
.Ee
.IP
Поскольку необязательные параметры \fIheight\fP и \fIwidth\fP по умолчанию равны нулю,
если они опущены, \fB\*p\fP автоматически подбирает размер в соответствии с размерами экрана.
.
.IP "\fB--print-version"
Печатает версию \fB\*p\fR на выходе \fB\*p\fP.
Эта опция может использоваться самостоятельно, без других опций.
Она не заставляет \fB\*l\fP завершить работу самостоятельно.
.
.IP "\fB--quoted"
Обычно \fB\*p\fP заключает в кавычки строки, возвращаемые списком с флажками
и текстом помощи к элементам.
Используйте эту опцию, чтобы заключать в кавычки все результаты строк по мере необходимости
(т.е., если строка содержит пробелы или символы одинарной или двойной кавычки).
.
.IP "\fB--reorder"
По умолчанию виджет buildlist использует тот же порядок для выходного (правого)
списка, что и для входного (левого).
Используйте эту опцию, чтобы сообщить \fB\*p\fP использовать порядок,
в котором пользователь добавляет выборы в выходной список.
.
.IP "\fB--scrollbar"
Для виджетов, содержащих прокручиваемый набор данных,
рисует полосу прокрутки на правом краю.
Она не реагирует на мышь.
.
.IP "\fB--separate-output"
Для некоторых виджетов (buildlist, список с флажками, treeview),
выводит результат по одной строке за раз, без кавычек.
Это облегчает разбор другой программой.
.
.IP "\fB--separate-widget \fIstring"
Указывает строку, которая будет разделять вывод на выходе \fB\*p\fP от
каждого виджета.
Это используется для упрощения разбора результата диалога с несколькими виджетами.
Если эта опция не задана,
строка-разделитель по умолчанию — символ табуляции.
.
.IP "\fB--single-quoted"
Использует одинарные кавычки по мере необходимости (и без кавычек, если это не нужно) для
вывода списка с флажками, а также текста помощи к элементам.
.IP
Если эта опция не установлена, \fB\*p\fP может использовать двойные кавычки вокруг каждого элемента.
В любом случае,
\fB\*p\fP добавляет обратные косые черты, чтобы сделать вывод полезным в скриптах.
.IP
Одинарные кавычки необходимы, если
строка содержит пробелы или символы одинарной или двойной кавычки.
.
.IP "\fB--size-err"
Проверяет результирующий размер диалогового окна перед его использованием,
печатая результирующий размер, если он больше размера экрана.
(Эта опция устарела, поскольку все вызовы нового окна проверяются).
.
.IP "\fB--sleep \fIsecs"
Задерживает (приостанавливает) на заданное количество секунд после обработки диалогового окна.
.
.IP "\fB--stderr"
Перенаправляет вывод на стандартную ошибку.
Это значение по умолчанию, поскольку библиотека curses обычно записывает обновления экрана в
стандартный вывод.
.
.IP "\fB--stdout"
Перенаправляет вывод на стандартный вывод.
Эта опция предоставляется для совместимости с Xdialog,
однако использование её в переносимых скриптах не рекомендуется,
поскольку curses обычно записывает свои обновления экрана в стандартный вывод.
Если вы используете эту опцию, \fB\*p\fR пытается повторно открыть терминал,
чтобы иметь возможность писать на дисплей.
В зависимости от платформы и вашей среды это может не удаться.
.
.IP "\fB--tab-correct"
Преобразует каждый символ табуляции в один или несколько пробелов
(для виджета \fBtextbox\fP; в противном случае в один пробел).
В противном случае табуляции отображаются в соответствии с интерпретацией библиотеки curses.
Опция \fB\-\-no\-collapse\fP отключает расширение табуляции.
.
.IP "\fB--tab-len \fIn"
Указывает количество пробелов, которое занимает символ табуляции, если задана
\*(``\fB\-\-tab\-correct\fP\*('' опция.
Значение по умолчанию — 8.
Эта опция действует только для виджета \fBtextbox\fP.
.
.IP "\fB--time-format \fIformat"
Если хост предоставляет \fBstrftime\fP,
эта опция позволяет вам указать формат времени, печатаемого для
виджета \fB\-\-timebox\fP.
Значения дня, месяца, года в этом случае соответствуют текущему местному времени.
.
.IP "\fB--timeout \fIsecs"
Тайм-аут, если пользователь не отвечает в течение заданного количества секунд.
Тайм-аут в ноль секунд игнорируется.
.IP
Обычно тайм-аут приводит к вводу символа ESC в текущий виджет,
отменяя его.
Другие виджеты могут оставаться на экране;
они не отменяются.
Установите переменную окружения \fBDIALOG_TIMEOUT\fP, чтобы сообщить \fB\*l\fP,
что нужно немедленно выйти, т.е., отменить все виджеты на экране.
.IP
Эта опция игнорируется виджетом \*(``\fB\-\-pause\fP\*(''.
Она также переопределяется,
если используется фоновая опция \*(``\fB\-\-tailboxbg\fP\*('',
чтобы настроить несколько параллельных виджетов.
.
.IP "\fB--title \fItitle"
Указывает
\fItitle\fP
строку, которая будет отображаться в верхней части диалогового окна.
.
.IP "\fB--trace \fIfilename"
регистрирует параметры командной строки,
нажатия клавиш и другую информацию в указанный файл.
Если \fB\*l\fP читает конфигурационный файл, он также регистрируется.
Ввод в виджет \fIgauge\fP регистрируется.
Используйте control/T для регистрации изображения текущего диалогового окна.
.IP
Программа \fB\*p\fR особо обрабатывает некоторые параметры командной строки,
удаляя их из списка параметров по мере их обработки.
Например, если первая опция \fB\-\-trace\fP,
то она обрабатывается (и удаляется) до того, как \fB\*p\fR инициализирует дисплей.
.
.IP "\fB--week-start \fIday"
устанавливает начальный день недели,
используемый в параметры \*(``\fB\-\-calendar\fP\*(''.
Параметр \fIday\fP может быть
.RS
.bP
числом (от 0 до 6, воскресенье через субботу по POSIX) или
.bP
специальным значением \*(``locale\*('' (это работает с системами, использующими glibc,
предоставляя расширение для команды \fBlocale\fP,
значение \fBfirst_weekday\fP).
.bP
строкой, соответствующей одному из сокращений для дня недели
показано в виджете \fBcalendar\fP, например, \*(``Пн\*('' для \*(``понедельника\*(''.
.RE
.
.IP "\fB--trim"
устраняет ведущие пробелы,
усекает буквальные переводы строк и повторяющиеся пробелы из текста сообщения.
.IP
Опция \fItrim\fP реализуется при соблюдении следующих условий:
.RS
.bP
строка не содержит \*(``\en\*('' или
.bP
используется опция \fB\-\-no\-nl\-expand\fP.
.RE
.IP
Для получения дополнительной информации смотрите \fBWhitespace Options\fP.
.
.IP
см. также \*(``\fB\-\-cr\-wrap\fR\*(''
и \*(``\fB\-\-no\-collapse\fR\*('' параметры.
.
.IP "\fB--version"
Печатает версию \fB\*p\fR на стандартный вывод и завершает работу.
см. также \*(``\fB\-\-print\-version\fP\*(''.
.
.IP "\fB--visit-items"
Изменяет переход по вкладкам списка с флажками, радиосписка, меню и ввода с меню
для включения списка элементов как одного из состояний.
Это полезно в качестве визуальной помощи,
т.е. позиция курсора помогает некоторым пользователям.
.IP
Когда эта опция задана, курсор изначально помещается на список.
Сокращения (первая буква тега) применяются к элементам списка.
Если вы переключитесь на строку кнопок, сокращения применяются к кнопкам.
.
.IP "\fB--yes-label \fIstring"
Заменяет метку, используемую для кнопок \*(``Yes\*(''.
.
.\" ************************************************************************
.SS Box Options
Все диалоговые окна имеют по крайней мере три параметра:
.TP 7
\fItext\fP
заголовок или содержимое окна.
.TP 7
\fIheight\fP
высота диалогового окна.
.TP 7
\fIwidth\fP
ширина диалогового окна.
.PP
Другие параметры зависят от типа окна.
.
.IP "\fB\-\-buildlist \fItext height width list-height \fR[ \fItag item status \fR] \fI..."
Диалог \fBbuildlist\fP отображает два списка, рядом друг с другом.
Список слева показывает невыбранные элементы.
Список справа показывает выбранные элементы.
По мере выбора или отмены выбора элементы перемещаются между списками.
.IP
Используйте возврат каретки или кнопку \*(``OK\*('' для принятия текущего значения
в выбранном окне и выхода.
Результаты записываются в порядке, показанном в выбранном окне.
.IP
Начальное состояние включения/выключения каждой записи указывается
.IR status "."
.IP
Диалог ведет себя как \fBmenu\fP, используя \fB\-\-visit\-items\fP
для контроля того, разрешено ли курсору посещать списки напрямую.
.RS
.bP
Если \fB\-\-visit\-items\fP не задан,
переключение вкладок использует два состояния (OK/Отмена).
.bP
Если \fB\-\-visit\-items\fP задан,
переключение вкладок использует четыре состояния (Лево/Право/OK/Отмена).
.RE
.IP
Независимо от того, задан ли \fB\-\-visit\-items\fP,
можно перемещать выделение между двумя списками, используя
стандартные клавиши \*(``^\*('' (левая колонка) и \*(``$\*('' (правая колонка).
.IP
При выходе список строк \fItag\fP
тех записей, которые включены,
будет напечатан на выходе \fB\*p\fP.
.IP
Если опция "\fB\-\-separate\-output\fP" не задана,
строки будут заключены в кавычки по мере необходимости,
чтобы скрипты могли их легко разделить.
По умолчанию используются двойные кавычки, по мере необходимости.
Смотрите опцию \*(``\fB\-\-single\-quoted\fP\*('',
которая изменяет поведение кавычек.
.
.IP "\fB--calendar \fItext height width day month year"
Диалог \fBcalendar\fP отображает
месяц, день и год в отдельно настраиваемых окнах.
Если значения для дня, месяца или года отсутствуют или отрицательны,
используются соответствующие значения текущей даты.
Вы можете увеличивать или уменьшать любое из этих значений, используя
стрелки влево, вверх, вправо и вниз.
Используйте стиль vi h, j, k и l для перемещения по массиву дней в месяце.
Используйте tab или backtab для перемещения между окнами.
Если год задан нулем, в качестве начального значения используется текущая дата.
.IP
При выходе дата печатается в форме день/месяц/год.
Формат может быть изменен с помощью параметры \fB\-\-date\-format\fP.
.
.IP "\fB\-\-checklist \fItext height width list-height \fR[ \fItag item status \fR] \fI..."
Диалог \fBchecklist\fP похож на диалог \fBmenu\fP;
представлены множество записей в форме меню.
Другое отличие заключается в том,
что вы можете указать, какая запись в данный момент выбрана, установив ее
.IR status " в " on "."
Вместо выбора
одной записи среди записей, каждую запись можно включить или выключить пользователем.
Начальное состояние включения/выключения каждой записи указывается
.IR status "."
.IP
При выходе список строк \fItag\fP
тех записей, которые включены,
будет напечатан на выходе \fB\*p\fP.
.IP
Если опция \*(``\fB\-\-separate\-output\fP\*('' не задана,
строки будут заключены в кавычки по мере необходимости,
чтобы скрипты могли их легко разделить.
По умолчанию используются двойные кавычки (по мере необходимости).
Смотрите опцию \*(``\fB\-\-single\-quoted\fP\*('',
которая изменяет поведение кавычек.
.
.IP "\fB\-\-dselect \fIfilepath height width\fR"
Диалог выбора директории отображает окно ввода текста,
в котором вы можете ввести директорию,
и выше этого окна — окно с именами директорий.
.IP
Здесь
\fBfilepath\fP
может быть путем к файлу, в этом случае окно директорий
покажет содержимое пути, а окно ввода текста будет содержать
предварительно выбранную директорию.
.IP
Используйте клавиши tab или стрелки для перемещения между окнами.
В окне директорий используйте клавиши вверх/вниз
для прокрутки текущего выбора.
Используйте пробел для копирования текущего выбора в окно ввода текста.
.IP
Ввод любых печатных символов переключает фокус на окно ввода текста,
вводя этот символ, а также прокручивая окно директорий к наиболее подходящему совпадению.
.IP
Используйте возврат каретки или кнопку \*(``OK\*('' для принятия текущего значения
в окне ввода текста и выхода.
.IP
При выходе содержимое окна ввода текста записывается
на выходе \fB\*p\fP.
.
.IP "\fB\-\-editbox \fIfilepath height width\fR"
Диалог редактирования отображает копию файла.
Вы можете редактировать его, используя
клавиши \fIbackspace\fP, \fIdelete\fP и курсорные клавиши
для исправления ошибок при вводе.
Он также распознает клавиши pageup/pagedown.
В отличие от \fB\-\-inputbox\fP,
вы должны переключиться на кнопки \*(``OK\*('' или \*(``Отмена\*(''
для закрытия диалога.
Нажатие клавиши \*(``Enter\*('' внутри окна разделит
соответствующую строку.
.IP
При выходе содержимое окна редактирования записывается на выходе \fB\*p\fP.
.nf
.IP "\fB\-\-form \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen \fR] \fI..."
.fi
Диалог \fBform\fP отображает форму, состоящую из меток и полей,
которые размещаются в прокручиваемом окне по координатам, указанным в скрипте.
Длина поля \fIflen\fR и длина ввода \fIilen\fR указывают, какой длины может быть поле.
Первое определяет длину, отображаемую для выбранного поля,
в то время как второе определяет допустимую длину введенных в поле данных.
.RS
.bP
Если \fIflen\fR равно нулю, соответствующее поле изменять нельзя.
и содержимое поля определяет отображаемую длину.
.bP
Если \fIflen\fR отрицательно, соответствующее поле изменять нельзя,
и используется отрицательное значение \fIflen\fR как отображаемая длина.
.bP
Если \fIilen\fR равно нулю, оно устанавливается равным \fIflen\fR.
.RE
.IP
Используйте стрелки вверх/вниз (или control/N, control/P) для перемещения между полями.
Используйте tab для перемещения между окнами.
.IP
При выходе содержимое полей формы записывается в выходные данные \fB\*p\fP,
каждое поле разделено новой строкой.
Текст, используемый для заполнения неизменяемых полей
(\fIflen\fR равно нулю или отрицательно)
не выводится.
.
.IP "\fB\-\-fselect \fIfilepath height width\fR"
Диалог \fBfselect\fP (выбор файла) отображает окно ввода текста,
в котором вы можете ввести имя файла (или директории),
и выше этого два окна с именами директорий и файлами.
.IP
Здесь
\fBfilepath\fP
может быть путем к файлу, в этом случае окна файла и директории
будут отображать содержимое пути, а окно ввода текста будет содержать
предварительно выбранное имя файла.
.IP
Используйте tab или стрелки для перемещения между окнами.
В окнах директории или файла используйте стрелки вверх/вниз
для прокрутки текущего выбора.
Используйте пробел для копирования текущего выбора в окно ввода текста.
.IP
Ввод любых печатных символов переключает фокус на окно ввода текста,
вводя этот символ, а также прокручивая окна директории и файла к ближайшему совпадению.
.IP
Ввод пробела заставляет \fB\*p\fP завершить текущее
имя (до того момента, когда может быть совпадение более чем с одной
записью).
.IP
Используйте возврат каретки или кнопку \*(``OK\*('' для принятия текущего значения
в окне ввода текста и выхода.
.IP
При выходе содержимое окна ввода текста записывается
в выходные данные \fB\*p\fP.
.
.IP "\fB\-\-gauge \fItext height width [percent]\fR"
\fBgauge\fP
окно отображает метр внизу окна.
Метр показывает процентное соотношение.
Новые проценты считываются из
стандартного ввода, одно целое число на строку.
Метр обновляется
чтобы отражать каждый новый процент.
Если стандартный ввод читает строку \*(``XXX\*('',
то первая строка после этого принимается как процентное значение,
затем последующие строки до другого \*(``XXX\*('' используются для нового приглашения.
Индикатор выходит, когда на стандартном вводе достигается EOF.
.IP
Значение \fIpercent\fR обозначает начальный процент, показанный на метре.
Если не указано, оно равно нулю.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Виджет не принимает входные данные, поэтому статус выхода всегда OK.
.
.IP "\fB--infobox \fItext height width"
\fBinfo\fP окно по сути является \fBmessage\fP окном.
Однако в этом случае \fB\*p\fP
немедленно выходит после отображения сообщения пользователю.
Экран не очищается, когда \fB\*p\fP
выходит, так что сообщение останется на экране до тех пор, пока вызывающий
скрипт оболочки не очистит его позже.
Это полезно, когда вы хотите информировать
пользователя о том, что некоторые операции продолжаются, и они могут потребовать некоторого
времени для завершения.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Возвращается статус выхода OK.
.
.IP "\fB--inputbox \fItext height width [init]"
\fBinput\fP
окно полезно, когда вы хотите задать вопросы, которые
требуют от пользователя ввода строки в качестве ответа.
Если init предоставлено,
он используется для инициализации входной строки.
При вводе строки,
можно использовать клавиши \fIbackspace\fP, \fIdelete\fP и курсорные клавиши
для исправления ошибок при наборе.
Если входная строка длиннее,
чем может поместиться в диалоговом окне, поле ввода будет прокручиваться.
.IP
При выходе входная строка будет напечатана на выходе \fB\*p\fP.
.
.IP "\fB\-\-inputmenu \fItext height width menu-height \fR[ \fItag item \fR] \fI..."
\fBinputmenu\fP окно очень похоже на обычное \fBmenu\fP окно.
Между ними всего несколько различий:
.RS
.TP 4
1.
Записи не центрируются автоматически, а выравниваются по левому краю.
.TP
2.
Дополнительная кнопка (называемая \fIRename\/\fP) подразумевается для переименования
текущего элемента, когда она нажата.
.TP
3.
Возможно переименовать текущую запись, нажав кнопку
\fIRename\fP.
Тогда \fB\*p\fP напишет следующее в выходных данных \fB\*p\fP.
.IP
RENAMED <tag> <item>
.RE
.
.IP "\fB\-\-menu \fItext height width menu-height \fR[ \fItag item \fR] \fI..."
Как следует из названия, \fBmenu\fP
окно — это диалоговое окно, которое можно использовать для представления списка выбора в
форме меню для пользователя.
Выборы отображаются в данном порядке.
Каждая запись в меню состоит из строки \fItag\fP и строки \fIitem\fP.
\fItag\fP
дает записи имя, чтобы отличить ее от других записей в
меню.
\fIitem\fP — это краткое описание параметры, которую представляет запись.
Пользователь может перемещаться между записями меню, нажимая
курсорные клавиши, первую букву \fItag\fP
как горячую клавишу или цифровые клавиши \fI1\fP до \fI9\fP.
В меню одновременно отображается \fImenu-height\fP
записей, но меню будет прокручиваться, если записей больше, чем это.
.IP
При выходе \fItag\fP
выбранной записи меню будет напечатан на выходе \fB\*p\fP.
Если задана опция \*(``\fB\-\-help\-button\fR\*(''), соответствующий текст помощи
будет напечатан, если пользователь выберет кнопку помощи.
.
.nf
.IP "\fB\-\-mixedform \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen itype \fR] \fI..."
.fi
Диалог \fBmixedform\fP отображает форму, состоящую из меток и полей,
похожую на диалог \fB\-\-form\fP.
Он отличается добавлением параметра типа поля к описанию каждого поля.
Каждый бит в типе обозначает атрибут поля:
.RS
.TP 5
1
скрытое, например, поле для пароля.
.TP 5
2
только для чтения, например, метка.
.RE
.
.IP "\fB\-\-mixedgauge \fItext height width percent \fR[ \fItag1 item1 \fR] \fI..."
\fBmixedgauge\fP окно отображает метр внизу окна.
Метр показывает процентное соотношение.
.IP
Также отображает список значений \fItag\/\fP- и \fIitem\/\fP- в
верхней части окна.
Смотрите \*l(3) для значений тегов.
.IP
\fItext\fP показан как подпись между списком и метром.
Значение \fIpercent\fR обозначает начальный процент, показанный на метре.
.IP
Не предусмотрена возможность чтения данных со стандартного ввода, как это делает \fB\-\-gauge\fP.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Виджет не принимает входные данные, поэтому статус выхода всегда OK.
.
.IP "\fB--msgbox \fItext height width"
\fBmessage\fP окно очень похоже на \fByes/no\fP окно.
Единственное отличие между \fBmessage\fP окном и \fByes/no\fP
окном заключается в том, что \fBmessage\fP окно имеет только одну кнопку \fBOK\fP.
Вы можете использовать это диалоговое окно, чтобы отобразить любое сообщение, которое вам нравится.
После прочтения сообщения пользователь может нажать клавишу \fIENTER\fP, чтобы
\fB\*p\fP вышел, и вызывающий скрипт оболочки мог продолжить свою операцию.
.IP
Если сообщение слишком велико для пространства,
\fB\*p\fP может позволить вам прокрутить его,
если базовая реализация curses достаточно способна.
В этом случае процент отображается в основании виджета.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Предоставляется только кнопка \*(``OK\*('' для ввода,
но может быть возвращен статус выхода ESC.
.
.IP "\fB\-\-pause \fItext height width seconds\fR"
\fBpause\fP
окно отображает метр внизу окна.
Метр показывает, сколько секунд осталось до конца паузы.
Пауза завершается, когда достигается тайм-аут
или пользователь нажимает кнопку OK
(статус OK)
или пользователь нажимает кнопку ОТМЕНА
или клавишу Esc.
.IP "\fB--passwordbox \fItext height width [init]"
\fBpassword\fP окно похоже на окно ввода,
за исключением того, что текст, который вводит пользователь, не отображается.
Это полезно, когда запрашивают пароли или другую
чувствительную информацию.
Имейте в виду, что если что-то передается в \*(``init\*(''), это
будет видно в таблице процессов системы для случайных наблюдателей.
Также это
очень сбивает с толку пользователя, предоставляя им стандартный пароль, который они
не могут видеть.
По этим причинам использование \*(``init\*('') крайне не рекомендуется.
Смотрите \*(``\fB\-\-insecure\fP\*(''), если вам все равно на ваш пароль.
.IP
При выходе входная строка будет напечатана на выходе \fB\*p\fP.
.
.nf
.IP "\fB\-\-passwordform \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen \fR] \fI..."
.fi
Это идентично \fB\-\-form\fP, за исключением того, что все текстовые поля обрабатываются как
\fBpassword\fP виджеты, а не как \fBinputbox\fP виджеты.
.
.
.IP "\fB--prgbox \fItext command height width"
.IP "\fB--prgbox \fIcommand height width"
\fBprgbox\fP очень похож на \fBprogrambox\fP.
.IP
Это диалоговое окно используется для отображения вывода команды, которая
указана в качестве аргумента \fBprgbox\fP.
.IP
После завершения команды пользователь может нажать клавишу \fIENTER\fP, чтобы
\fB\*l\fP вышел, и вызывающий скрипт оболочки мог продолжить свою операцию.
.IP
Если заданы четыре параметра, отображается текст под заголовком,
отделенный от содержимого прокручиваемого файла.
Если задано только три параметра, этот текст опускается.
.
.
.IP "\fB--programbox \fItext height width"
.IP "\fB--programbox \fIheight width"
\fBprogrambox\fP очень похож на \fBprogressbox\fP.
Единственное отличие между \fBprogram\fP окном и \fBprogress\fP
окном заключается в том, что \fBprogram\fP окно отображает кнопку \fBOK\fP
(но только после завершения команды).
.IP
Это диалоговое окно используется для отображения конвейерного вывода команды.
После завершения команды пользователь может нажать клавишу \fIENTER\fP, чтобы
\fB\*l\fP вышел, и вызывающий скрипт оболочки мог продолжить свою операцию.
.IP
Если заданы три параметра, отображается текст под заголовком,
отделенный от содержимого прокручиваемого файла.
Если задано только два параметра, этот текст опускается.
.
.
.IP "\fB--progressbox \fItext height width"
.IP "\fB--progressbox \fIheight width"
\fBprogressbox\fP похож на \fBtailbox\fP,
за исключением того, что
.RS
.TP 3
a) вместо отображения содержимого файла,
он отображает конвейерный вывод команды и
.TP 3
b) он завершается, когда достигает конца файла
(кнопка \*(``OK\*('' отсутствует).
.RE
.IP
Если заданы три параметра, отображается текст под заголовком,
отделенный от содержимого прокручиваемого файла.
Если задано только два параметра, этот текст опускается.
.
.
.IP "\fB\-\-radiolist \fItext height width list-height \fR [ \fItag item status \fR] \fI..."
\fBradiolist\fP окно похоже на \fBmenu\fP окно.
Единственное отличие заключается
в том, что вы можете указать, какая запись в данный момент выбрана, установив ее
.IR status " в " on "."
.IP
При выходе тег выбранного элемента записывается в выходные данные \fB\*p\fP.
.
.nf
.IP "\fB--rangebox \fItext height width min-value max-value default-value"
.fi
Позволяет пользователю выбрать из диапазона значений, например, используя ползунок.
Диалог показывает текущее значение в виде полосы (как диалог индикатора).
Клавиши tab или стрелки перемещают курсор между кнопками и значением.
Когда курсор находится на значении,
вы можете редактировать его следующим образом:
.RS
.TP 5
движение курсора влево/вправо для выбора цифры для изменения
.TP 5
+/-
символы для увеличения/уменьшения цифры на один
.TP 5
0 до 9
для установки цифры в заданное значение
.RE
.IP
Некоторые клавиши также распознаются во всех позициях курсора:
.RS
.TP 5
home/end
устанавливает значение на его максимум или минимум
.TP 5
pageup/pagedown
увеличивает значение так, чтобы ползунок переместился на один столбец
.RE
.
.
.IP "\fB--tailbox \fIfile height width"
Отображает текст из файла в диалоговом окне,
как в команде \*(``tail -f\*('').
Прокрутка влево/вправо используя стиль vi 'h' и 'l', или стрелки.
'0' сбрасывает прокрутку.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Предоставляется только кнопка \*(``OK\*('' для ввода,
но может быть возвращен статус выхода ESC.
.
.
.IP "\fB--tailboxbg \fIfile height width"
Отображает текст из файла в диалоговом окне как фоновая задача,
как в команде \*(``tail -f &\*('').
Прокрутка влево/вправо используя стиль vi 'h' и 'l', или стрелки.
'0' сбрасывает прокрутку.
.IP
\*L особенно обрабатывает фоновую задачу, если на экране одновременно есть другие
виджеты (\fB\-\-and\-widget\fP).
Пока эти виджеты не закрыты (например, \*(``OK\*(''),
\fB\*p\fP будет выполнять все виджеты tailboxbg в одном процессе,
опрашивая обновления.
Вы можете использовать tab для переключения между виджетами на экране,
и закрыть их по отдельности, например, нажав \fIENTER\fP.
Как только виджеты, отличные от tailboxbg, закрыты,
\fB\*p\fP создает копию себя в фоновом режиме,
и печатает его идентификатор процесса, если задана опция \*(``\fB\-\-no\-kill\fP\*('').
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Предоставляется только кнопка \*(``EXIT\*('' для ввода,
но может быть возвращен статус выхода ESC.
.IP
ПРИМЕЧАНИЕ:
Старые версии \fB\*p\fP сразу создавали форк и пытались
обновить экран индивидуально.
Помимо плохой производительности,
это было непрактично.
Некоторые старые скрипты могут не работать должным образом с опрошенной схемой.
.
.
.IP "\fB--textbox \fIfile height width"
\fBtext\fP
окно позволяет отобразить содержимое текстового файла в диалоговом окне.
Это как простой просмотрщик текстовых файлов.
Пользователь может перемещаться по файлу, используя
курсор, page-up, page-down
и клавиши \fIHOME/END\fR, доступные на большинстве клавиатур.
Если строки слишком длинные для отображения в окне,
клавиши \fILEFT/RIGHT\fP
можно использовать для горизонтальной прокрутки текстовой области.
Вы также можете использовать клавиши vi стиля h, j, k и l вместо курсорных клавиш,
и B или N вместо клавиш page-up и page-down.
Прокрутка вверх/вниз используя стиль vi 'k' и 'j', или стрелки.
Прокрутка влево/вправо используя стиль vi 'h' и 'l', или стрелки.
'0' сбрасывает горизонтальную прокрутку.
Для большего удобства,
также предоставляются функции поиска вперед и назад в стиле vi.
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Предоставляется только кнопка \*(``EXIT\*('' для ввода,
но может быть возвращен статус выхода ESC.
.
.
.IP "\fB--timebox \fItext height [width hour minute second]"
Диалог отображается, позволяя выбрать час, минуту и секунду.
Если значения для часа, минуты или секунды отсутствуют или отрицательны,
используются соответствующие значения текущей даты.
Вы можете увеличивать или уменьшать любое из этих значений, используя
стрелки влево, вверх, вправо и вниз.
Используйте tab или backtab для перемещения между окнами.
.IP
При выходе результат печатается в форме час:минута:секунда.
Формат может быть изменен с помощью параметры \fB\-\-time\-format\fP.
.
.
.IP "\fB\-\-treeview \fItext height width list-height \fR[ \fItag item status depth \fR] \fI..."
Отображает данные, организованные как дерево.
Каждая группа данных содержит тег,
текст для отображения элемента,
его статус (\*(``on\*('' или \*(``off\*('')
и глубину элемента в дереве.
.IP
Выбрать можно только один элемент (как в \fBradiolist\fP).
Тег не отображается.
.IP
При выходе тег выбранного элемента записывается в выходные данные \fB\*p\fP.
.
.
.IP "\fB--yesno \fItext height width"
Диалоговое окно \fByes/no\fP размером
\fIheight\fP строк на \fIwidth\fP столбцов будет отображаться.
Строка, указанная \fItext\fP,
отображается внутри диалогового окна.
Если эта строка слишком длинная, чтобы поместиться
в одну строку, она будет автоматически разделена на несколько строк в
подходящих местах.
Строка
\fItext\fP
также может содержать подстроку
.RI """" \en """"
или символы новой строки
.RI ` \en '
для явного управления разрывом строк.
Это диалоговое окно полезно для
задания вопросов, требующих от пользователя ответа либо да, либо нет.
Диалоговое окно имеет кнопку
\fBYes\fP
и кнопку
\fBNo\fP, между которыми пользователь может переключаться, нажимая
.IR TAB " клавишу."
.IP
При выходе текст не записывается в выходные данные \fB\*p\fP.
Помимо кодов выхода \*(``Yes\*('' и \*(``No\*('' (см. ДИАГНОСТИКУ)
может быть возвращен статус выхода ESC.
.IP
Коды, используемые для \*(``Yes\*('' и \*(``No\*(''
соответствуют тем, которые используются для \*(``OK\*('' и \*(``Cancel\*('',
внутри не делается различий.
.
.\" ************************************************************************
.SS "Obsolete Options"
.\" от cdialog 0.9a (Pako)
.IP "\fB--beep"
Это использовалось, чтобы сказать оригинальному cdialog, что он должен издать звуковой сигнал
когда отдельные процессы виджета tailboxbg перерисовывали экран.
.
.\" от cdialog 0.9a (Pako)
.IP "\fB--beep-after"
Звуковой сигнал после того, как пользователь завершил работу с виджетом, нажав одну из кнопок.
.
.\" ************************************************************************
.SS "Whitespace Options"
.PP
Эти параметры можно использовать для преобразования пробелов (пробел, табуляция, новая строка)
пока dialog читает скрипт:
.RS
.BR --cr-wrap ,
.BR --no-collapse ,
.BR --no-nl-expand ", и"
.B --trim
.RE
.PP
параметры не независимы:
.bP
\fB\*L\fP проверяет, содержит ли скрипт хотя бы один \*(``\en\*(''
и (если не установлен \fB\-\-no\-nl\-expand\fP) игнорирует
\fB\-\-no\-collapse\fP и \fB\-\-trim\fP параметры.
.bP
После проверки на \*(``\en\*('' и опцию \fB\-\-no\-nl\-expand\fP,
\fB\*l\fP обрабатывает опцию \fB\-\-trim\fP.
.IP
Если опция \fB\-\-trim\fP вступает в силу,
то \fB\*l\fP игнорирует \fB\-\-no\-collapse\fP.
Он превращает последовательности табуляций, пробелов
(и новых строк, если не установлен \fB\-cr\-wrap\fP) в один пробел.
.bP
Если случаи с \*(``\en\*('' или \fB\-\-trim\fP не применяются,
\fB\*l\fP проверяет \fB\-\-no\-collapse\fP, чтобы решить, следует ли уменьшить
последовательности табуляций и пробелов до одного пробела.
.IP
В этом случае \fB\*l\fP игнорирует \fB\-\-cr\-wrap\fP и не изменяет новые строки.
.PP
Учитывая эти зависимости,
вот таблица, которая резюмирует поведение
для различных комбинаций опций.
В таблице предполагается, что скрипт содержит хотя бы один \*(``\en\*('')
когда опция \fB\-\-no\-nl\-expand\fP не установлена.
.na
.RS 5
.TS
tab(/) ;
lB lB lB lB lB
lB lB lB lB lB
_ _ _ _ _
lw4 lw4 lw4 lw4 lw29.
cr-/no-/no-/trim/Result
wrap/collapse/nl-expand
no/no/no/no/T{
Преобразовать табуляцию в пробел.
Преобразовать новую строку в пробел.
Преобразовать \*(``\en\*('' в новую строку.
T}
no/no/no/yes/T{
Преобразовать табуляцию в пробел.
Преобразовать новую строку в пробел.
Преобразовать \*(``\en\*('' в новую строку.
T}
no/no/yes/no/T{
Преобразовать табуляцию в пробел.
Не преобразовывать новую строку в пробел.
Преобразовать множественный пробел в один.
Показывать \*(``\en\*('' буквально.
T}
no/no/yes/yes/T{
Преобразовать табуляцию в пробел.
Преобразовать множественный пробел в один.
Преобразовать новую строку в пробел.
Показывать \*(``\en\*('' буквально.
T}
no/yes/no/no/T{
Преобразовать новую строку в пробел.
Преобразовать \*(``\en\*('' в новую строку.
T}
no/yes/no/yes/T{
Преобразовать новую строку в пробел.
Преобразовать \*(``\en\*('' в новую строку.
T}
no/yes/yes/no/T{
Не преобразовывать новую строку в пробел.
Не уменьшать множественные пробелы.
Показывать \*(``\en\*('' буквально.
T}
no/yes/yes/yes/T{
Преобразовать множественный пробел в один.
Преобразовать новую строку в пробел.
Показывать \*(``\en\*('' буквально.
T}
yes/no/no/no/T{
Преобразовать табуляцию в пробел.
Перенос по новой строке.
Преобразовать \*(``\en\*('' в новую строку.
T}
yes/no/no/yes/T{
Преобразовать табуляцию в пробел.
Перенос по новой строке.
Преобразовать \*(``\en\*('' в новую строку.
T}
yes/no/yes/no/T{
Преобразовать табуляцию в пробел.
Не преобразовывать новую строку в пробел.
Преобразовать множественный пробел в один.
Показывать \*(``\en\*('' буквально.
T}
yes/no/yes/yes/T{
Преобразовать табуляцию в пробел.
Преобразовать множественный пробел в один.
Перенос по новой строке.
Показывать \*(``\en\*('' буквально.
T}
yes/yes/no/no/T{
Перенос по новой строке.
Преобразовать \*(``\en\*('' в новую строку.
T}
yes/yes/no/yes/T{
Перенос по новой строке.
Преобразовать \*(``\en\*('' в новую строку.
T}
yes/yes/yes/no/T{
Не преобразовывать новую строку в пробел.
Не уменьшать множественные пробелы.
Показывать \*(``\en\*('' буквально.
T}
yes/yes/yes/yes/T{
Преобразовать множественный пробел в один.
Перенос по новой строке.
Показывать \*(``\en\*('' буквально.
T}
.TE
.RE
.ad
.
.\" ************************************************************************
.SH "КОНФИГУРАЦИЯ ВО ВРЕМЯ РАБОТЫ"
.TP 4
1.
Создайте образец файла конфигурации, набрав:
.LP
.Ex
\*p \-\-create\-rc \fIfile\fP
.Ee
.TP 4
2.
При запуске,
\fB\*p\fP
определяет настройки следующим образом:
.RS
.TP 4
a)
если установлена переменная окружения
\fBDIALOGRC\fP,
её значение определяет имя файла конфигурации.
.TP 4
b)
если файл в (a) не найден, используется файл
\fI$HOME/.dialogrc\fP
как файл конфигурации.
.TP 4
c)
если файл в (b) не найден, попробуйте использовать файл GLOBALRC, определенный
во время компиляции, т.е., \fI/etc/dialogrc\fP.
.TP 4
d)
если файл в (c) не найден, используйте встроенные значения по умолчанию.
.RE
.TP 4
3.
Отредактируйте образец файла конфигурации и скопируйте его в место, которое
\fB\*p\fP
может найти, как указано на шаге 2 выше.
.
.\" ************************************************************************
.SH "НАЗНАЧЕНИЕ КЛАВИШ"
Вы можете переопределить или добавить привязки клавиш в \fB\*p\fP,
добавив их в файл конфигурации.
Команда \fB\*L\fP \fBbindkey\fP связывает отдельные клавиши с их внутренним кодированием.
.Ex
bindkey \fIwidget\fP \fIcurses_key\fP \fIdialog_key\fP
.Ee
.PP
Имя \fIwidget\fP может быть \*(``*\*('' (все виджеты), или
конкретные виджеты, такие как \fBtextbox\fP.
Привязки конкретного виджета переопределяют привязки \*(``*\*(''.
Привязки, определенные пользователем, переопределяют встроенные привязки.
.PP
\fIcurses_key\fP может быть выражен в разных формах:
.bP
Это может быть любое из имен, производных от
\fBcurses.h\fP, например, \*(``HELP\*('' из \*(``KEY_HELP\*(''.
.bP
\fB\*L\fP также распознает символы управления ANSI,
такие как \*(``^A\*('', \*(``^?\*('',
а также управляющие символы C1, такие как \*(``~A\*('' и \*(``~?\*(''.
.bP
Наконец, \fB\*l\fP допускает управляющие последовательности как в C.
Это могут быть восьмеричные значения символов, такие как \*(``\\033\*('')
(символ управления ASCII),
или символы, перечисленные в этой таблице:
.RS 10
.TS
tab(/) ;
lI lI
_ _
l l .
Escaped/Actual
\\b/backspace
\\f/form feed
\\n/new line (line feed)
\\r/carriage return
\\s/space
\\t/tab
\\^/\*(``^\*('' (caret)
\\?/\*(``?\*('' (question mark)
\\\\/\*(``\\\*('' (backslash)
_
.TE
.RE
.PP
Внутренние имена кодов клавиш \fB\*L\fP соответствуют типу
\fBDLG_KEYS_ENUM\fP в
\fBdlg_keys.h\fP, например, \*(``HELP\*('' из \*(``DLGK_HELP\*(''.
.SS Имена виджетов
.PP
Некоторые виджеты (например, форма) имеют область, где можно редактировать поля.
Они управляются в подокне виджета и
могут иметь отдельные привязки клавиш от основного виджета,
потому что подокна регистрируются под другим именем.
.RS 5
.TS
tab(/) ;
lI lI lI
_ _ _
l l l .
Widget/Window name/Subwindow Name
calendar/calendar
checklist/checklist
editbox/editbox/editbox2
form/formbox/formfield
fselect/fselect/fselect2
inputbox/inputbox/inputbox2
menu/menubox/menu
msgbox/msgbox
pause/pause
progressbox/progressbox
radiolist/radiolist
tailbox/tailbox
textbox/textbox/searchbox
timebox/timebox
yesno/yesno
_
.TE
.RE
.PP
Некоторые виджеты на самом деле являются другими виджетами,
использующими внутренние настройки для изменения поведения.
Они используют то же имя виджета, что и фактический виджет:
.RS 5
.TS
tab(/) ;
lI lI
_ _
l l .
Widget/Actual Widget
dselect/fselect
infobox/msgbox
inputmenu/menu
mixedform/form
passwordbox/inputbox
passwordform/form
prgbox/progressbox
programbox/progressbox
tailboxbg/tailbox
_
.TE
.RE
.SS Встроенные привязки
Эта страница руководства не перечисляет привязки клавиш для каждого виджета,
потому что эту подробную информацию можно получить, запустив \fB\*p\fP.
Если вы установили опцию \fB\-\-trace\fP,
\fB\*p\fP записывает информацию о привязке клавиш для каждого виджета
при его регистрации.
.SS Пример
Обычно \fB\*p\fP использует разные клавиши для навигации между кнопками
и редактируемой частью диалога в сравнении с навигацией внутри редактируемой части.
То есть, tab (и back-tab) переключают кнопки
(или между кнопками и редактируемой частью),
в то время как стрелочные клавиши переключают поля внутри редактируемой части.
Tab также распознается как особый случай для переключения между
виджетами, например, при использовании нескольких виджетов tailboxbg.
.PP
Некоторые пользователи могут захотеть использовать ту же клавишу для навигации внутри
редактируемой части, как и для переключения между кнопками.
Виджет формы написан так, чтобы поддерживать такое переопределение
клавиш, добавляя специальную группу в \fBdlgk_keys.h\fP
для \*(``form\*('' (left/right/next/prev).
Вот пример привязки, демонстрирующей, как это сделать:
.Ex
bindkey formfield TAB  form_NEXT
bindkey formbox   TAB  form_NEXT
bindkey formfield BTAB form_prev
bindkey formbox   BTAB form_prev
.Ee
.PP
Такое переопределение не будет полезно в других виджетах,
например, calendar, из-за потенциально большого количества полей для переключения.
.
.\" ************************************************************************
.SH СРЕДА
.TP 15
\fBDIALOGOPTS\fP
Определите эту переменную, чтобы применить любые общие параметры ко всем виджетам.
Большинство общих опций сбрасываются перед обработкой каждого виджета.
Если вы установите параметры в этой переменной окружения,
они будут применены к состоянию \fB\*p\fP после сброса.
Как в параметры \*(``\fB\-\-file\fP\*(''),
двойные кавычки и обратные слэши интерпретируются.
.IP
Опция \*(``\fB\-\-file\fP\*('' не считается общей опцией
(поэтому вы не можете включить её в эту переменную окружения).
.TP 15
\fBDIALOGRC\fP
Определите эту переменную, если вы хотите указать имя файла конфигурации
для использования.
.TP 15
\fBDIALOG_CANCEL\fP
.TP 15
\fBDIALOG_ERROR\fP
.TP 15
\fBDIALOG_ESC\fP
.TP 15
\fBDIALOG_EXTRA\fP
.TP 15
\fBDIALOG_HELP\fP
.TP 15
\fBDIALOG_ITEM_HELP\fP
.TP 15
\fBDIALOG_TIMEOUT\fP
.TP 15
\fBDIALOG_OK\fP
Определите любую из этих переменных, чтобы изменить КОД ЗАВЕРШЕНИЯ на
.RS
.bP
Отмена (1),
.bP
ошибка (\-1),
.bP
ESC (255),
.bP
Дополнительно (3),
.bP
Помощь (2),
.bP
Помощь с \fB\-\-item\-help\fP (2),
.bP
Тайм-аут (5), или
.bP
OK (0).
.RE
.IP
Обычно скрипты оболочки не могут различить \-1 и 255.
.TP 15
\fBDIALOG_TTY\fP
Установите эту переменную в \*(``1\*('' для обеспечения совместимости со старыми версиями
\fB\*p\fP, которые предполагали, что если скрипт перенаправляет стандартный вывод,
то дана опция \*(``\fB\-\-stdout\fP\*('').
.SH ФАЙЛЫ
.TP 20
\fI$HOME/.dialogrc\fP
файл конфигурации по умолчанию
.SH ПРИМЕРЫ
Исходные коды \fB\*p\fP содержат несколько примеров
использования различных опций окна и того, как они выглядят.
Просто посмотрите в каталог \fBsamples/\fP исходников.
.SH ДИАГНОСТИКА
Статус выхода подлежит изменению с помощью переменных окружения.
Стандартные значения и соответствующие переменные окружения,
которые могут их переопределить, это:
.TP 5
0
если нажата кнопка \fBYES\fP или \fBOK\fP (DIALOG_OK).
.TP 5
1
если нажата
.BR кнопка " No " или " Cancel "
(DIALOG_CANCEL).
.TP 5
2
если нажата кнопка
.B Help
(DIALOG_HELP),
.br
кроме как отмечено ниже о DIALOG_ITEM_HELP.
.TP 5
3
если нажата кнопка
.B Extra
(DIALOG_EXTRA).
.TP 5
4
если нажата кнопка
.B Help,
.br
и установлена опция \fB\-\-item\-help\fP
.br
и переменная окружения DIALOG_ITEM_HELP установлена в 4.
.IP
Хотя любой из кодов выхода может быть переопределен с помощью переменных окружения,
этот специальный случай был введен в 2004 году для упрощения совместимости.
\fB\*L\fP использует DIALOG_ITEM_HELP(4) внутренне,
но если переменная окружения также не установлена,
она изменяет это на DIALOG_HELP(2) при выходе.
.TP 5
5
если истекает тайм-аут и переменная \fBDIALOG_TIMEOUT\fP установлена в 5.
.TP 5
\-1
если внутри \fB\*p\fP происходят ошибки (DIALOG_ERROR)
или \fB\*p\fP выходит, потому что нажата клавиша \fIESC\fP (DIALOG_ESC).
.
.\" ************************************************************************
.SH ПЕРЕНОСИМОСТЬ
\fB\*L\fP работает с X/Open curses.
Однако некоторые реализации имеют недостатки:
.RS 3
.bP
HPUX curses (и, возможно, другие) не открывают терминал должным образом для
функции \fInewterm\fP.
Это мешает параметры \fB\*p\fP \fB\-\-input\-fd\fP,
препятствуя распознаванию клавиш курсора и аналогичных управляющих последовательностей.
.bP
NetBSD 5.1 curses имеет неполную поддержку широких символов.
\fB\*p\fP будет собираться, но не все примеры будут отображаться должным образом.
.RE
.\" ************************************************************************
.SH СОВМЕСТИМОСТЬ
Вы можете захотеть написать скрипты, которые работают с
другими \fB\*l\fP \*(``клонами\*('').
.SS Оригинальный Dialog
Во-первых, есть \*(``оригинальная\*('' программа \fB\*p\fP, которую следует учитывать
(версии 0.3 до 0.9).
Она имела некоторые ошибочно написанные (или несогласованные) параметры.
Программа \fB\*p\fP сопоставляет эти устаревшие параметры с предпочтительными.
К ним относятся:
.RS
.TS
tab(/) ;
lI lI
_ _
l l.
Option/Treatment
\fB\-\-beep\-after\fP/игнорируется
\fB\-\-guage\fP/преобразуется в \fB\-\-gauge\fP
_
.TE
.RE
.SS Xdialog
Это X-приложение, а не терминальная программа.
С некоторой осторожностью возможно написать полезные скрипты, которые работают
и с \fBXdialog\fP, и с \fB\*p\fP.
.PP
Программа \fB\*p\fP игнорирует эти параметры, которые распознаются
\fBXdialog\fP:
.RS
.TS
tab(/) ;
lI lI
_ _
l l.
Option/Treatment
\fB\-\-allow\-close\fP/игнорируется
\fB\-\-auto\-placement\fP/игнорируется
\fB\-\-fixed\-font\fP/игнорируется
\fB\-\-icon\fP/игнорируется
\fB\-\-keep\-colors\fP/игнорируется
\fB\-\-no\-close\fP/игнорируется
\fB\-\-no\-cr\-wrap\fP/игнорируется
\fB\-\-screen\-center\fP/игнорируется
\fB\-\-separator\fP/преобразуется в \fB\-\-separate\-output\fP
\fB\-\-smooth\fP/игнорируется
\fB\-\-under\-mouse\fP/игнорируется
\fB\-\-wmclass\fP/игнорируется
_
.TE
.RE
.PP
Страница руководства \fBXdialog\fP содержит раздел, обсуждающий её совместимость
с \fB\*p\fP.
Существуют некоторые различия, не показанные в руководстве.
Например, документация в HTML утверждает
.RS
.PP
Примечание: предыдущие версии Xdialog использовали \*(``\en\*('' (перевод строки) в качестве
разделителя результатов для виджета checklist;
это было изменено на \*(``/\*('' в Xdialog v1.5.0
для совместимости с (c)dialog.
В ваших старых скриптах, использующих checklist Xdialog, вы
тогда должны добавить опцию \fB\-\-separate\-output\fP перед
опцией \fB\-\-checklist\fP.
.RE
.PP
\fB\*L\fP не использовал другой разделитель;
различие, вероятно, было связано с путаницей относительно некоторого скрипта.
.SS Whiptail
Затем есть \fBwhiptail\fP.
На практике его поддерживает Debian
(очень мало работы проводится его первоначальными разработчиками).
Его документация (README.whiptail) утверждает
.Ex
whiptail(1) — это легковесная замена для \*p(1),
чтобы предоставить диалоговые окна для скриптов оболочки.
Он построен на
библиотеке окон newt, а не на библиотеке ncurses, что позволяет
сделать его меньше во встроенных средах, таких как установщики,
спасательные диски и т. д.

whiptail предназначен для замены \*p, но
имеет меньше функций: некоторые диалоговые окна не реализованы, такие
как tailbox, timebox, calendarbox и т. д.
.Ee
.PP
Сравнивая фактические размеры (тестирование Debian, 2007/1/10):
Общий размер для \fBwhiptail\fP,
библиотек newt, popt и slang составляет 757\ KB.
Соответствующее число для \fB\*p\fP (с учетом ncurses) составляет 520\ KB.
Игнорируйте первый абзац.
.PP
Второй абзац вводит в заблуждение, поскольку \fBwhiptail\fP
также не работает для общих опций \fB\*p\fP,
таких как индикатор.
\fBwhiptail\fP менее совместим с \fB\*p\fP, чем
оригинальная программа dialog середины 1990-х годов версии 0.4.
.PP
Страница руководства \fBwhiptail\fP заимствует функции из \fB\*p\fP, например,
но странно цитирует только версии \fB\*p\fP до 0.4 (1994) в качестве источника.
То есть, его страница руководства ссылается на функции, которые
были заимствованы из более поздних версий \fB\*p\fP, например,
.bP
\fB\-\-gauge\fP (из 0.5)
.bP
\fB\-\-passwordbox\fP (из изменений Debian в 1999 году),
.bP
\fB\-\-default\-item\fP (из \fB\*p\fP 2000/02/22),
.bP
\fB\-\-output\-fd\fP (из \fB\*p\fP 2002/08/14).
.PP
С некоторой долей юмора можно отметить, что функция \fBpopt\fP
(не задокументированная в его странице руководства)
использования \*(``--\*('' в качестве escape была задокументирована в странице руководства \fB\*p\fP примерно за год до того, как она упомянута в странице руководства \fBwhiptail\fP.
Страница руководства \fBwhiptail\fP неверно приписывает это \fBgetopt\fP
(и в любом случае неточно).
.PP
Debian использует \fBwhiptail\fP для официальной вариации \fB\*p\fP.
.PP
Программа \fB\*p\fP игнорирует или сопоставляет эти параметры, которые распознаются
\fBwhiptail\fP:
.RS
.TS
tab(/) ;
lI lI
_ _
l l.
Option/Treatment
\fB\-\-cancel\-button\fP/сопоставляется с \fB\-\-cancel\-label\fP
\fB\-\-fb\fP/игнорируется
\fB\-\-fullbutton\fP/игнорируется
\fB\-\-no\-button\fP/сопоставляется с \fB\-\-no\-label\fP
\fB\-\-nocancel\fP/сопоставляется с \fB\-\-no\-cancel\fP
\fB\-\-noitem\fP/сопоставляется с \fB\-\-no\-items\fP
\fB\-\-notags\fP/сопоставляется с \fB\-\-no\-tags\fP
\fB\-\-ok\-button\fP/сопоставляется с \fB\-\-ok\-label\fP
\fB\-\-scrolltext\fP/сопоставляется с \fB\-\-scrollbar\fP
\fB\-\-topleft\fP/сопоставляется с \fB\-\-begin 0 0\fP
\fB\-\-yes\-button\fP/сопоставляется с \fB\-\-yes\-label\fP
_
.TE
.RE
.LP
Существуют визуальные различия, которые не учитываются опциями командной строки:
.bP
\fB\*p\fP центрирует списки в окне.
\fBwhiptail\fP обычно размещает списки у левого края.
.bP
\fBwhiptail\fP использует угловые скобки (\*(``<\*('' и \*(``>\*('')
для обозначения кнопок.
\fB\*p\fP использует квадратные скобки.
.bP
\fBwhiptail\fP обозначает границы подзаголовков вертикальными полосами.
\fB\*p\fP не обозначает границы.
.bP
\fBwhiptail\fP пытается обозначить верхние/нижние ячейки полосы прокрутки
стрелками вверх/вниз.
Когда это невозможно,
он заполняет эти ячейки цветом фона
полосы прокрутки и сбивает пользователя с толку.
\fB\*p\fP использует весь пространство полосы прокрутки,
тем самым получая лучшее разрешение.
.\" ************************************************************************
.SH ОШИБКИ
Возможно.
.SH АВТОР
.LP
Томас Е.\& Дики (обновления с 0.9b и выше)
.SH УЧАСТНИКИ
Киран Черупалли \(en виджеты смешанной формы и смешанного индикатора.
.LP
Тобиас C.\& Риттвейлер
.LP
Валерий Резник \(en виджеты формы и прогрессбокса.
.LP
Юра Калиниченко адаптировал виджет индикатора как \*(``pause\*(''.
.PP
Это переписывание (за исключением случаев, необходимых для обеспечения совместимости)
ранней версии \fB\*p 0.9a\fP,
которая перечисляет в качестве авторов:
.bP
Савио Лам \(en версия 0.3, \*(``dialog\*('')
.bP
Стюарт Герберт \(en патч для версии 0.4
.bP
Марк Юинг \(en виджет индикатора.
.bP
Паскуале Де Марко \*(``Pako\*('' \(en версия 0.9a, \*(``cdialog\*('')
