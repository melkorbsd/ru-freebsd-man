.\" CDDL HEADER START
.\"
.\" Содержимое этого файла подпадает под условия
.\" Common Development and Distribution License ("Лицензия").
.\" Вы не можете использовать этот файл, кроме как в соответствии с Лицензией.
.\"
.\" Вы можете получить копию Лицензии по адресу usr/src/OPENSOLARIS.LICENSE
.\" или http://www.opensolaris.org/os/licensing.
.\" Ознакомьтесь с Лицензией для конкретного языка, регулирующего права
.\" и ограничения по Лицензии.
.\"
.\" При распространении защищенного кода включайте этот заголовок CDDL в каждый
.\" файл и включайте файл Лицензии по адресу usr/src/OPENSOLARIS.LICENSE.
.\" Если применимо, добавьте следующее под этим заголовком CDDL, заменив
.\" поля, заключенные в квадратные скобки "[]", вашей информацией: Portions Copyright [yyyy] [имя копирайтера]
.\"
.\" CDDL HEADER END
.\" Авторское право (c) 2006, Sun Microsystems, Inc. Все права защищены.
.\"
.\" $FreeBSD$
.\"
.Dd 24 февраля 2023 года
.Dt DTRACE 1
.Os
.Sh НАЗВАНИЕ
.Nm dtrace
.Nd компилятор динамического трассирования и утилита трассировки
.Sh СИНТАКСИС
.Nm
.Op Fl 32 | Fl 64
.Op Fl aACdeFGhHlqSvVwZ
.Op Fl b Ar bufsz
.Op Fl c Ar cmd
.Op Fl D Ar name Op Ns = Ns value
.Op Fl I Ar path
.Op Fl L Ar path
.Op Fl o Ar output
.Op Fl s Ar script
.Op Fl U Ar name
.Op Fl x Ar arg Op Ns = Ns value
.Op Fl X Cm a | c | s | t
.Op Fl p Ar pid
.Op Fl P Ar provider Oo Oo Ar predicate Oc Ar action Oc
.Op Fl m Oo Ar provider : Oc Ar module Oo Oo Ar predicate Oc Ar action Oc
.Op Fl f Oo Oo Ar provider : Oc Ar module : Oc Ar function Oo Oo Ar predicate \
    Oc Ar action Oc
.Op Fl n Oo Oo Oo Ar provider : Oc Ar module : Oc Ar function : Oc Ar name \
    Oo Oo Ar predicate Oc Ar action Oc
.Op Fl i Ar probe-id Oo Oo Ar predicate Oc Ar action Oc
.Sh ОПИСАНИЕ
DTrace — это комплексная инфраструктура динамического трассирования, портированная из Solaris.
DTrace предоставляет мощную инфраструктуру, которая позволяет администраторам,
разработчикам и служебному персоналу кратко отвечать на произвольные вопросы о
поведении операционной системы и пользовательских программ.
.Pp
Команда
.Nm
предоставляет общий интерфейс к основным службам, предоставляемым
инструментом DTrace, включая:
.Bl -bullet -offset indent
.It
параметры, которые отображают набор проб и провайдеров, опубликованных в данный момент DTrace
.It
параметры, которые позволяют напрямую использовать пробы с использованием любых описателей проб
(провайдер, модуль, функция, имя)
.It
параметры, которые запускают компилятор D и компилируют один или несколько файлов программ D или программ, написанных непосредственно на командной строке
.It
параметры, которые генерируют анонимные программы трассировки
.It
параметры, которые генерируют отчеты о стабильности программ
.It
параметры, которые изменяют поведение трассировки и буферизации DTrace и включают
дополнительные функции компилятора D
.El
.Pp
Вы можете использовать
.Nm
для создания D-скриптов, используя ее в объявлении shebang для создания
файла интерпретатора.
Вы также можете использовать
.Nm
для попытки скомпилировать программы D и определить их свойства без
фактического включения трассировки, используя опцию
.Fl e .
.Sh ПАРАМЕТРЫ
Аргументы, принимаемые
.Fl P ,
.Fl m ,
.Fl f ,
.Fl n ,
и
.Fl i
опциями, могут включать необязательный предикат языка D,
заключенный в косые черты, и необязательный список операторов языка D,
заключенный в фигурные скобки.
Код программ D, указанный в командной строке, должен быть должным образом процитирован, чтобы
избежать интерпретации метасимволов оболочкой.
.Pp
Поддерживаются следующие параметры:
.Bl -tag -width indent
.It Fl 32 | Fl 64
Компилятор D создает программы, используя нативную модель данных ядра операционной
системы.
Если указана опция
.Fl 32 ,
.Nm
заставляет компилятор D компилировать программу D с использованием 32-битной модели данных.
Если указана опция
.Fl 64 ,
.Nm
заставляет компилятор D компилировать программу D с использованием 64-битной модели данных.
Эти параметры обычно не требуются, так как
.Nm
выбирает нативную модель данных по умолчанию.
Модель данных влияет на размеры целочисленных типов и другие свойства языка.
Программы D, скомпилированные для любой модели данных, могут выполняться как на 32-битных, 
так и на 64-битных ядрах.
параметры
.Fl 32
и
.Fl 64
также определяют
.Xr elf 5
формат файла (ELF32 или ELF64), создаваемый опцией
.Fl G .
.It Fl a
Захватить состояние анонимного трассирования и отобразить трассированные данные.
Вы можете комбинировать опцию
.Fl a
с опцией
.Fl e
чтобы заставить
.Nm
немедленно выйти после потребления состояния анонимного трассирования, а не
продолжать ожидать новых данных.
.It Fl A
Создать директивы для анонимного трассирования и записать их в
.Pa /boot/dtrace.dof .
Эта опция создает набор директив конфигурационного файла dtrace для включения
указанных проб для анонимного трассирования, а затем выходит.
По умолчанию
.Nm
пытается сохранить директивы в файл
.Pa /boot/dtrace.dof .
Это поведение можно изменить, используя
.Fl o
опцию для указания альтернативного выходного файла.
.It Fl b Ar bufsz
Установить основной размер буфера трассировки на
.Ar bufsz .
Размер буфера трассировки может включать любой из суффиксов размера k, m, g или t.
Если буферное пространство не может быть выделено,
.Nm dtrace
попытается уменьшить размер буфера или выйти в зависимости от настройки
свойства bufresize.
.It Fl c Ar cmd
Выполнить указанную команду
.Ar cmd
и выйти по завершении.
Если в командной строке присутствует более одной
.Fl c
параметры,
.Nm dtrace
выходит, когда все команды завершены, сообщая статус завершения для каждого дочернего
процесса по мере его завершения.
Идентификатор процесса первой команды доступен для любых программ D,
указанных в командной строке или с помощью
.Fl s
параметры через
.Li $target
макропеременную.
.It Fl C
Запустить препроцессор C
.Xr cpp 1
для программ D перед их компиляцией.
Вы можете передавать параметры препроцессору C, используя параметры
.Fl D ,
.Fl U ,
.Fl I ,
и
.Fl H .
Вы можете выбрать степень соответствия стандарту C, если используете опцию
.Fl X .
Для описания набора токенов, определяемых компилятором D при вызове препроцессора C, см.
.Fl X .
.It Fl d
Вывести D-скрипт на стандартный вывод после того, как к нему были применены синтаксические преобразования.
Например, условные операторы в D реализованы с использованием таких преобразований: условное выражение в теле проб заменяется во время компиляции отдельной пробой, основанной на исходном условии.
.It Fl D Ar name Op Ns = Ns value
Определить
.Ar name
при вызове
.Xr cpp 1
(включен с помощью параметры
.Fl C ).
Если вы укажете дополнительное
.Ar value ,
имя присваивается соответствующее значение.
Эта опция передает
.Fl D
в каждый вызов
.Xr cpp 1 .
.It Fl e
Выйти после компиляции любых запросов и потребления состояния анонимного трассирования
.Fl ( a
опция), но до включения любых проб.
Вы можете комбинировать эту опцию с
.Fl a
для печати данных анонимного трассирования и выхода.
Вы также можете комбинировать эту опцию с опциями компилятора D.
Эта комбинация позволяет убедиться, что программы компилируются без фактического их выполнения и включения соответствующего инструментария.
.It Fl f Oo Oo Ar provider : Oc Ar module : Oc Ar function Oo Oo Ar predicate \
    Oc Ar action Oc
Указать имя функции для трассировки или списка
.Fl ( l
опция).
Соответствующий аргумент может включать любую из форм описания проб
.Ar provider:module:function ,
.Ar module:function ,
или
.Ar function .
Неуказанные поля описания проб остаются пустыми и соответствуют любым пробам, независимо от значений в этих полях.
Если в описании не указаны другие квалификаторы, кроме
.Ar function ,
все пробы с соответствующей
.Ar function
будут соответствовать.
Аргумент
.Fl f
может быть дополнен необязательной секцией предиката D.
Можно указать более одной
.Fl f
параметры в командной строке одновременно.
.It Fl F
Объединить вывод трассировки, идентифицируя вход и выход функций.
Сообщения о входе в функцию отформатированы с отступом и их вывод отмечен префиксом
.Ql -> .
Сообщения о выходе из функции выровнены слева, и их вывод отмечен префиксом
.Ql <- .
Сообщения о входе в системный вызов отформатированы с отступом и их вывод отмечен префиксом
.Ql => .
Сообщения о выходе из системного вызова выровнены слева и их вывод отмечен префиксом
.Ql <= .
.It Fl G
Сгенерировать ELF-файл, содержащий встроенную программу DTrace.
Пробы DTrace, указанные в программе, сохраняются внутри переносимого ELF
объекта, который может быть связан с другой программой.
Если опция
.Fl o
присутствует, ELF-файл сохраняется с именем, указанным в качестве аргумента для этого операнда.
Если опция
.Fl o
отсутствует и программа DTrace находится в файле с именем
.Ar filename.d ,
тогда ELF-файл сохраняется с именем
.Ar filename.o .
В противном случае ELF-файл сохраняется под именем d.out.
.It Fl h
Сгенерировать заголовочный файл, содержащий макросы, соответствующие пробам в
указанных определениях провайдеров.
Эту опцию следует использовать для создания заголовочного файла, который включается другими
исходными файлами для последующего использования с опцией
.Fl G .
Если опция
.Fl o
присутствует, заголовочный файл сохраняется с именем, указанным в качестве аргумента для этой параметры.
Если опция
.Fl o
отсутствует и программа DTrace находится в файле с именем
.Ar filename.d ,
то заголовочный файл сохраняется под именем
.Ar filename.h .
.It Fl H
Вывести имена файлов при включении при вызове
.Xr cpp 1
(включен с помощью параметры
.Fl C ).
Эта опция передает
.Fl H
в каждый вызов
.Xr cpp 1 ,
заставляя его отображать список имен файлов, по одному на каждой строке, в стандартный вывод.
.It Fl i Ar probe-id Op Oo Ar predicate Oc Ar action
Указать идентификатор пробы
.It Fl o Ar output
Указать
.Ar output
файл для опций
.Fl A , G ,
и
.Fl l ,
или для самих трассированных данных.
Если опция
.Fl A
присутствует и
.Fl o
не присутствует, файл по умолчанию —
.Pa /boot/dtrace.dof .
Если опция
.Fl G
присутствует и аргумент параметры
.Fl s
имеет форму
.Ar filename.d
и
.Fl o
не присутствует, файл по умолчанию —
.Ar filename.o .
В противном случае файл по умолчанию —
.Ar d.out .
.It Fl p Ar pid
Захватить указанный идентификатор процесса
.Ar pid ,
кэшировать его таблицы символов и выйти по завершении.
Если в командной строке присутствует более одной
.Fl p
параметры,
.Nm
выходит, когда все команды завершены, сообщая статус завершения для каждого процесса
по мере его завершения.
Первый идентификатор процесса доступен для любых программ D, указанных в командной строке
или с помощью параметры
.Fl s
через макропеременную
.Li $target .
.It Fl P Ar provider Oo Oo Ar predicate Oc Ar action Oc
Указать имя провайдера для трассировки или списка
.Fl ( l
опция).
Оставшиеся поля описания проб — модуль, функция и имя — остаются пустыми и соответствуют любым пробам, независимо от значений в этих полях.
Аргумент
.Fl P
может быть дополнен необязательной секцией предиката D.
Можно указать более одной
.Fl P
параметры в командной строке одновременно.
.It Fl q
Включить тихий режим.
.Nm
подавляет сообщения, такие как количество проб, соответствующих указанным
опциям и программам D, и не печатает заголовки столбцов, идентификатор ЦП, идентификатор пробы или вставляет
переносы строк в вывод.
Только данные трассировки и форматированные операторы программ D, такие как
.Ql dtrace()
и
.Ql printf()
отображаются в стандартный вывод.
.It Fl s Ar script
Скомпилировать указанный исходный файл программы D.
Если опция
.Fl e
присутствует, программа компилируется, но инструментарий не включен.
Если опция
.Fl l
присутствует, программа компилируется и набор проб, соответствующих ей, выводится, но инструментарий не включен.
Если ни одна из опций
.Fl e , l , G ,
или
.Fl A
не присутствует, инструментирование, указанное программой D, включается, и начинается трассировка.
.It Fl S
Показать промежуточный код компилятора D.
Компилятор D создает отчет о промежуточном коде, созданном для каждой программы D, в стандартный вывод.
.It Fl U Ar name
Отменить определение указанного
.Ar name
при вызове
.Xr cpp 1
(включен с помощью параметры
.Fl C ).
Эта опция передает
.Fl U
в каждый вызов
.Xr cpp 1 .
.It Fl v
Включить подробный режим.
Если опция
.Fl v
указана,
.Nm
создает отчет о стабильности программы, показывая минимальный уровень стабильности интерфейса и зависимостей для указанных программ D.
.It Fl V
Отчет о самой высокой версии интерфейса программирования D, поддерживаемой
.Nm .
Информация о версии выводится в стандартный вывод, и команда
.Nm
завершается.
.It Fl w
Разрешить деструктивные действия в программах D, указанных с помощью опций
.Fl s , P , m , f , n ,
или
.Fl i .
Если опция
.Fl w
не указана,
.Nm
не позволяет компилировать или включать программу D, содержащую
деструктивные действия.
.It Fl x Ar arg Op Ns = Ns value
Включить или изменить опцию времени выполнения DTrace или опцию компилятора D.
Логические параметры включаются путем указания их имени.
параметры со значениями устанавливаются путем разделения имени параметры и значения знаком равно (=).
.Pp
Аргумент
.Ar size
может иметь суффикс
.Cm K ,
.Cm M ,
.Cm G
или
.Cm T
(в верхнем или нижнем регистре) для обозначения кратного
Килобайтам, Мегабайтам, Гигабайтам или Терабайтам
соответственно.
.Pp
Аргумент
.Ar time
может иметь суффикс
.Cm ns ,
.Cm nsec ,
.Cm us ,
.Cm usec ,
.Cm ms ,
.Cm msec ,
.Cm s  ,
.Cm sec ,
.Cm m ,
.Cm min ,
.Cm h ,
.Cm hour ,
.Cm d  ,
.Cm day ,
.Cm hz .
Если суффикс не указан,
.Cm hz
будет использоваться в качестве единицы.
.Bl -tag -width indent
.It Sy aggrate Ns = Ns Ar time
Скорость считывания агрегации.
.It Sy aggsize Ns = Ns Ar size
Размер буфера агрегации.
.It Sy bufpolicy Ns = Ns Cm fill Ns | Ns Cm switch Ns | Ns Cm ring
Указывает политику буфера для основного буфера.
.It Sy bufresize Ns = Ns Cm auto Ns | Ns Cm manual
Политика изменения размера буфера.
.It Sy bufsize Ns = Ns Ar size
Размер основного буфера на ядро ЦП.
То же, что и флаг
.Fl b .
.It Sy cleanrate Ns = Ns Ar time
Скорость очистки.
Должна быть указана в количестве в секунду с суффиксом
.Дк Li hz .
.It Sy cpu Ns = Ns Ar scalar
Указывает ЦП, на котором включить трассировку.
.It Sy cpp
Запустить препроцессор C для входных файлов.
То же, что и флаг
.Fl C .
.It Sy cpppath Ns = Ns Ar path
Использовать указанный путь для препроцессора C вместо поиска
.Dq cpp
в
.Ev PATH .
.It Sy defaultargs
Разрешить ссылки на неуказанные макроаргументы.
.It Sy destructive
Разрешить деструктивные действия.
То же, что и флаг
.Fl w .
.It Sy dynvarsize Ns = Ns Ar size
Размер динамического пространства переменных.
.It Sy flowindent
Включить отступ потока.
То же, что и флаг
.Fl F .
.It Sy grabanon
Захватить анонимное состояние.
То же, что и флаг
.Fl a .
.It Sy jstackframes Ns = Ns Ar scalar
Количество кадров стека по умолчанию для
.Fn jstack .
.It Sy jstackstrsize Ns = Ns Ar scalar
Размер строки по умолчанию для
.Fn jstack .
.It Sy ldpath Ns = Ns Ar path
Когда указана
.Fl G ,
использовать указанный путь для статического компоновщика
вместо поиска
.Дк "ld"
в
.Ev PATH .
.It Sy libdir Ns = Ns Ar path
Добавить каталог в системный путь библиотек.
.It Sy nspec Ns = Ns Ar scalar
Количество спекуляций.
.It Sy nolibs
Не загружать системные библиотеки D.
.It Sy quiet
Включить тихий режим.
То же, что и флаг
.Fl q .
.It Sy specsize Ns = Ns Ar size
Размер буфера спекуляции.
.It Sy strsize Ns = Ns Ar size
Максимальный размер строк.
.It Sy stackframes Ns = Ns Ar scalar
Максимальное количество кадров стека пространства ядра для разворачивания при выполнении действия
.Fn stack .
.It Sy stackindent Ns = Ns Ar scalar
Количество пробелов для отступа
.Fn stack
и
.Fn ustack
вывода.
.It Sy statusrate Ns = Ns Ar time
Скорость проверки состояния.
.It Sy switchrate Ns = Ns Ar time
Скорость переключения буфера.
.It Sy syslibdir Ns = Ns Ar path
Путь к системным библиотекам.
По умолчанию
.Pa /usr/lib/dtrace .
.It Sy ustackframes Ns = Ns Ar scalar
Максимальное количество кадров стека пользовательского пространства для разворачивания при выполнении действия
.Fn ustack .
.El
.It Fl X Cm a | c | s | t
Указать степень соответствия стандарту ISO C, которая должна быть выбрана при вызове
.Xr cpp 1
(включен с помощью параметры
.Fl C ).
Аргумент параметры
.Fl X
влияет на значение и наличие макроса __STDC__ в зависимости от значения буквенного аргумента.
.sp
Опция
.Fl X
поддерживает следующие аргументы:
.Bl -tag -width indent
.It a
По умолчанию.
ISO C плюс расширения совместимости с K&R, с семантическими изменениями, требуемыми ISO C.
Это режим по умолчанию, если
.Fl X
не указан.
Макрос __STDC__ имеет значение 0, когда
.Xr cpp 1
вызывается вместе с опцией
.Fl Xa .
.It c
Соответствие.
Строго совместимый ISO C, без расширений совместимости с K&R C.
Макрос __STDC__ имеет значение 1, когда
.Xr cpp 1
вызывается вместе с опцией
.Fl \&Xc .
.It s
Только K&R C.
Макрос __STDC__ не определен, когда
.Xr cpp 1
вызывается вместе с опцией
.Fl Xs .
.It t
Переход.
ISO C плюс расширения совместимости с K&R C, без семантических изменений, требуемых ISO C.
Макрос __STDC__ имеет значение 0, когда
.Xr cpp 1
вызывается вместе с опцией
.Fl Xt .
.El
.Pp
Поскольку опция
.Fl X
влияет только на то, как компилятор D вызывает препроцессор C, параметры
.Fl Xa
и
.Fl Xt
эквивалентны с точки зрения D, и обе предоставлены только для облегчения повторного использования настроек из среды сборки C.
.Pp
Независимо от режима
.Fl X ,
следующие дополнительные определения препроцессора C всегда указаны и действительны во всех режимах:
.Bl -bullet -offset indent
.It
__sun
.It
__unix
.It
__SVR4
.It
__sparc (только на системах SPARC)
.It
__sparcv9 (только на системах SPARC при компиляции 64-битных программ)
.It
__i386 (только на системах x86 при компиляции 32-битных программ)
.It
__amd64 (только на системах x86 при компиляции 64-битных программ)
.It
__`uname -s`_`uname -r` (например,
.Ql FreeBSD_9.2-RELEASE .
.It
__SUNW_D=1
.It
.No __SUNW_D_VERSION=0x Ns Ar MMmmmuuu
.Pp
Где
.Ar MM
— значение основного релиза в шестнадцатеричной системе,
.Ar mmm
— значение минорного релиза в шестнадцатеричной системе, и
.Ar uuu
— значение микрорелиза в шестнадцатеричной системе.
.El
.It Fl Z
Разрешить описания проб, которые соответствуют нулевому количеству проб.
Если опция
.Fl Z
не указана,
.Nm
сообщает об ошибке и завершает работу, если какие-либо описания проб, указанные в файлах программ D
.Fl ( s
опция) или в командной строке
.Fl ( P , m , f , n ,
или
.Fl i
параметры) содержат описания, не соответствующие ни одной известной пробе.
.El
.Sh ОПЕРАНДЫ
Вы можете указать ноль или более дополнительных аргументов в командной строке
.Nm
для определения набора макропеременных и т. д.
Дополнительные аргументы могут использоваться в программах D, указанных с помощью параметры
.Fl s
или в командной строке.
.Sh ФАЙЛЫ
.Bl -tag -width /boot/dtrace.dof -compact
.It Pa /boot/dtrace.dof
Файл для анонимных директив трассировки.
.El
.Sh КОД ЗАВЕРШЕНИЯ
Возвращаются следующие коды возврата:
.Bl -tag -width indent
.It 0
Успешное выполнение.
.Pp
Для запросов программы D код возврата 0 указывает, что программы были
успешно скомпилированы, пробы были успешно включены или анонимное состояние
было успешно получено.
.Nm
возвращает 0, даже если указанные запросы трассировки столкнулись с ошибками или потерями данных.
.It 1
Произошла ошибка.
.Pp
Для запросов программы D код возврата 1 указывает, что компиляция программы
не удалась или что указанный запрос не мог быть удовлетворен.
.It 2
Были указаны недопустимые параметры или аргументы командной строки.
.El
.Sh СМ. ТАКЖЕ
.Xr cpp 1 ,
.Xr elf 5 ,
.Xr SDT 9
.Rs
.%T Руководство по динамическому трассированию Solaris
.Re
.Sh ИСТОРИЯ
Утилита
.Nm
впервые появилась в
.Fx 7.1 .
