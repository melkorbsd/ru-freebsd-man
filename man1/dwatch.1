.\" Авторское право (c) 2014-2018 Девин Теске
.\" Все права защищены.
.\"
.\" Разрешение на распространение и использование в исходной и бинарной формах,
.\" с изменениями или без них, разрешается при условии соблюдения следующих условий:
.\" 2. Распространение в бинарной форме должно воспроизводить приведенное выше уведомление о копирайте,
.\"    этот список условий и следующий отказ от ответственности в
.\"    документации и/или других материалах, предоставляемых вместе с распространением.
.\" 3. Ни название университета, ни имена его участников
.\"    не могут использоваться для продвижения производных продуктов
.\"    без явного предварительного письменного разрешения.
.\"
.\" ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЕНО РЕГЕНТАМИ И УЧАСТНИКАМИ «КАК ЕСТЬ», И
.\" ЛЮБЫЕ ПРЯМЫЕ ИЛИ КОСВЕННЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ,
.\" ГАРАНТИЯМИ ТОВАРНОЙ ПРИГОДНОСТИ И СООТВЕТСТВИЯ КОНКРЕТНОЙ ЦЕЛИ,
.\" ОТКАЗЫВАЮТСЯ. В НИКАКОМ СЛУЧАЕ РЕГЕНТЫ ИЛИ УЧАСТНИКИ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ
.\" ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ, ПОКАЗАТЕЛЬНЫЕ ИЛИ ПОСЛЕДУЮЩИЕ
.\" УЩЕРБЫ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПРИОБРЕТЕНИЕМ ЗАМЕЩАЮЩИХ ТОВАРОВ
.\" ИЛИ УСЛУГ; УТРАТОЙ ПРАВА ПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ЛИБО ПРЕРЫВАНИЕМ ДЕЯТЕЛЬНОСТИ)
.\" НЕЗАВИСИМО ОТ ТОГО, НА КАКОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, ДОГОВОРНОЙ, СТРОГОЙ
.\" ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТНОЙ (ВКЛЮЧАЯ НЕБРЕЖНОСТЬ ИЛИ ИНОЕ)
.\" ОСНОВЫВАЕТСЯ ЛИСПОЛЬЗОВАНИЕ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ БЫЛО СООБЩЕНО О
.\" ВОЗМОЖНОСТИ ТАКОГО УЩЕРБА.
.\"
.Dd 9 февраля 2018
.Dt DWATCH 1
.Os
.Sh НАЗВАНИЕ
.Nm dwatch
.Nd отслеживание процессов при срабатывании определенных DTrace-проб
.Sh СИНТАКСИС
.Nm
.Op Fl 1defFmnPqRvVwxy
.Op Fl B Ar num
.Op Fl E Ar code
.Op Fl g Ar group
.Op Fl j Ar jail
.Op Fl k Ar name
.Op Fl K Ar num
.Op Fl N Ar count
.Op Fl o Ar file
.Op Fl O Ar cmd
.Op Fl p Ar pid
.Op Fl r Ar regex
.Op Fl t Ar test
.Op Fl T Ar time
.Op Fl u Ar user
.Op Fl X Ar profile
.Op Fl z Ar regex
.Op Fl -
.Op probe[,...]
.Op args ...
.Nm
.Fl l
.Op Fl fmnPqy
.Op Fl r Ar regex
.Op probe ...
.Nm
.Fl Q
.Op Fl 1qy
.Op Fl r Ar regex
.Sh ОПИСАНИЕ
Утилита
.Nm
использует
.Xr dtrace 1
для отображения информации о процессах при срабатывании определенной DTrace-пробы.
Только пользователь root или пользователи с доступом
.Xr sudo 8 Pq Pa ports/security/sudo
могут выполнять эту команду.
.Pp
.Nm
автоматизирует процесс создания DTrace-скриптов для объединения выводимых данных по
дате/времени,
информации о процессе,
и
.Op по желанию
данным, относящимся к конкретной пробе.
.Pp
Формат вывода без опций следующий:
.Pp
.Dl date/time uid.gid execname[pid]: psargs
.Pp
Например,
команда
.Ql dwatch BEGIN
выводит:
.Pp
.Dl INFO Watching 'dtrace:::BEGIN' ...
.Dl 2017 May 29 08:23:20 0.0 dtrace[60671]: dtrace -s /dev/stdin
.Pp
Опция
.Fl F
заставляет
.Nm
вместо этого объединять вывод по дате/времени,
информации о процессе
и обходу проб.
.Pp
Формат вывода с опцией
.Ql Fl F
такой:
.Pp
.Dl date/time uid.gid execname[pid]: {->,<-, |} prov:mod:func:name ...
.Pp
Например,
команда
.Ql dwatch -F BEGIN
выводит:
.Pp
.Dl INFO Watching 'dtrace:::BEGIN' ...
.Dl 2017 May 29 21:34:41 0.0 dtrace[86593]:  | dtrace:::BEGIN ...
.Pp
Опция
.Fl R
заставляет
.Nm
отображать дерево процессов, содержащее родителя,
прародителя
и информацию о предке.
.Pp
Формат вывода с опцией
.Ql Fl R
такой:
.Pp
.Dl date/time uid0.gid0 execname[pid0]: psargs0
.Dl " -+= pid3 uid3.gid3 psargs3"
.Dl "  \e\\-+= pid2 uid2.gid2 psargs2"
.Dl "    \e\\-+= pid1 uid1.gid1 psargs1"
.Dl "      \e\\-+= pid0 uid0.guid0 psargs0"
.Pp
Например,
команда
.Ql dwatch -R BEGIN
выводит:
.Pp
.Dl INFO Watching 'dtrace:::BEGIN' ...
.Dl 2017 May 29 21:38:54 0.0 dtrace[86899]: dtrace -s /dev/stdin
.Dl " -+= 86855 604.604 -bash"
.Dl "  \e\\-+= 86857 604.604 /bin/sh /usr/sbin/dwatch -R BEGIN"
.Dl "    \e\\-+= 86897 0.0 sudo dtrace -s /dev/stdin"
.Dl "      \e\\-+= 86899 0.0 dtrace -s /dev/stdin"
.Pp
Особый интерес представляет возможность фильтрации с использованием регулярных выражений.
параметры
.Ql Fl g Ar group ,
.Ql Fl p Ar pid ,
.Ql Fl r Ar regex ,
.Ql Fl u Ar user ,
и
.Ql Fl z Ar regex
могут быть объединены с
.Ql Fl R
для сопоставления с критериями родительского процесса, а также с информацией о текущем процессе.
.Pp
В отличие от них,
параметры
.Ql Fl j Ar jail ,
и
.Ql Fl k Ar name
применяются только к текущему процессу, даже если указана опция
.Ql Fl R .
.Pp
Опция
.Ql Fl E Ar code
дает возможность настраивать данные, относящиеся к пробе.
Например,
команда:
.Pp
.Dl dwatch -E 'printf("%s", copyinstr(arg0))' chdir
.Pp
отображает путь аргумента, переданного в вызов
.Xr chdir 2 .
.Pp
Для более сложных рутин и/или удобства можно писать профили.
Для вывода доступных профилей используйте опцию
.Ql Fl Q .
Для использования конкретного профиля применяйте опцию
.Ql Fl X Ar profile .
.Pp
Например,
команда
.Ql dwatch -X kill
отображает аргументы, передаваемые в вызов
.Xr kill 2 .
.Sh ПАРАМЕТРЫ
Если аргумент
.Ar probe
не содержит двоеточие
.Pq Qo Li ":" Qc
и не указаны ни одна из опций
.Ql Fl P ,
.Ql Fl m ,
.Ql Fl f ,
или
.Ql Fl n ,
аргумент проб
интеллектуально сопоставляется с наиболее вероятным значением.
Используйте
.Ql Nm Fl l Ar name
чтобы увидеть, какие пробы будут соответствовать данному имени.
.Pp
Несколько проб должны быть даны в одной
.Pq цитируемой
строке,
разделенные запятой и/или пробелом.
Все аргументы, следующие за этими пробами, будут переданы
.Xr dtrace 1
без изменений.
.Bl -tag -width "-c count"
.It Fl 1
Печать по одной строке на процесс/профиль
.Pq По умолчанию; отключает Ql Fl R .
.It Fl B Ar num
Максимальное количество аргументов для отображения
.Pq По умолчанию 64 .
.It Fl d
Отладка.
Отправить скрипт
.Xr dtrace 1
на stdout вместо выполнения.
.It Fl e
Завершить выполнение после компиляции запроса, но до включения проб.
.It Fl E Ar code
DTrace
.Ar code
для подробностей события.
Если указано «-»,
чтение осуществляется из stdin.
Это позволяет настроить то, что отображается после даты/времени и информации о процессе.
По умолчанию,
отображаются имя и аргументы программы, вызывающей пробу.
Может быть указано несколько раз.
.It Fl f
Включить пробы, соответствующие указанным именам функций.
.It Fl F
Объединить вывод проб.
.It Fl g Ar group
Фильтр по группе.
Отображать только процессы, соответствующие
.Ar group
имени/gid.
Это может быть регулярное выражение
.Xr awk 1
для сопоставления числового gid.
.It Fl j Ar jail
Фильтр по тюрьме.
Отображать только процессы, соответствующие
.Ar jail
имени/jid.
.It Fl k Ar name
Отображать только процессы, соответствующие
.Ar name .
Также может быть в формате
.Ql Li name*
чтобы обозначить
.Dq Li начинается с ,
.Ql Li *name
чтобы обозначить
.Dq Li заканчивается на ,
или
.Ql Li *name*
чтобы обозначить
.Dq Li содержит .
Может быть указано несколько раз.
.It Fl K Ar num
Максимальная глубина каталогов для отображения
.Pq По умолчанию 64 .
.It Fl l
Список доступных проб на стандартном выводе и выход.
.It Fl m
Включить пробы, соответствующие указанным именам модулей.
.It Fl X Ar profile
Загрузить профиль из DWATCH_PROFILES_PATH.
.It Fl n
Включить пробы, соответствующие указанным именам проб.
.It Fl N Ar count
Выйти после
.Ar count
соответствующих записей
.Pq По умолчанию 0 для отключено .
.It Fl o Ar file
Задать выходной файл.
Если
.Ql Li - ,
используется путь
.Ql Li /dev/stdout .
.It Fl O Ar cmd
Выполнить
.Ar cmd
для каждого события.
Это может быть любая действительная команда
.Xr sh 1 .
Переменные окружения
.Ql Li $TAG
и
.Ql Li $DETAILS
установлены для заданной команды
.Ar cmd .
.It Fl p Ar pid
Фильтр по идентификатору процесса.
Отображать только процессы с соответствующим
.Ar pid .
Это может быть регулярное выражение
.Xr awk 1 .
.It Fl P
Включить пробу, соответствующую указанному имени поставщика.
.It Fl q
Тихо.
Скрыть информационные сообщения и все ошибки dtrace(1).
.It Fl Q
Список доступных профилей в DWATCH_PROFILES_PATH и выход.
.It Fl r Ar regex
Фильтр.
Отображать только блоки, соответствующие
.Xr awk 1
регулярному выражению.
.It Fl R
Показать родителя,
прародителя
и предка процесса.
.It Fl t Ar test
Тестовое условие
.Pq предикат
для ограничения событий
.Pq По умолчанию нет .
Может быть указано несколько раз.
.It Fl T Ar time
Тайм-аут.
Формат
.Ql Li #[smhd]
или просто
.Ql Li #
для секунд.
.It Fl u Ar user
Фильтр по пользователю.
Отображать только процессы, соответствующие
.Ar user
имени/uid.
Это может быть регулярное выражение
.Xr awk 1
для сопоставления числового UID.
.It Fl v
Подробно.
Показать все ошибки от
.Xr dtrace 1 .
.It Fl V
Вывести версию
.Nm
на стандартный вывод и выйти.
.It Fl w
Разрешить деструктивные действия
.Pq copyout*, stop, panic и др. .
.It Fl x
Отслеживание.
Печать
.Ql Li <probe-id>
при срабатывании пробы.
.It Fl y
Всегда считать stdout консолью
.Pq включить цвета/колонки и т. д. .
.It Fl z Ar regex
Отображать только процессы, соответствующие
.Xr awk 1
регулярному выражению.
.El
.Sh ПРОФИЛИ
Профили настраивают данные, выводимые во время событий.
Профили загружаются из списка каталогов, разделенных двоеточиями, в переменной
.Ev DWATCH_PROFILES_PATH .
Это неполный список профилей с краткими описаниями:
.Bl -tag -width "vop_readdir"
.It chmod
Вывести режим и путь из
.Xr chmod 2 ,
.Xr lchmod 2 ,
.Xr fchmodat 2
.It errno
Вывести ненулевые значения errno из системных вызовов
.It io
Вывести данные дискового ввода/вывода, предоставленные
.Xr dtrace_io 4
.It ip
Вывести детали IPv4 и IPv6, предоставленные
.Xr dtrace_ip 4
.It kill
Вывести сигнал и pid из
.Xr kill 2
.It nanosleep
Вывести запрошенное время из
.Xr nanosleep 2
.It open
Вывести путь из
.Xr open 2 ,
.Xr openat 2
.It proc
Вывести детали выполнения процесса, предоставленные
.Xr dtrace_proc 4
.It proc-signal
Вывести данные сигналов процесса, предоставленные
.Xr dtrace_proc 4
.It rw
Вывести содержимое буфера из
.Xr read 2 ,
.Xr write 2
.It sched
Вывести детали планирования ЦП, предоставленные
.Xr dtrace_sched 4
.It tcp
Вывести данные адреса/порта TCP, предоставленные
.Xr dtrace_tcp 4
.It tcp-io
Вывести данные TCP-ввода/вывода, предоставленные
.Xr dtrace_tcp 4
.It udp
Вывести данные ввода/вывода UDP, предоставленные
.Xr dtrace_udp 4
.It vop_create
Вывести пути файловых систем, создаваемые
.Xr VOP_CREATE 9
.It vop_lookup
Вывести пути файловых систем, запрашиваемые
.Xr VOP_LOOKUP 9
.It vop_mkdir
Вывести пути каталогов, создаваемых
.Xr VOP_MKDIR 9
.It vop_mknod
Вывести пути узловых устройств, создаваемых
.Xr VOP_MKNOD 9
.It vop_readdir
Вывести пути каталогов, считываемых
.Xr VOP_READDIR 9
.It vop_remove
Вывести пути файловых систем, удаляемых
.Xr VOP_REMOVE 9
.It vop_rename
Вывести пути файловых систем, переименовываемых
.Xr VOP_RENAME 9
.It vop_rmdir
Вывести пути каталогов, удаляемых
.Xr VOP_RMDIR 9
.It vop_symlink
Вывести пути символьных ссылок, создаваемых
.Xr VOP_SYMLINK 9
.El
.Sh ОКРУЖЕНИЕ
Эти переменные окружения влияют на выполнение
.Nm :
.Bl -tag -width "DWATCH_PROFILES_PATH"
.It Ev DWATCH_PROFILES_PATH
Если
.Ev DWATCH_PROFILES_PATH
установлена,
.Nm
ищет профили в списке каталогов, разделенных двоеточиями, в этой
переменной вместо значения по умолчанию
.Ql Li /usr/libexec/dwatch:/usr/local/libexec/dwatch .
Если значение NULL,
профили не загружаются.
.El
.Sh КОД ЗАВЕРШЕНИЯ
.Pp
Приложение завершается с кодом 0 в случае успеха, и с кодом >0, если произошла ошибка.
.Sh ПРИМЕРЫ
Отслеживать процессы, входящие в системный планировщик ЦП.
.Bd -literal -offset indent
dwatch on-cpu
.Ed
.Pp
Вывести список доступных профилей,
по одной строке на профиль.
.Bd -literal -offset indent
dwatch -1 -Q
.Ed
.Pp
Не выполнять
.Xr dtrace 1 ,
а вывести скрипт на stdout и выйти.
.Bd -literal -offset indent
dwatch -d fsync
.Ed
.Pp
Скомпилировать и протестировать, но не выполнять код, сгенерированный с указанной пробой.
.Bd -literal -offset indent
dwatch -e test_probe
.Ed
.Pp
Вывести первый аргумент, передаваемый в каждый вызов zfs_sync().
.Bd -literal -offset indent
dwatch -E 'printf("%i", arg1)' zfs_sync
.Ed
.Pp
Отслеживать все функции с именем
.Ql Li read .
.Bd -literal -offset indent
dwatch -f read
.Ed
.Pp
Отслеживать все обходы проб.
.Bd -literal -offset indent
dwatch -F :
.Ed
.Pp
Отслеживать обходы проб системных вызовов.
.Bd -literal -offset indent
dwatch -F syscall
.Ed
.Pp
Отображать только процессы, принадлежащие супер-группе wheel.
.Bd -literal -offset indent
dwatch -g wheel execve
.Ed
.Pp
Отображать только процессы, принадлежащие группам
.Ql Li daemon
или
.Ql Li nobody .
.Bd -literal -offset indent
dwatch -g '1|65534' execve
.Ed
.Pp
Игнорировать тюрьмы,
отображая только процессы базовой системы.
.Bd -literal -offset indent
dwatch -j 0 execve
.Ed
.Pp
Отображать только процессы, работающие внутри тюрьмы с именем
.Ql Li myjail .
.Bd -literal -offset indent
dwatch -j myjail execve
.Ed
.Pp
Отслеживать обходы проб системных вызовов процессами ruby.
.Bd -literal -offset indent
dwatch -k 'ruby*' -F syscall
.Ed
.Pp
Отслеживать обходы проб системных вызовов процессами, содержащими
.Ql Li daemon
в своем имени.
.Bd -literal -offset indent
dwatch -k '*daemon*' -F syscall
.Ed
.Pp
Отслеживать сигналы, передаваемые
.Xr kill 2 .
.Bd -literal -offset indent
dwatch -X kill
.Ed
.Pp
Отслеживать сигналы, передаваемые между
.Xr bash 1
и
.Xr vi 1 .
.Bd -literal -offset indent
dwatch -k bash -k vi -X kill
.Ed
.Pp
Вывести список уникальных доступных функций.
.Bd -literal -offset indent
dwatch -l -f
.Ed
.Pp
Список доступных проб для функций, заканчивающихся на
.Ql Li read .
.Bd -literal -offset indent
dwatch -l -f '*read'
.Ed
.Pp
Список доступных проб, заканчивающихся на
.Dq Li read .
.Bd -literal -offset indent
dwatch -l -r 'read$'
.Ed
.Pp
Вывести список уникальных поставщиков.
.Bd -literal -offset indent
dwatch -l -P
.Ed
.Pp
Отслеживать пути, удаляемые
.Xr VOP_REMOVE 9 .
.Bd -literal -offset indent
dwatch -X vop_remove
.Ed
.Pp
Отслеживать имя
.Ql Li read
вместо функции
.Ql Li read .
Алгоритм выбора
.Nm
обычно будет отдавать предпочтение функции с именем
.Ql Li read
при отсутствии типа
.Pq используя So Fl P Sc , So Fl m Sc , So Fl f Sc , или So Fl n Sc
поскольку больше проб соответствует функции с именем
.Ql Li read
чем проб, соответствующих
.Ql Li read
для любого другого типа.
.Bd -literal -offset indent
dwatch -n read
.Ed
.Pp
Отображать первый процесс, вызывающий
.Xr kill 2 ,
затем выйти.
.Bd -literal -offset indent
dwatch -N 1 kill
.Ed
.Pp
Отслеживать процессы, порожденные pid 1234.
.Bd -literal -offset indent
dwatch -p 1234 execve
.Ed
.Pp
Отслеживать процессы, порожденные либо pid 1234, либо pid 5678.
.Bd -literal -offset indent
dwatch -p '1234|5678' execve
.Ed
.Пп
Отслеживать поставщика
.Ql Li random
вместо функции
.Ql Li random .
Алгоритм выбора
.Nm
обычно будет отдавать предпочтение функции с именем
.Ql Li random
при отсутствии типа
.Pq используя So Fl P Sc , So Fl m Sc , So Fl f Sc , или So Fl n Sc
поскольку больше проб соответствует функции с именем
.Ql Li random
чем проб, соответствующих поставщику с именем
.Ql Li random .
.Bd -literal -offset indent
dwatch -P random
.Ed
.Пп
Вывести доступные профили, соответствующие
.Ql Li vop .
.Bd -literal -offset indent
dwatch -Q -r vop
.Ed
.Пп
Отслеживать пути
.Xr VOP_LOOKUP 9
содержащие
.Ql Li /lib/ .
.Bd -literal -offset indent
dwatch -r /lib/ -X vop_lookup
.Ed
.Пп
Отобразить дерево процессов для каждой выполняемой команды.
.Bd -literal -offset indent
dwatch -R execve
.Ed
.Пп
Отслеживать процессы, порожденные pid 1234 или его потомками.
.Bd -literal -offset indent
dwatch -R -p 1234 execve
.Ed
.Пп
Отображать процессы, вызывающие
.Xr write 2
с
.Dq nbytes
меньше 10.
.Bd -literal -offset indent
dwatch -t 'arg2<10' -E 'printf("%d",arg2)' write
.Ed
.Пп
Отображать
.Xr write 2
буфер, когда
.Dq execname
не является
.Ql Li dtrace
и
.Dq nbytes
меньше 10.
.Bd -literal -offset indent
dwatch -X write -t 'execname != "dtrace" && this->nbytes < 10'
.Ed
.Пп
Отслеживать
.Ql Li statfs
в течение 5 минут и выйти.
.Bd -literal -offset indent
dwatch -T 5m statfs
.Ed
.Пп
Отображать только процессы, принадлежащие суперпользователю root.
.Bd -literal -offset indent
dwatch -u root execve
.Ed
.Пп
Отображать только процессы, принадлежащие пользователям
.Ql Li daemon
или
.Ql Li nobody .
.Bd -literal -offset indent
dwatch -u '1|65534' execve
.Ed
.Пп
Вывести версию и выйти.
.Bd -literal -offset indent
dwatch -V
.Ed
.Пп
Просмотреть первые 100 вытеснений планировщика.
.Bd -literal -offset indent
dwatch -y -N 100 preempt | less -R
.Ed
.Пп
Отображать процессы, соответствующие либо
.Dq Li mkdir
либо
.Dq Li rmdir .
.Bd -literal -offset indent
dwatch -z '(mk|rm)dir' execve
.Ed
.Пп
Выполнить команду и отслеживать сетевую активность только во time выполнения этой команды.
.Bd -literal -offset indent
dwatch -X tcp -- -c "nc -zvw10 google.com 22"
.Ed
.Пп
Отслеживать вызовы
.Xr open 2
и
.Xr openat 2
только во time работы pid 1234.
.Bd -literal -offset indent
dwatch -X open -- -p 1234
.Ed
.Пп
Отслеживать обходы проб для данной команды.
Учтите, что
.Dq Li -c true
передается
.Xr dtrace 1
так как он указан после аргумента проб
.Nm .
.Bd -literal -offset indent
dwatch -F 'pid$target:::entry' -c true
.Ed
.Sh СМ. ТАКЖЕ
.Xr dtrace 1
.Sh ИСТОРИЯ
.Nm
впервые появилась в
.Fx 11.2 .
.Sh АВТОРЫ
.An Девин Теске Aq Mt dteske@FreeBSD.org

