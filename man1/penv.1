.\"-
.\" Copyright (c) 2007-2009 Роберт Н. М. Уотсон
.\" Все права защищены.
.\"
.\" Распространение и использование в исходном коде и двоичной форме, с использованием или без использования
.\" модификаций, если следующие условия
.\" соблюдаются:
.\" 1. При распространении исходного кода должно сохраняться вышеуказанное уведомление
.\"    об авторских правах, этот список условий и следующий дисклеймер.
.\" 2. При распространиении в двоичной форме должно воспроизводиться уведомление об авторских правах,
.\"    этот список условий и следующий ниже отказ от ответственности в
.\"    документации и/или других материалах, поставляемых с дистрибутивом.
.\"
.\" ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ ПРАВООБЛАДАТЕЛЯМИ И СОАВТОРАМИ ``КАК ЕСТЬ'', И 
.\" МЫ ОТКАЗЫВАЕМСЯ ОТ ЛЮБЫХ ПОДРАЗУМЕВАЕМЫХ ОБЯЗАТЕЛЬСТВ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, 
.\" ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ ТОВАРНОЙ ПРИГОДНОСТИ И НЕПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ
.\" ЦЕЛИ. НИ В КОЕМ СЛУЧАЕ ПРАВООБЛАДАТЕЛИ ИЛИ СОВАТОРЫ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ
.\" ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, ОСОБЫЕ, ПОКАЗАТЕЛЬНЫЕ ИЛИ ЛОГИЧЕСКИ ВЫТЕКАЮЩИЕ
.\" УБЫТКИ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, ПРИОБРЕТЕНИЕ ЗАМЕНЯЮЩИХ ТОВАРОВ ИЛИ УСЛУГ;
.\" ПОТЕРЮ ВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕКРАЩЕНИЕ ДЕЯТЕЛЬНОСТИ)
.\" НЕЗАВИСИМО ОТ ПРИЧИНЕННОГО УЩЕРБА И НА ОСНОВАНИИ ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В РАМКАХ КОНТРАКТА, 
.\" ПРЯМОЙ ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТА (ВКЛЮЧАЯ ХАЛАТНОСТЬ ИЛИ ИНОЕ), ВОЗНИКШЕГО КАКИМ-ЛИБО ОБРАЗОМ
.\" В РЕЗУЛЬТАТЕ ИСПОЛЬЗОВАНИЯ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ВЫ БЫЛИ ОСВЕДОМЛЕНЫ О ВОЗМОЖНОСТИ
.\" ТАКОГО УЩЕРБА.
.\"
.Dd 7 апреля, 2022 год
.Dt PROCSTAT 1
.Os
.Sh НАЗВАНИЕ
.Nm procstat
.Nd get detailed process information
.Sh СИНТАКСИС
.Nm
.Op Fl -libxo
.Op Fl h
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl w Ar интервал
.Ar команда
.Op Ar идентификатор_процесса ... | Ar ядро ...
.Nm
.Op Fl -libxo
.Fl a
.Op Fl h
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl w Ar интервал
.Ar команда
.Nm
.Op Fl -libxo
.Op Fl h
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl w Ar интервал
.Oo
.Fl b |
.Fl c |
.Fl e |
.Fl f Oo Fl C Oc |
.Fl i Oo Fl n Oc |
.Fl j Oo Fl n Oc |
.Fl k Oo Fl k Oc |
.Fl l |
.Fl r Oo Fl H Oc |
.Fl s |
.Fl S |
.Fl t |
.Fl v |
.Fl x
.Oc
.Op Ar идентификатор_процесса ... | Ar ядро ...
.Nm
.Op Fl -libxo
.Fl a
.Op Fl h
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl w Ar интервал
.Oo
.Fl b |
.Fl c |
.Fl e |
.Fl f Oo Fl C Oc |
.Fl i Oo Fl n Oc |
.Fl j Oo Fl n Oc |
.Fl k Oo Fl k Oc |
.Fl l |
.Fl r Oo Fl H Oc |
.Fl s |
.Fl S |
.Fl t |
.Fl v |
.Fl x
.Oc
.Nm
.Op Fl -libxo
.Fl L
.Op Fl h
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl w Ar интерва
.Ar ядро ...
.Nm pargs
.Op Fl -libxo
.Ar идентификатор_процесса ...
.Nm penv
.Op Fl -libxo
.Ar идентификатор_процесса ...
.Nm pwdx
.Op Fl -libxo
.Ar идентификатор_процесса ...
.Sh ОПИСАНИЕ
.Nm
утилита отображает подробную информацию о процессах, определенных аргументами
.Ar идентификатор_процесса
или, если флаг
.Fl a
используется, о всех процессах
Он также может отображать информацию, извлеченную из файла ядра процесса, если
этот файл указан в качестве аргумента.
.Pp
Утилиты
.Nm pargs ,
.Nm penv
и
.Nm pwdx
утилиты отображают аргументы, среду и текущий рабочий каталог,
соответственно, процесса, указанного в
.Ar идентификатор_процесса
аргументе.
Они имитируют поведение одноименных утилит Solaris.
.Pp
Если флаг
.Fl -libxo
указан, то выходные данные генерируются с помощью
.Xr libxo 3
в различных форматах, удобочитаемых человеком и машиной.
Смотрите
.Xr xo_parse_args 3
для получения подробной информации об аргументах командной строки.
.Pp
Команды, доступные для
.Nm :
.Bl -tag -width indent
.It Ar доп_блокировка
Отображает информацию о рекомендательных блокировках файлов.
Перечислены все три типа блокировок: в BSD-стиле -
.Xr lockf 2 ,
в POSIX-стиле -
.Xr fcntl 2
.Va F_SETLK ,
а также удаленные блокировки
.Xr lockd 8
используемые в NFSv3.
.Pp
Обратите внимание, что ни параметр
.Fl a ,
ни ,
.Va pid
не могут быть использованы для ограничения отображения блокировок, в основном потому что
некоторые типы блокировок не имеют локальных (или каких-либо) процессов-владельцев.
.It Ar basic
Отображает основную статистику процесса (это значение используется по умолчанию).
.It Ar binary | Fl b
Отображает двоичную информацию о процессе.
.Pp
Принимает команды подстроки.
.It Ar argument(s) | Fl c
Отображает аргументы командной строки для процесса.
.Pp
Принимает команды подстроки.
.It Ar environment | Fl e
Отображает переменные среды для процесса.
.Pp
Принимает команды подстроки.
.It Ar file(s) | Ar fd(s) | Fl f
Отобразите информацию о файловом дескрипторе для процесса.
.Pp
Если флаг подкоманды
.Fl C,
используется, то выводится дополнительная информация о возможностях.
.It Ar signal(s) | Fl i
Отображает ожидающий сигнал и информацию о ходе выполнения процесса.
.Pp
Если опция подкоманды
.Fl n
используется, то вместо названий сигналов отображаются номера
сигналов.
.Pp
Принимает команды подстроки.
.It Ar tsignal(s) | Fl j
Отображает информацию об ожидающих и заблокированных сигналах для потоков процесса.
.Pp
Если опция подкоманды
.Fl n
используется, то вместо названий сигналов отображаются номера
сигналов.
.Pp
Принимает команды подстроки.
.It Ar kstack | Fl k
Отображает стеки потоков ядра в процессе, исключая стеки
потоков, запущенных в данный момент на ЦПУ, и потоки, стеки которых были перенесены на диск.
.Pp
Если опция подкоманды
.Fl v
используется (или флаг команды повторяется),
отображаются смещения функций, а также названия функций.
.It Ar rlimit | Fl l
Отображает ограничения на ресурсы для процесса.
.It Ar ptlwpinfo | Fl L
Отображает информацию о ЛВП для процесса, связанного с его завершением, инициированным сигналом.
.It Ar rusage | Fl r
Отображает информацию об использовании ресурсов для процесса.
.Pp
Если флаг подкоманды
.Fl v
.Pq or Fl H
используется, 
то выводится статистика по каждому потоку, а не статистика по каждому 
процессу.
Во втором поле таблицы будет указан ID потока, которому
соответствует строка информации.
.It Ar credential(s) | Fl s
Отображает информацию о безопасности и учетных данных процесса.
.Pp
Принимает команды подстроки.
.It Ar cpuset | Ar cs | Fl S
Отображает информацию о наборе процессоров для потока.
.It Ar thread(s) | Fl t
Отображает информацию о потоке для процесса.
.It Ar vm | Fl v
Отобразите сопоставления виртуальной памяти для процесса.
.It Ar auxv | Fl x
Отображает вектор вспомогательных данных ELF для процесса
.It Ar pargs
Отображает аргументы для процесса
.It Ar penv
Отображает переменные среды для процесса.
.It Ar pwdx
Отображает текущий рабочий каталог для процесса.
.El
.Pp
Все опции генерируют вывод в формате таблицы, первое поле которой 
соответствует ID процесса, к которому относится строка информации.
Флаг
.Fl h
 может быть использован для подавления заголовков таблицы.
.Pp
Флаг
.Fl w
может использоваться для указания интервала ожидания, через который следует повторить отображение
запрошенной информации о процессе.
Если флаг
.Fl w
не указан, вывод не будет повторен.
.Pp
Информация о виртуальной машине, файловом дескрипторе и параметрах набора процессоров доступна
только владельцу процесса или суперпользователю.
Значение cpuset, отображаемое как -1, означает, что информация недействительна 
или недоступна.
.Ss Binary Information
Отображает ID процесса, команду и путь к бинарному файлу процесса:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It OSREL
дата выпуска ОС для бинарного файла процесса
.It PATH
путь к бинарному файлу процесса (при наличии)
.El
.Ss Command Line Arguments
Отображает ID процесса, команду и аргументы командной строки:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It ARGS
аргументы командной строки (при наличии)
.El
.Ss Environment Variables
Отображает ID процесса, команду, и переменные среды:
.Pp
.Bl -tag -width "ENVIRONMENT" -compact
.It PID
ID процесса
.It COMM
команда
.It ENVIRONMENT
переменные среды (при наличии)
.El
.Ss File Descriptors
Отображает подробную информацию о каждом файловом дескрипторе, на который 
ссылается процесс, включая ID процесса, команду, номер файлового дескриптора,
а также информацию об объекте для каждого файлового дескриптора, такую как тип объекта и
путь в файловой системе.
По умолчанию будет отображена следующая информация:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It FD
номер файлового дескриптора или cwd/root/jail
.It T
тип файлового дескриптора
.It V
тип виртуального узла
.It FLAGS
флаги файловых дескрипторов
.It REF
количество ссылок на файловый дескриптор
.It OFFSET
смещение файлового дескриптора
.It PRO
протокол сети
.It NAME
путь к файлу или адреса сокетов (если имеются)
.El
.Pp
Могут отображаться следующие типы файловых дескрипторов:
.Pp
.Bl -tag -width X -compact
.It e
POSIX semaphore
.It E
дескриптор событий
.It f
очередь типа первым пришёл — первым ушёл
.It h
разделяемая память
.It k
очередь событий ядра
.It m
очередь сообщений
.It P
дескриптор процесса
.It p
пайп
.It s
сокет
.It t
мастер псевдотерминала
.It v
виртуальный узел
.El
.Pp
Могут отображаться следующие типы виртуальных узлов:
.Pp
.Bl -tag -width X -compact
.It -
не виртуальный узел
.It b
блочное устройство
.It c
символьное устройство
.It d
директория
.It f
очередь типа первым пришёл — первым ушёл
.It l
символическая ссылка
.It r
обычный файл
.It s
сокет
.It x
отозванное устройство
.El
.Pp
Могут отображаться следующие флаги файлового дескриптора:
.Pp
.Bl -tag -width X -compact
.It r
считать
.It w
записать
.It a
добавить
.It s
асинхронизация
.It f
синхронизация файловой системы
.It n
неблокирующий режим
.It d
прямой ввод/вывод
.It l
удержание блокировки
.El
.Pp
Если флаг
.Fl C
указан, то поля "тип виртуального узла", "количество ссылок" и "смещение" будут
опущены, и будет добавлено новое поле "возможности" со списком возможностей,
как описано в
.Xr cap_rights_limit 2 ,
присутствующем для каждого дескриптора возможностей.
.Pp
Могут отображаться следующие сетевые протоколы (сгруппированные по семейству адресов):
.Pp
.Dv AF_INET ,
.Dv AF_INET6
.Pp
.Bl -tag -width indent -compact
.It ICM
.Dv IPPROTO_ICMP ;
смотрите
.Xr icmp 4 .
.It IP?
неизвестный протокол.
.It RAW
.Dv IPPROTO_RAW ;
смотрите
.Xr ip 4 .
.It SCT
.Dv IPPROTO_SCTP ;
смотрите
.Xr sctp 4 .
.It TCP
.Dv IPPROTO_TCP ;
смотрите
.Xr tcp 4 .
.It UDP
.Dv IPPROTO_UDP ;
смотрите
.Xr udp 4 .
.El
.Pp
.Dv AF_LOCAL
.Pp
.Bl -tag -width indent -compact
.It UDD
.Dv IPPROTO_UDP ;
смотрите
.Xr udp 4 .
.It UDS
.Dv IPPROTO_TCP ;
смотрите
.Xr tcp 4 .
.It UD?
неизвестный протокол
.El
.Pp
.Dv AF_DIVERT
.Pp
.Bl -tag -width indent -compact
.It IPD
.Dv Divert socket; see
.Xr divert 4 .
.El
.Pp
.Bl -tag -width indent -compact
.It ?
неизвестное семейство адресов.
.El
.Ss Signal Disposition Information
Отображение ожидающего сигнала и распоряжения для процесса:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It SIG
название сигнала
.It FLAGS
детали обработки сигналов процессом, три символа
.Bl -tag -width X -compact
.It P
если сигнал находится в ожидании в очереди глобального процесса; - otherwise.
.It I
если действие по доставке сигнала установлено как "игнорирование"
.Dv SIG_IGN ;
- в противном случае.
.It C
Если сигнал будет перехвачен; - в противном случае.
.El
.El
.Pp
Если переключатель
.Fl n
задан, то вместо имен сигналов будут показаны их номера.
.Ss Thread Signal Information
Отображает ожидающий и заблокированный сигнал для потоков процесса:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It TID
ID потока
.It COMM
команда
.It SIG
название сигнала
.It FLAGS
статус передачи сигнала потока, два символа
.Bl -tag -width X -compact
.It P
если сигнал ожидает обработки потоком, - в противном случае
.It B
если сигнал заблокирован в маске сигналов потока, - если не заблокирован
.El
.El
.Pp
Переключатель
.Fl n
имеет такой же эффект, как и для переключателя
.Fl i :
вместо имен сигналов показываются их номера.
.Ss Kernel Thread Stacks
Отображение стеков потоков ядра для процесса, что позволяет дополнительно интерпретировать 
каналы ожидания потоков.
Если флаг
.Fl k
повторяется, выводятся смещения функций, а не только имена функций.
.Pp
Требуется включить в ядро системы
.Cd "options STACK"
или
.Cd "options DDB"
для использования этой функции.
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It TID
ID потока
.It COMM
команда
.It TDNAME
название потока
.It KSTACK
стек вызовов потоков ядра
.El
.Ss Resource Limits
Отображает лимиты ресурсов для процесса:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It RLIMIT
название лимита ресурсов
.It SOFT
мягкий лимит
.It HARD
жесткий лимит
.El
.Ss Resource Usage
Отображает использование ресурсов для процесса.
Если флаг
.Fl H
указан,
то вместо него отображается использование ресурсов для отдельных потоков.
.Pp
.Bl -tag -width "RESOURCE" -compact
.It PID
ID процесса
.It TID
ID потока
.Po
если
.Fl H
указан
.Pc
.It COMM
команда
.It RESOURCE
название ресурса
.It VALUE
текущее исполльзование
.El
.Ss Security Credentials
Отображение информации о учетных данных процесса:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It EUID
действующий ID пользователя
.It RUID
реальный ID пользователя
.It SVUID
сохраненный ID поьзователя
.It EGID
действующий ID группы
.It RGID
реальный ID группы
.It SVGID
сохраненный ID группы
.It UMASK
маска режима создания файла
.It FLAGS
флаги учетных данных
.It GROUPS
набор групп
.El
.Pp
Могут быть отображены следующие флаги учетных данных:
.Pp
.Bl -tag -width X -compact
.It C
режим возможностей
.El
.Ss Thread Information
Отображение информации по каждому потоку, включая идентификатор процесса, идентификатор потока, имя,
ЦПУ и состояние выполнения:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It TID
ID потока
.It COMM
команда
.It TDNAME
название потока
.It CPU
текущее или последнее использованное ЦПУ
.It PRI
приоритет потока
.It STATE
состояние потока
.It WCHAN
канал ожидания потока
.El
.Ss Virtual Memory Mappings
Отображает карты виртуальной памяти процесса, включая адреса, метаданные отображения
и информацию об отображаемом объекте:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It START
начальный адрес отображения
.It END
конечный адрес отображения
.It PRT
флаги защиты
.It RES
резидентные страницы
.It PRES
частные резидентные страницы
.It REF
счетчик ссылок
.It SHD
счетчик теневых страниц
.It FLAG
флаги отображения
.It TP
тип объекта виртуальной памяти
.El
.Pp
Могут быть отображены следующие флаги защиты:
.Pp
.Bl -tag -width X -compact
.It r
чтение
.It w
запись
.It x
исполнение
.El
.Pp
Могут быть отображены следующие типы объектов виртуальной памяти:
.Pp
.Bl -tag -width XX -compact
.It --
отсутствует
.It dd
неактивный
.It df
по умолчанию
.It dv
устройство
.It md
устройство с управляемыми страницами
.Pq GEM/TTM
.It ph
физический
.It sg
рассеивание/сборка
.It sw
своп
.It vn
vnode
.It gd
защита (псевдо-тип)
.El
.Pp
Могут быть отображены следующие флаги отображения:
.Pp
.Bl -tag -width X -compact
.It C
копировать при записи
.It N
необходимо копировать
.It S
используется одно или несколько отображений суперстраниц
.It D
растёт вниз (стек сверху вниз)
.It U
растёт вверх (стек снизу вверх)
.It W
страницы в этом диапазоне заблокированы с помощью
.Xr mlock 2
или
.Xr mlockall 2
.El
.Ss ELF Вспомогательный Вектор
Отображение значений вспомогательного вектора ELF:
.Pp
.Bl -tag -width indent -compact
.It PID
ID процесса
.It COMM
команда
.It AUXV
имя вспомогательного вектора
.It VALUE
значение вспомогательного вектора
.El
.Ss Advisory Lock Information
.Bl -tag -width indent -compact
.It RW
Тип Чтение/Запись,
.Va RO
для чтения,
.Va RW
для блокировки записи
.It TYPE
Тип блокировки, один из
.Va FLOCK
для
.Xr flock 2 ,
.Va FCNTL
для
.Xr fcntl 2 ,
.Va LOCKD
для удалённой
.It PID
ID процесса владельца, для
.Va FCNTL
и удалённых типов
.It SYSID
ID удалённой системы, если применимо
.It FSID
ID файловой системы, где заблокирован файл изменения размера
.It RDEV
ID устройства, связанного с файлом для файловой системы
.It INO
Уникальный ID файла (номер индексного дескриптора) заблокированного файла
в файловой системе
.It START
Начальное смещение заблокированного диапазона
.It LEN
Длина заблокированного диапазона.
Ноль означает до конца файла
.It PATH
Если доступен, то путь к заблокированному файлу
.El
.Sh СТАТУС ЗАВЕРШЕНИЯ
.Ex -std
.Sh ПРИМЕРЫ
Показать двоичную информацию о текущей оболочке:
.Bd -literal -offset indent
$ статистика бинарных процессов $$
  PID COMM                OSREL PATH
46620 bash              1201000 /usr/local/bin/bash
.Ed
.Pp
То же, что и выше, но с отображением информации об открытых файловых дескрипторах:
.Bd -literal -offset indent
$ procstat files $$
  PID COMM                FD T V FLAGS    REF  OFFSET PRO NAME
46620 bash              text v r r-------   -       - -   /usr/local/bin/bash
46620 bash              ctty v c rw------   -       - -   /dev/pts/12
46620 bash               cwd v d r-------   -       - -   /tmp
46620 bash              root v d r-------   -       - -   /
46620 bash                 0 v c rw------   7  372071 -   /dev/pts/12
46620 bash                 1 v c rw------   7  372071 -   /dev/pts/12
46620 bash                 2 v c rw------   7  372071 -   /dev/pts/12
46620 bash               255 v c rw------   7  372071 -   /dev/pts/12
.Ed
.Pp
Показать аргументы, использованные для запуска
.Xr init 8 :
.Bd -literal -offset indent
$ procstat arguments 1
  PID COMM             ARGS
    1 init             /sbin/init --
.Ed
.Pp
Извлечение бинарной информации из дампа ядра:
.Bd -literal -offset indent
$ procstat binary core.36642
  PID COMM                OSREL PATH
36642 top               1201000 /usr/bin/top
.Ed
.Pp
Попытка извлечь информацию из файла дампа памяти, созданного в другой основной версии
.Fx ,
может привести к ошибке следующего характера::
.Bd -literal -offset indent
$ procstat mplayer.core
procstat: kinfo_proc structure size mismatch
procstat: procstat_getprocs()
.Ed
.Sh СМОТРИТЕ ТАКЖЕ
.Xr fstat 1 ,
.Xr ps 1 ,
.Xr sockstat 1 ,
.Xr cap_enter 2 ,
.Xr cap_rights_limit 2 ,
.Xr mlock 2 ,
.Xr mlockall 2 ,
.Xr libprocstat 3 ,
.Xr libxo 3 ,
.Xr signal 3 ,
.Xr xo_parse_args 3 ,
.Xr ddb 4 ,
.Xr divert 4 ,
.Xr icmp 4 ,
.Xr ip 4 ,
.Xr sctp 4 ,
.Xr tcp 4 ,
.Xr udp 4 ,
.Xr stack 9
.Sh АВТОРЫ
.An Robert N M Watson Aq Mt rwatson@FreeBSD.org .
.br
.Xr libxo 3
поддержка была добавлена
.An -nosplit
Алланом Джудом
.Aq Mt allanjude@FreeBSD.org .
.br
.An Juraj Lutter
.Aq Mt juraj@lutter.sk
добавлены функции pargs, penv и pwdx.
.Sh БАГИ
Отображение путей к открытым файлам или отображениям памяти реализовано с использованием 
кэша имен ядра.
Если файловая система не использует кэш имен, или путь к файлу не находится 
в кэше, путь не будет отображаться.
.Pp
.Nm
в настоящее время поддерживает извлечение данных только из работающего ядра, а не из
дампов памяти после сбоев ядра.
