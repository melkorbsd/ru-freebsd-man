.\"	$NetBSD: pkill.1,v 1.8 2003/02/14 15:59:18 grant Exp $
.\"
.\" Copyright (c) 2002 NetBSD Foundation, Inc.
.\" Все права защищены.
.\"
.\" Этот код основан на программном обеспечении, предоставленном NetBSD Foundation
.\" Эндрю Дораном.
.\"
.\" Распространение и использование в исходном коде и двоичной форме, с использованием или без использования
.\" модификаций, если следующие условия
.\" соблюдаются:
.\" 1. При распространении исходного кода должно сохраняться вышеуказанное уведомление
.\"    об авторских правах, этот список условий и следующий дисклеймер.
.\" 2. При распространиении в двоичной форме должно воспроизводиться уведомление об авторских правах,
.\"    этот список условий и следующий ниже отказ от ответственности в
.\"    документации и/или других материалах, поставляемых с дистрибутивом.
.\"
.\" ЭТО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ КОМПАНИЕЙ NETBSD FOUNDATION, INC. И СОАВТОРАМИ ``КАК ЕСТЬ'', И 
.\" МЫ ОТКАЗЫВАЕМСЯ ОТ ЛЮБЫХ ПОДРАЗУМЕВАЕМЫХ ОБЯЗАТЕЛЬСТВ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, 
.\" ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ ТОВАРНОЙ ПРИГОДНОСТИ И НЕПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ
.\" ЦЕЛИ. НИ В КОЕМ СЛУЧАЕ ПРАВООБЛАДАТЕЛИ ИЛИ СОВАТОРЫ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ
.\" ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, ОСОБЫЕ, ПОКАЗАТЕЛЬНЫЕ ИЛИ ЛОГИЧЕСКИ ВЫТЕКАЮЩИЕ
.\" УБЫТКИ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, ПРИОБРЕТЕНИЕ ЗАМЕНЯЮЩИХ ТОВАРОВ ИЛИ УСЛУГ;
.\" ПОТЕРЮ ВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕКРАЩЕНИЕ ДЕЯТЕЛЬНОСТИ)
.\" НЕЗАВИСИМО ОТ ПРИЧИНЕННОГО УЩЕРБА И НА ОСНОВАНИИ ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В РАМКАХ КОНТРАКТА, 
.\" ПРЯМОЙ ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТА (ВКЛЮЧАЯ ХАЛАТНОСТЬ ИЛИ ИНОЕ), ВОЗНИКШЕГО КАКИМ-ЛИБО ОБРАЗОМ
.\" В РЕЗУЛЬТАТЕ ИСПОЛЬЗОВАНИЯ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ВЫ БЫЛИ ОСВЕДОМЛЕНЫ О ВОЗМОЖНОСТИ
.\" ТАКОГО УЩЕРБА.
.\"
.Dd 5 октября, 2020 год
.Dt PKILL 1
.Os
.Sh НАЗВАНИЕ
.Nm pgrep , pkill
.Nd find or signal processes by name
.Sh СИНТАКСИС
.Nm pgrep
.Op Fl LSafilnoqvx
.Op Fl F Ar файл_идентификаторов_процессов
.Op Fl G Ar идентификатор_группы
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl P Ar родительский_идентификатор_процесса
.Op Fl U Ar идентификатор_пользователя
.Op Fl c Ar класс
.Op Fl d Ar разделитель
.Op Fl g Ar группа_процессов
.Op Fl j Ar джэйл
.Op Fl s Ar идентификатор_сессии
.Op Fl t Ar терминал
.Op Fl u Ar эффективный_идентификатор_пользователя
.Ar шаблон ...
.Nm pkill
.Op Fl Ar сигнал
.Op Fl ILafilnovx
.Op Fl F Ar файл_идентификаторов_процессов
.Op Fl G Ar идентификатор_группы
.Op Fl M Ar ядро
.Op Fl N Ar система
.Op Fl P Ar родительский_идентификатор_процесса
.Op Fl U Ar идентификатор_пользователя
.Op Fl c Ar класс
.Op Fl g Ar группа_процессов
.Op Fl j Ar джэйл
.Op Fl s Ar идентификатор_сессии
.Op Fl t Ar терминал
.Op Fl u Ar эффективный_идентификатор_пользователя
.Ar шаблон ...
.Sh ОПИСАНИЕ
Команда
.Nm pgrep
команда выполняет поиск в таблице процессов в запущенной системе и выводит идентификаторы
процессов всех процессов, которые соответствуют критериям, указанным в командной
строке.
.Pp
Команда
.Nm pkill
выполняет поиск по таблице процессов в запущенной системе и выдает сигналы обо всех
процессах, которые соответствуют критериям, указанным в командной строке.
.Pp
Доступны следующие опции:
.Bl -tag -width ".Fl F Ar "pidfile
.It Fl F Ar файл_идентификаторов_процессов
Ограничи совпадения с процессом, чей ID хранится в
.Ar файл_идентификаторов_процессов
файле.
.It Fl G Ar идентификатор_группы
Ограничить поиск процессами с реальным идентификатором группы в разделённом запятыми 
списке 
.Ar идентификатор_группы .
.It Fl I
Запрашивает подтверждение перед попыткой отправить сигнал каждому процессу.
.It Fl L
Файл
.Ar файл_идентификаторов_процессов ,
указанный для опции
.Fl F ,
должен быть заблокирован с помощью системного вызова
.Xr flock 2
или создан с помощью
.Xr pidfile 3 .
.It Fl M Ar ядро
Извлекает значения, связанные со списком имён, из указанного ядра
вместо текущей работающей системы.
.It Fl N Ar система
Извлекает список имён из указанной системы вместо стандартной,
которая является образом ядра, с которого система была загружена.
.It Fl P Ar родительский_идентификатор_процесса
Ограничить поиск процессами с ID родительского процесса в разделённом запятыми 
списке
.Ar родительский_идентификатор_процесса .
.It Fl S
Ищет также в системных процессах (потоках ядра).
.It Fl U Ar идентификатор_пользователя
Ограничивает поиск процессами с реальным ID пользователя в разделённом запятыми 
списке
.Ar идентификатор_пользователя .
.It Fl d Ar delim
Указываеи разделитель, который будет напечатан между каждым ID процесса.
По умолчанию это новая строка.
Эта опция может быть использована только с
.Nm pgrep
командой.
.It Fl a
Включает предков процесса в список совпадений.
По умолчанию текущий процесс
.Nm pgrep
или
.Nm pkill
и все его предки исключаются (за исключением случаев, когда
.Fl v
используется).
.It Fl c Ar класс
Ограничивает поиск процессами, работающими с указанным классом входа в систему
.Ar класс .
.It Fl f
Ищет совпадения в полных списках аргументов.
По умолчанию поиск ведётся по именам процессов.
.It Fl g Ar группа_процессов
Ограничить поиск процессами с ID группы процессов в разделённом запятыми
списке
.Ar группа_процессов .
Значение ноль означает ID группы процессов выполняющейся команды
.Nm pgrep
или
.Nm pkill
команды.
.It Fl i
Игнорирует различия в регистре как в таблице процессов, так и в предоставленном шаблоне.
.It Fl j Ar джейл
Ограничить поиск процессами внутри указанных джейлов.
Аргумент
.Ar джэйл
может быть
.Dq Li any
для поиска процессов в любом джейле,
.Dq Li none
для поиска процессов не в джейле,
или списком ID джейлов или их названий, разделённым запятыми.
.It Fl l
Длинный вывод.
Для
.Nm pgrep ,
выводит имя процесса в дополнение к ID процесса для каждого соответствующего
процесса.
Если используется вместе с
.Fl f ,
выводит ID процесса и полный список аргументов для каждого соответствующего процесса.
Для
.Nm pkill ,
показывает команду уничтожения, использованную для каждого убитого процесса.
.It Fl n
Выбраеь только самый новый (недавно запущенный) из соответствующих процессов.
.It Fl o
Выбрать только самый старый (менее недавно запущенный) из соответствующих процессов.
.It Fl q
Для
.Nm pgrep ,
не пишет ничего в стандартный вывод.
.It Fl s Ar идентификатор_сессии
Ограничить совпадения процессами с ID сессии в  разделённом запятыми
списке
.Ar идентификатор_сессии .
Значение ноль интерпретируется как ID сессии выполняющейся команды
.Nm pgrep
или
.Nm pkill
команды.
.It Fl t Ar терминал
Ограничивает совпадения процессами, связанными с терминалом в разделённом запятыми
списке
.Ar терминал.
Имена терминалов могут быть в форме
.Pa tty Ns Ar xx
или сокращённой форме
.Ar xx.
Одиночный дефис
.Pq Ql -
соответствует процессам, не связанным с терминалом.
.It Fl u Ar эффективный_идентификатор_пользователя
Ограничить совпадения процессами с ID пользователя в 
разделённом запятыми списке
.Ar эффективный_идентификатор_пользователя .
.It Fl v
Инвертирует условия совпадения; показывает процессы, которые не соответствуют
указанным критериям.
.It Fl x
Требует точного совпадения имени процесса или списка аргументов, если
.Fl f
указан.
По умолчанию соответствует любой подстроке.
.It Fl Ns Ar сигнал
Неотрицательное десятичное число или символическое имя сигнала, указывающее сигнал,
который будет отправлен вместо стандартного
.Dv TERM .
Эта опция действительна только при указании как первого аргумента команде
.Nm pkill .
.El
.Pp
Если указаны какие-либо операнды
.Ar шаблон ,
они используются как расширенные регулярные выражения для сопоставления
имени команды или полного списка аргументов каждого процесса.
Если опция
.Fl f
не указана, то
.Ar шаблон
будет пытаться совпадать с именем команды.
Однако, в настоящее время
.Fx
будет отслеживать только первые 19 символов имени команды 
для каждого процесса.
Попытки совпадения любых символов имени команды после первых 19 
будут тихо игнорироваться.
.Pp
Обратите внимание, что выполняющиеся процессы
.Nm pgrep
или
.Nm pkill
никогда не будут рассматривать себя или системные процессы (потоки ядра) как
возможное совпадение.
.Sh ПРИМЕЧАНИЯ ПО ВНЕДРЕНИЮ
Реализация в Sun Solaris использовала procfs для получения информации о процессах.
Данная реализация использует
.Xr kvm 3
вместо  этого.
На работающей системе
.Xr kvm 3
использует
.Va kern.proc
БУИ для получения списка процессов, при этом доступ к памяти ядра через
.Pa /dev/kmem
не осуществляется.
.Sh СТАТУС ЗАВЕРШЕНИЯ
Утилиты
.Nm pgrep
и
.Nm pkill
при завершении
возвращают одно из следующих значений:
.Bl -tag -width indent
.It 0
Один или несколько процессов были найдены.
.It 1
Процессы не были найдены.
.It 2
На командной строке были указаны неверные опции.
.It 3
Произошла внутренняя ошибка.
.El
.Sh ПРИМЕРЫ
Показать ID процесса, который использует
.Pa /tmp/.X0-lock
файл ID процессов:
.Bd -literal -offset indent
$ pgrep -F /tmp/.X0-lock
1211
.Ed
.Pp
Показать ID и имя процесса, включая потоки ядра в
поиске:
.Bd -literal -offset indent
$ pgrep -lS vnlru
37 vnlru
.Ed
.Pp
Искать процессы, включая потоки ядра, которые соответствуют
расширенному регулярному выражению:
.Bd -literal -offset indent
$ pgrep -S 'crypto.*[2-3]'
20
19
6
5
.Ed
.Pp
Показать подробный вывод для процессов firefox:
.Bd -literal -offset indent
$ pgrep -l firefox
1312 firefox
1309 firefox
1288 firefox
1280 firefox
1279 firefox
1278 firefox
1277 firefox
1264 firefox
.Ed
.Pp
То же, что и выше, но показывается только PI самого последнего процесса:
.Bd -literal -offset indent
$ pgrep -n firefox
1312
.Ed
.Pp
Искать процессы vim.
Сравнение со всем списком аргументов:
.Bd -literal -offset indent
$ pgrep -f vim
44968
30790
.Ed
.Pp
То же, что и выше, но сравнение происходит с
.Ql list
и показывается весь список аргументов:
.Bd -literal -offset indent
$ pgrep -f -l list
30790 vim list.txt
.Ed
.Pp
Отправить сигнал
.Va SIGSTOP
процессам, которые точно соответствуют:
.Bd -literal -offset indent
$ pkill -SIGSTOP -f -x "vim list.txt"
.Ed
.Pp
Без
.Fl f
имена длиннее 19 символов будут молча игнорироваться:
.Bd -literal -offset indent
$ vim this_is_a_very_long_file_name &
[1] 36689
$

[1]+  Остановлено                vim this_is_a_very_long_file_name
$ pgrep "vim this"
$
.Ed
.Pp
То же, что и выше, но с использованием флага
.Fl f
флага:
.Bd -literal -offset indent
$ pgrep -f "vim this"
36689
.Ed
.Pp
Найти команду
.Xr top 1,
работающую в любом джэйле:
.Bd -literal -offset indent
$ pgrep -j any top
34498
.Ed
.Pp
Показать все процессы, запущенные в ID джейла 58:
.Bd -literal -offset indent
$ pgrep -l -j58 '.*'
28397 pkg-static
28396 pkg-static
28255 sh
28254 make
.Ed
.Sh СОВМЕСТИМОСТЬ
Исторически сложилось, что опция
.Dq Fl j Li 0
означает любой джэйл, хотя в других утилитах, таких как
.Xr ps 1
ID джэйла
.Li 0
имеет противоположное значение - не в джэйле.
Поэтому,
.Dq Fl j Li 0
устарела, и ее использование не рекомендуется в пользу
.Dq Fl j Li any .
.Sh SEE ALSO
.Xr kill 1 ,
.Xr killall 1 ,
.Xr ps 1 ,
.Xr flock 2 ,
.Xr kill 2 ,
.Xr sigaction 2 ,
.Xr kvm 3 ,
.Xr pidfile 3 ,
.Xr re_format 7
.\" Xr signal 7
.Sh ИСТОРИЯ
Утилиты
.Nm pkill
и
.Nm pgrep
впервые появились 
в
.Nx 1.6 .
Они были созданы по образцу утилит с тем же именем, которые впервые появились в Sun
Solaris 7.
Они впервые появились в
.Fx 5.3 .
.Sh АВТОРЫ
.An Эндрю Доран, он же Mt ad@NetBSD.org
