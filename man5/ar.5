.\" Copyright (c) 2010 Joseph Koshy.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd 28 ноября, 2010
.Dt AR 5
.Os
.Sh ИМЯ
.Nm ar
.Nd формат архивного файла для  
.Xr ar 1
и
.Xr ranlib 1
.Sh СИНТАКСИС
.In ar.h
.Sh ОПИСАНИЕ
.Xr ar 1
Архивы создаются и управляются
.Xr ar 1
И
.Xr ranlib 1
Эти архивы обычно используются во время разработки программ для
хранения библиотек объектных файлов.  
Архив
.Xr ar 1
содержится в одном файле операционной системы.  
.Pp
Эта справочная страница документирует два варианта 
.Xr ar 1
формата архивов: формат архивов BSD и
формат архивов SVR4/GNU.  
.Pp
В обоих вариантах файл архива начинается с идентифицирующей 
последовательности байтов из семи ASCII-символов  
.Sq Li "!<arch>"
за которой следует символ перевода строки ASCII
.Po
см. константу
.Dq ARMAG
в заголовочном файле
.In ar.h
.Pc .
.Pp
Члены архива следуют за начальной идентифицирующей последовательностью байтов. Каждый член архива предваряется фиксированным заголовком, описывающим 
атрибуты файла, связанные с членом.  
.Ss "Заголовки архива"  
Заголовок архива описывает атрибуты файла для 
следующего члена архива. 
Формат
.Nm
поддерживает только ограниченное количество атрибутов: имя файла, 
временную метку создания файла, uid и gid создателя,
режим файла и размер файла. 
.Pp
Заголовки архивов располагаются на четком байтовом смещении в файле архива. 
Если данные для члена архива заканчиваются на нечетном байтовом смещении, то 
используется байт заполнения со значением 0x0A, чтобы расположить следующий
заголовок архива на четком байтовом смещении.  
.Pp
Заголовок архива состоит из следующих фиксированных полей:  
.Bl -tag -width "Li ar_name"
.It Ar ar_name
(16 байт) Имя файла члена архива. 
Формат этого поля варьируется между форматами BSD и SVR4/GNU и
описан более подробно в разделе  
.Sx "Представление имен файлов"  
ниже.  
.It Ar ar_date
(12 байт) Время модификации файла для члена в секундах с начала
эпохи, закодированное как десятичное число.  
.It Ar ar_uid
(6 байт) uid, связанный с членом архива, закодированный как
десятичное число.  
.It Ar ar_gid
(6 байт) gid, связанный с членом архива, закодированный как 
десятичное число.  
.It Ar ar_mode
(8 байт) Режим файла для члена архива, закодированный как восьмеричное 
число.  
.It Ar ar_size
(10 байт) В формате архивов SVR4/GNU это поле содержит размер в 
байтах члена архива, закодированный как десятичное число.
В формате архивов BSD для коротких имен файлов это поле 
содержит размер в байтах члена архива, закодированный как десятичное
число.
Для длинных имен файлов   
.Po
см.   
.Sx "Представление имен файлов"   
ниже,   
.Pc ,
это поле содержит комбинированный размер члена
архива и его имени файла, закодированный как десятичное число. 
.It Ar ar_fmag
(2 байта) Это поле содержит 2 байта со значениями 0x96 и 0x0A
соответственно, обозначающие конец заголовка.  
.El
.Pp
Неиспользуемые байты в полях заголовка архива устанавливаются в значение 
0x20.
.Ss "Представление имен файлов"
Варианты BSD и SVR4/GNU используют разные схемы кодирования имен файлов для 
членов архива.
.Bl -tag -width "SVR4/GNU"
.It "BSD"
Имена файлов длиной до 16 байт, которые не содержат 
встроенных пробелов, хранятся непосредственно в
.Ar ar_name
поле заголовка архива. 
Имена файлов, которые длиннее 16 байт или содержат 
встроенные пробелы, хранятся сразу после заголовка архива, 
а
.Ar ar_name
поле заголовка архива устанавливается в строку 
.Dq "#1/"
с последующим десятичным представлением количества байтов, необходимых для
имени файла. 
Кроме того
.Ar ar_size
поле заголовка архива устанавливается в десятичное представление 
комбинированных размеров члена архива и имени файла. 
Содержимое файла члена следует сразу после имени файла без дополнительного 
заполнения.
.Pp
Например, если имя файла для члена было 
.Dq "A B"
и его содержимое — строка 
.Dq "C D" ,
то
.Ar ar_name
поле заголовка будет содержать 
.Dq Li "#1/3" ,
поле
.Ar ar_size
заголовка будет содержать 
.Dq Li 6 ,
а байты, следующие сразу после заголовка, будут 0x41, 0x20,
0x42, 0x43, 0x20 и 0x44
.Po
ASCII
.Dq "A BC D"
.Pc .
.It "SVR4/GNU"
Имена файлов длиной до 15 символов хранятся непосредственно в
.Ar ar_name
поле заголовка, завершаемом
.Dq Li /
символом.
.Pp
Если имя файла больше, чем может поместиться в поле для 
.Ar ar_name
то фактическое имя файла хранится в таблице 
строк архива
.Po
см.
.Sx "Таблицы строк архива" 
ниже
.Pc ,
а десятичный смещение имени файла в таблице строк сохраняется 
в 
.Ar ar_name
поле, предшествуемом
.Dq Li /
символом.
.Pp
Например, если реальное имя файла было сохранено по смещению 768 в таблице строк 
архива, то
.Ar ar_name
поле заголовка будет содержать строку 
.Dq /768 .
.El
.Ss "Специальные члены архива"
Следующие члены архива являются специальными.
.Bl -tag -width indent
.It Dq Li /
В варианте формата архива SVR4/GNU член архива с
именем 
.Dq Li /
обозначает таблицу символов архива. 
Если она присутствует, этот член будет первым членом в 
архиве.
.It Dq Li //
В варианте формата архива SVR4/GNU член архива с
именем 
.Dq Li //
обозначает строковую таблицу архива.  
Этот специальный член используется для хранения имен файлов, которые не помещаются в поле
имени файла заголовка.  
.Po
см.  
.Sx "Представление имен файлов"  
выше  
.Pc .
Если он присутствует, то этот элемент следует непосредственно за таблицей 
архивных символов, если присутствует таблица архивных символов, или является первым элементом в противном случае.
.It Dq Li "__.SYMDEF"
Этот специальный член содержит символическую таблицу архива в 
формате BSD.  
Если он присутствует, этот член будет первым в 
архиве.  
.El
.Ss "Строковые таблицы архивов"  
Строковая таблица архива используется в формате архива SVR4/GNU для хранения 
имен файлов, которые слишком велики, чтобы поместиться в ограничениях
.Ar ar_name
поля заголовка архива.  
Строковая таблица архива содержит последовательность имен файлов.  
Каждое имя файла в строковой таблице архива завершается 
последовательностью байтов 0x2F, 0x0A
.Po
ASCII - строка
.Dq "/\en"
.Pc .
Для разделения соседних имен файлов не используется дополнение.  
.Ss "Символические таблицы архивов"  
Символические таблицы архивов используются для ускорения редактирования связывания, предоставляя
сопоставление между программными символами, определенными в архиве,
и соответствующими членами архива.  
Символические таблицы архивов управляются 
.Xr ranlib 1
утилитой.
.Pp
Формат символических таблиц архивов следующий:  
.Bl -tag -width "SVR4/GNU"
.It BSD
В формате архива BSD символическая таблица архива состоит 
из двух частей: часть, содержащая массив
.Vt "struct ranlib"
дескрипторов,и часть, содержащая строковую таблицу символов.  
Размеры и расположение структур, составляющих символическую таблицу 
архива формата BSD, зависят от машины.  
.Pp
Часть, содержащая   
.Vt "struct ranlib"
дескрипторы начинается с поля, содержащего размер в байтах 
массива
.Vt "struct ranlib"
дескрипторов, закодированного как C  
.Vt long
значение.
.Pp
Массив
.Vt "struct ranlib"
дескрипторов следует за полем размера.  
Каждый 
.Vt "struct ranlib"
дескриптор описывает один символ.  
.Pp
Дескриптор  
.Vt "struct ranlib"
состоит из двух полей:  
.Bl -tag -width "Ar ran_strx" -compact
.It Ar ran_strx
.Pq C Vt long
Это поле содержит нулевой индекс смещения имени символа 
в строковой таблице символов.  
.It Ar ran_off
.Pq C Vt long
Это поле - смещение файла к заголовку архива для члена
архива, определяющего символ.  
.El
.Pp
Часть, содержащая строковую таблицу символов, начинается с поля,
содержащего размер в байтах строковой таблицы, закодированного как C  
.Vt long
значение.
Эта строковая таблица следует за полем размера и содержит 
строки, завершенные нулем, для символов в таблице символов.  
.It SVR4/GNU
В формате архива SVR4/GNU символическая таблица архива начинается с 
4-байтового бинарного значения, содержащего количество записей в 
символической таблице архива.  
Это количество записей хранится с самым значимым байтом первым.  
.Pp
Далее идут
.Ar count
4-байтовых чисел, каждое из которых хранится с самым значимым байтом первым.  
Каждое число - это бинарное смещение к заголовку архива для члена в 
архивном файле для соответствующей записи символической таблицы.  
.Pp
После значений двоичных смещений идут  
.Ar count
строк, завершенных нулем, последовательно хранящих имена символов для
соответствующих записей символической таблицы.  
.El
.Sh СООТВЕТСТВИЕ СТАНДАРТАМ
Формат
.Xr ar 1
архива в настоящее время не специфицирован стандартом.  
.Pp
Эта справочная страница документирует
.Xr ar 1
форматы архивов используемые в 
.Bx 4.4
и
.Ux SVR4
в операционных системах.
.Sh СМ. ТАКЖЕ
.Xr ar 1 ,
.Xr ld 1 ,
.Xr ranlib 1 ,
.Xr elf 3 ,
.Xr elf_getarsym 3 ,
.Xr elf_rand 3
