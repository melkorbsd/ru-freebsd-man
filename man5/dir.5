.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)dir.5	8.3 (Berkeley) 4/19/94
.\"
.Dd 14 ноября, 2018
.Dt DIR 5
.Os
.Sh ИМЯ
.Nm dir ,
.Nm dirent
.Nd формат файлов каталогов
.Sh КРАТКОЕ ОПИСАНИЕ
.In dirent.h
.Sh ОПИСАНИЕ
Каталоги предоставляют удобный иерархический способ группировки
файлов, скрывая детали хранения. 
Файл каталога отличается от обычного файла
флагом в его записи
.Xr inode 5 .
Он состоит из записей (записей каталога), каждая из которых содержит 
информацию о файле и указатель на сам файл. 
Записи каталога могут содержать другие каталоги, 
а также обычные файлы; такие вложенные каталоги называются
подкаталогами. 
Таким образом, формируется иерархия каталогов 
и файлов, которая называется файловой системой (или файловым деревом).
.\" An entry in this tree,
.\" nested or not nested,
.\" is a pathname.
.Pp
Каждый файл каталога содержит две специальные записи каталога; одна из них — это указатель 
на сам каталог, 
называемый точкой 
.Ql .&
и другая — указатель на родительский каталог, называемая точка-точка 
.Ql &.. .
Точка и точка-точка 
являются допустимыми именами путей, однако 
корневой каталог системы 
.Ql / 
не имеет родителя, и точка-точка указывает на себя так же, как и точка.
.Pp
Узлы файловой системы — это обычные файлы каталогов, к которым 
присоединен объект файловой системы, такой как физический диск или 
раздел такого диска. 
(См. 
.Xr mount 2 
и 
.Xr mount 8 .)
.Pp
Формат записи каталога определен в файле 
.In sys/dirent.h 
(который не следует включать напрямую в приложения):
.Bd -literal
#ifndef _SYS_DIRENT_H_
#define _SYS_DIRENT_H_

#include <machine/ansi.h>

/*
 * Структура dirent определяет формат записей каталога, возвращаемых
 * системным вызовом getdirentries(2).
 *
 * Запись каталога имеет структуру struct dirent в начале, содержащую ее
 * номер inode, длину записи и длину имени,
 * содержащегося в записи. За ними следует имя, дополненное до 8
 * байт с помощью нулевых байтов. Все имена гарантированно заканчиваются нулем.
 * Максимальная длина имени в каталоге — MAXNAMLEN.
 * Явное дополнение добавляется между последним членом заголовка и
 * d_name, чтобы избежать наличия дополнения ABI в конце dirent на
 * архитектурах LP64. Есть код, зависящий от d_name как последнего. Также,
 * сохранение этого дополнения для архитектур ILP32 упрощает слой compat32.
*/

struct dirent {
    ino_t      d_fileno;  /* номер файла записи */
    off_t      d_off;     /* смещение каталога следующей записи */
    __uint16_t d_reclen;  /* длина этой записи */
    __uint8_t  d_type;    /* тип файла, см. ниже */
    __uint8_t  d_namlen;  /* длина строки в d_name */
    __uint32_t d_pad0;
#if __BSD_VISIBLE
#define MAXNAMLEN 255
    char d_name[MAXNAMLEN + 1]; /* имя не должно превышать эту длину */
#else
    char d_name[255 + 1]; /* имя не должно превышать эту длину */
#endif
};

/*
 * Типы файлов
 */
#define DT_UNKNOWN  0
#define DT_FIFO     1
#define DT_CHR      2
#define DT_DIR      4
#define DT_BLK      6
#define DT_REG      8
#define DT_LNK     10
#define DT_SOCK    12
#define DT_WHT     14

/*
 * Преобразование между типами структуры stat и типами каталога.
 */
#define IFTODT(mode) (((mode) & 0170000) >> 12)
#define DTTOIF(dirtype) ((dirtype) << 12)

/*
 * Макрос _GENERIC_DIRSIZ дает минимальную длину записи, которая будет содержать
 * запись каталога. Это возвращает количество места в структуре direct
 * без поля d_name, плюс достаточно места для имени с завершающим
 * нулевым байтом (dp->d_namlen+1), округленным до границы в 8 байт.
 *
 * XXX хотя этот макрос находится в пространстве имен реализации, он требует
 * манифестной константы, которая не является таковой.
 */
#define _GENERIC_DIRLEN(namlen)     
 ((__offsetof(struct dirent, d_name) + (namlen) + 1 + 7) & ~7)
#define _GENERIC_DIRSIZ(dp) _GENERIC_DIRLEN((dp)->d_namlen)
#endif /* __BSD_VISIBLE */

#ifdef _KERNEL
#define GENERIC_DIRSIZ(dp) _GENERIC_DIRSIZ(dp)
#endif

#endif /* !_SYS_DIRENT_H_ */
.Ed
.Sh СМОТРИТЕ ТАКЖЕ
.Xr fs 5 ,
.Xr inode 5
.Sh ИСТОРИЯ
Формат файла 
.Nm 
появился в 
.At v7 .
.Sh ОШИБКИ
Использование поля d_type структуры dirent является непортируемым, так как оно специфично для 
.Fx . 
Также оно может не работать на некоторых файловых системах, например, на файловой системе cd9660.