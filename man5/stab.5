.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)stab.5	8.1 (Berkeley) 6/5/93
.\"
.Dd June 10, 2010
.Dt STAB 5
.Os
.Sh имя
.Nm распределённые вычисления
.Nd типы таблиц символов
.Sh КРАТКИЙ ОБЗОР
.In stab.h
.Sh ОПИСАНИЕ
На вкладке "Файлы"
.In stab.h
определены некоторые элементы таблицы символов
.Fa n_type
 для файлов a.out.
Это типы постоянных символов (т.е. не локальных меток и т.д.)
используемых старым отладчиком
.Em sdb
и компилятор Berkeley Pascal
.Xr pc 1 .
Записи в таблице символов могут быть созданы с помощью
.Pa .stabs
директива ассемблера.
Это позволяет указать имя, заключенное в двойные кавычки, тип символа, 
один символ char и один короткий текст с информацией о символе, 
а также длинный текст без знака (обычно это адрес).
Чтобы избежать необходимости создавать явную метку для поля адреса,
директива
.Pa .stabd
может использоваться для неявного указания текущего местоположения.
Если имя не требуется, записи таблицы символов могут быть сгенерированы с помощью
.Pa .stabn
директивы.
Загрузчик обещает сохранить порядок записей в таблице символов, 
создаваемых
.Pa .stab
директивы.
Как описано в
.Xr a.out 5 ,
элемент таблицы символов
состоит из следующей структуры:
.Bd -literal
/*
* Формат записи в таблице символов.
*/

struct nlist {
	union {
		const char *n_name;	/* for use when in-core */
		long	n_strx;		/* index into file string table */
	} n_un;
	unsigned char	n_type;		/* type flag */
	char		n_other;	/* unused */
	short		n_desc;		/* see struct desc, below */
	unsigned	n_value;	/* address or offset or line */
};
.Ed
.Pp
Самые низкие биты в
.Fa n_type
поля используются для размещения символа
не более чем в одном сегменте в соответствии со
следующими масками, определенными в
.In a.out.h .
Символ не может находиться ни в одном из этих сегментов, если не задан ни один из
битов этого сегмента.
.Bd -literal
/*
* Simple values for n_type.
*/

#define	N_UNDF	0x0	/* undefined */
#define	N_ABS	0x2	/* absolute */
#define	N_TEXT	0x4	/* text */
#define	N_DATA	0x6	/* data */
#define	N_BSS	0x8	/* bss */

#define	N_EXT	01	/* external bit, or'ed in */
.Ed
.Pp
Поле 
.Fa n_value
символа перемещается компоновщиком,
.Xr ld 1
как адрес в соответствующем сегменте.
.Fa N_value
поля символов, которых нет ни в одном сегменте, остаются неизменными компоновщиком.
Кроме того, компоновщик будет отбрасывать определенные символы в соответствии со
своими собственными правилами, если только
.Fa n_type
в поле установлен один из следующих битов:
.Bd -literal
/*
* Для других записей таблицы постоянных символов установлены некоторые биты N_STAB.
* Они приведены в <stab.h>
*/

#define	N_STAB	0xe0	/* if any of these bits set, don't discard */
.Ed
.Pp
Это позволяет использовать до 112 (7 \(** 16) типов символов, разделенных между различными
сегментами.
Некоторые из них уже использовались.
Старый символьный отладчик,
.Em sdb ,
использует следующие значения n_type:
.Bd -literal
#define	N_GSYM	0x20	/* global symbol: name,,0,type,0 */
#define	N_FNAME	0x22	/* procedure name (f77 kludge): name,,0 */
#define	N_FUN	0x24	/* procedure: name,,0,linenumber,address */
#define	N_STSYM	0x26	/* static symbol: name,,0,type,address */
#define	N_LCSYM	0x28	/* .lcomm symbol: name,,0,type,address */
#define	N_RSYM	0x40	/* register sym: name,,0,type,register */
#define	N_SLINE	0x44	/* src line: 0,,0,linenumber,address */
#define	N_SSYM	0x60	/* structure elt: name,,0,type,struct_offset */
#define	N_SO	0x64	/* source file name: name,,0,0,address */
#define	N_LSYM	0x80	/* local sym: name,,0,type,offset */
#define	N_SOL	0x84	/* #included file name: name,,0,0,address */
#define	N_PSYM	0xa0	/* parameter: name,,0,type,offset */
#define	N_ENTRY	0xa4	/* alternate entry: name,linenumber,address */
#define	N_LBRAC	0xc0	/* left bracket: 0,,0,nesting level,address */
#define	N_RBRAC	0xe0	/* right bracket: 0,,0,nesting level,address */
#define	N_BCOMM	0xe2	/* begin common: name,, */
#define	N_ECOMM	0xe4	/* end common: name,, */
#define	N_ECOML	0xe8	/* end common (local name): ,,address */
#define	N_LENG	0xfe	/* second stab entry with length information */
.Ed
.Pp
где комментарии дают
.Em sdb
обычное использование для
.Pa .stab
.Fa s
и
.Fa n_name ,
.Fa n_other ,
.Fa n_desc ,
и
.Fa n_value
поля
из данного
.Fa n_type .
.Em Sdb
использует
.Fa n_desc
поле для хранения типа, указанного в форме, используемой
переносимым компилятором C,
.Xr cc 1 ;
смотрите файл заголовка
.Pa pcc.h
для получения подробной информации о формате значений этого типа.
.Pp
Компилятор Berkeley Pascal,
.Xr pc 1 ,
использует следующую
.Fa n_type
ценность:
.Bd -literal
#define	N_PC	0x30	/* global pascal symbol: name,,0,subtype,line */
.Ed
.Pp
и использует следующие подтипы для проверки типов в отдельно
скомпилированных файлах:
.Bd -unfilled -offset indent
1	имя исходного файла
2	включенное имя файла
3	глобальный лейбл
4	глобальная константа
5	глобальный тип
6	глобальная переменная
7	глобальная функция
8	глобальная процедура
9	внешняя функция
10	внешняя процедура
11	библиотечная переменная
12	библиотечная рутина
.Ed
.Sh СМОТРИТЕ ТАКЖЕ
.Xr as 1 ,
.Xr ld 1 ,
.Xr a.out 5
.Sh ИСТОРИЯ
файл
.Nm
 появился в
.Bx 4.0 .
.Sh ОШИБКИ
Необходимы более простые типы.
