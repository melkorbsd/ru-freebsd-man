.\" Copyright (C) 2007, 2010 Gabor Kovesdan. All rights reserved.
.\" Copyright (C) 2021 Faraz Vahedi <kfv@kfv.io>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd Апрель 20, 2021
.Dt C 7
.Os
.Sh ИМЯ
.Nm c ,
.Nm c78 ,
.Nm c89 ,
.Nm c90 ,
.Nm c95 ,
.Nm c99 ,
.Nm c11 ,
.Nm c17 ,
.Nm c2x
.Nd The C programming language
.Sh ОПИСАНИЕ
C - это язык программирования общего назначения, который имеет тесную связь
с операционной системой UNIX и ее производными, поскольку подавляющее
большинство этих систем было написано на языке C.
Язык C содержит некоторые базовые идеи, заимствованные из языка BCPL, а также из языка B, написанного Кеном Томпсоном в 1970 году для компьютеров DEC PDP-7.
Разработка операционной системы UNIX была начата на PDP-7
машина написана на языке ассемблера, но это очень затрудняло перенос существующего
кода на другие системы.
.Pp
В 1972 году Деннис М. Ричи разработал язык программирования Си для
дальнейшего развития операционной системы UNIX.
Идея состояла в том, чтобы реализовать только компилятор C для разных
платформ и реализовать большую часть операционной системы
на новом языке программирования, чтобы упростить переносимость между
различными архитектурами.
Из этого следует, что язык Си вполне подходит для написания
операционных систем и низкоуровневых приложений (но не ограничивается ими).
.Pp
Долгое время у языка Си не было спецификации или стандартизированной версии.
На протяжении веков он претерпевал множество изменений и улучшений.
В 1978 году Брайан У. Керниган и Деннис М. Ричи опубликовали
первую книгу о Си под названием "Язык программирования Си".
Мы можем рассматривать эту книгу как первую спецификацию языка.
Эту версию часто называют K&R C по фамилиям авторов.
Иногда ее также называют C78, в честь года публикации
первого издания книги.
.Pp
Важно отметить, что набор команд языка
ограничен самыми фундаментальными элементами для простоты.
Обработка стандартного ввода-вывода и такие распространенные функции реализованы в
библиотеках, поставляемых с компилятором.
Поскольку эти функции также широко используются, потребовалось указать в
описании, каким требованиям должна соответствовать библиотека,
а не только сам язык.
Соответственно, вышеупомянутые стандарты распространяются и на библиотечные элементы.
Элементов этой стандартной библиотеки все равно недостаточно для решения более
сложных задач.
В этом случае могут быть использованы предоставленные системные вызовы данной операционной системы.
Чтобы не потерять переносимость при использовании этих системных вызовов, POSIX
Стандарт (интерфейс портативной операционной системы) эволюционировал.
В нем описывается, какие функции должны быть доступны для сохранения мобильности.
Обратите внимание, что POSIX - это не стандарт C, а стандарт операционной системы, и поэтому он выходит за рамки данного руководства.
Все стандарты, обсуждаемые ниже, являются стандартами C и охватывают только
язык программирования C и прилагаемую библиотеку.
Все перечисленные улучшения для каждой версии стандарта взяты из официального
проекты стандартов.
Для получения более подробной информации ознакомьтесь с общедоступными проектами или
приобретите опубликованные стандарты на ресурсах ISO или IEC.
.Pp
После публикации упомянутой ранее книги
Американский национальный институт стандартов (ANSI) начал работать над
стандартизацией языка и в 1989 году анонсировал ANSI X3.159-1989.
Обычно его называют ANSI C или C89.
Основное отличие этого стандарта в том, что в нем используются прототипы функций,
что является новым способом объявления функций.
Из-за устаревших описаний функций компилятор не мог
проверить правильность фактических параметров при вызове функции.
Старый синтаксис был очень подвержен ошибкам из-за несовместимости параметров
их было трудно обнаружить в программном коде, и проблема проявилась только
во время выполнения.
.Pp
В 1990 году Международная организация по стандартизации (ISO) приняла
стандарт ANSI в качестве стандарта ISO/IEC 9899:1990 в 1990 году.
Он также называется ISO C или C90.
Он содержит лишь незначительные изменения по сравнению с ANSI C,
поэтому эти два стандарта часто считаются полностью эквивалентными.
Это стало очень важной вехой в истории языка Си, но
развитие языка не остановилось.
.Pp
Позднее стандарт ISO C был дополнен поправкой в виде
ISO/IEC 9899/AMD1 в 1995 году.
Это содержало, например, поддержку широких символов в <wchar.h> и
<wctype.h>, а также ограниченную поддержку набора символов с помощью diagraphs и
<iso646.h>.
Эта поправка обычно упоминается как 95.
Также были опубликованы два технических исправления: Техническое исправление 1 как
ISO/IEC 9899/COR1 в 1994 году и Техническое исправление 2 в качестве ISO/IEC 9899/COR2
в 1996 году.
Постоянное развитие и рост привели к необходимости разработки нового
стандарта, который содержит новые функции и исправляет известные дефекты и
недостатки языка.
В результате в 1999 году появилось второе издание стандарта ISO/IEC 9899:1999.
Как и другие стандарты, этот стандарт неофициально назван C99 в честь
года публикации.
Улучшения включают (но не ограничиваются ими) следующее:
.Bl -bullet -offset indent
.It
орграфы, триграфы и альтернативные варианты написания для операторов,
использующих символы, отличные от ISO 646, в <iso646.h>
.It
расширенная поддержка многобайтовых и широких библиотек символов в <wchar.h> и
<wctype.h>
.It
массивы переменной длины
.It
гибкие элементы массива
.It
поддержка арифметики комплексных (и мнимых) чисел в <complex.h>
.It
тип-общие математические макросы в <tgmath.h>
.It
тип long long int и библиотечные функции
.It
удалить неявный тип int
.It
универсальные имена символов (\eu и \ЕС)
.It
составные литералы
.It
удалить неявное объявление функции
.It
Однострочные комментарии в стиле BCPL
.It
разрешать смешанные объявления и код
.It
семейство функций scanf в <stdio.h> и <wchar.h>
.It
разрешить заключительную запятую в объявлении перечисления
.It
встроенные функции
.It
семейство функций snprintf в <stdio.h>
.It
логический тип и макросы в <stdbool.h>
.It
пустые аргументы макроса
.It
_Pragma оператор предварительной обработки
.It
__func__ предопределенный идентификатор
.It
макрос va_copy в <stdarg.h>
.It
дополнительные спецификаторы преобразования strftime
.El
.Pp
Позднее, в 2011 году, вышло третье издание стандарта, ISO/IEC 1989:2011,
обычно называемое C11 (ранее C1x), которое заменило
второе издание на ISO/IEC 9899:1999/COR 1:2001, ISO/IEC 9899:1999/COR 2:2004,
и ISO/IEC 9899:1999/COR 3:2007.
Улучшения включают (но не ограничиваются ими) следующее:
.Bl -bullet -offset indent
.It
поддержка многопоточного выполнения и атомарных операций в <threads.h>
и <stdatomic.h>
.It
дополнительные характерные макросы с плавающей запятой в <float.h>
.It
querying and specifying alignment of objects in <stdalign.h> and <stdlib.h>
.It
Типы и функции символов Юникода в <uchar.h>
.It
общие выражения типа
.It
статические утверждения в <assert.h>
.It
анонимные структуры и объединения
.It
удалите функцию gets из <stdio.h>
.It
добавьте функции aligned_alloc, at_quick_exit и quick_exit в <stdlib.h>
.El
.Pp
C11 позже был заменен стандартом ISO/IEC 9899:2018, также известным как C17, который был
подготовлен в 2017 году и опубликован в июне 2018 года в качестве четвертого издания.
В него включено Техническое исправление 1 (ISO/IEC 9899:2011/COR 1:2012), опубликованное в 2012 году.
В нем рассматриваются дефекты и недочеты в C11 без введения новых функций,
только исправления и разъяснения.
Поскольку в C17 не было никаких серьезных изменений, текущим стандартом для
языка программирования C по-прежнему считается C11 \(em ISO/IEC 9899:2011, опубликован
2011-12-08.
.Pp
Следующий стандарт, пятый, в настоящее время называется C2x, и его принятие запланировано
на конец 2021 года, а дата публикации - на 2022 год.
После публикации он отменит и заменит четвертое издание стандарта ISO/IEC
9899:2018.
.Pp
Некоторые компиляторы предоставляют некоторые полезные функции в качестве расширений, но
они не могут рассматриваться как стандартные.
.Pp
Комитет ISO/IEC JTC1/SC22/WG14 отвечает за стандарт ISO/IEC 9899,
C.
.Sh СМОТРИТЕ ТАКЖЕ
.Xr c89 1 ,
.Xr c99 1 ,
.Xr cc 1
.Sh СТАНДАРТЫ
.Rs
.%A ANSI
.%T X3.159-1989 (aka C89 or ANSI C)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1990 (aka C90)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1990/AMD 1:1995, Amendment 1: C Integrity (aka C95)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1990/COR 1:1994, Technical Corrigendum 1
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1990/COR 2:1996, Technical Corrigendum 2
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1999 (aka C99)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1999/COR 1:2001, Technical Corrigendum 1
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1999/COR 2:2004, Technical Corrigendum 2
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:1999/COR 3:2007, Technical Corrigendum 3
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TR 24731-1:2007 (aka bounds-checking interfaces)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18037:2008 (aka, embedded C)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TR 24747:2009 (aka mathematical special functions)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TR 24732:2009 (aka decimal floating-point)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TR 24731-2:2010 (aka dynamic allocation functions)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:2011 (aka C11)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:2011/COR 1:2012, Technical Corrigendum 1
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 17961:2013 (aka C secure coding rules)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18861-1:2014 (aka binary floating-point)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18861-2:2015 (aka decimal floating-point)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18861-3:2015 (aka interchange and extended types)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18861-4:2015 (aka supplementary functions)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 17961:2013/COR 1:2016 (aka C secure coding rules TC1)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T TS 18861-5:2016 (aka supplementary attributes)
.Re
.Pp
.Rs
.%A ISO/IEC
.%T 9899:2018 (aka C17)
.Re
.Sh ИСТОРИЯ
Эта страница руководства впервые появилась в
.Fx 9.0 .
.Sh АВТОРЫ
.An -nosplit
Эта страница руководства была первоначально написана
.An Gabor Kovesdan Aq Mt gabor@FreeBSD.org .
Он был обновлен для
.Fx 14.0
от
.An Faraz Vahedi Aq Mt kfv@kfv.io
с информацией о более поздних стандартах языка Си.
