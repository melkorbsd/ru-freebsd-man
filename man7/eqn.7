.\"	$Id: eqn.7,v 1.39 2020/01/10 11:55:04 schwarze Exp $
.\"
.\" Copyright (c) 2011 Kristaps Dzonsons <kristaps@bsd.lv>
.\" Copyright (c) 2014 Ingo Schwarze <schwarze@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 10 2020 $
.Dt EQN 7
.Os
.Sh ИМЯ
.Nm eqn
.Nd справочник по языку eqn для mandoc
.Sh ОПИСАНИЕ
Язык
.Nm eqn
это язык форматирования уравнений.
Он используется на страницах руководства
.Xr mdoc 7
и
.Xr man 7
.Ux .
Он описывает
.Em структуру
уравнения, а не его математический смысл.
В данном руководстве описан язык
.Nm
принятый утилитой
.Xr mandoc 1  ,
что соответствует спецификации второго издания
.Nm
(смотрите раздел
.Sx СМОТРИТЕ ТАКЖЕ
для справок).
.Pp
Уравнение начинается со строки ввода, содержащей именно символы
.Sq \&.EQ ,
может содержать несколько строк ввода и заканчивается строкой ввода,
содержащей именно символы
.Sq \&.EN .
Аналогично, уравнение можно задать в середине одной
строки ввода текста, окружив его разделителями уравнений,
определенными с помощью инструкции
.Cm delim .
.Pp
Грамматика уравнения выглядит следующим образом, где заключенные в кавычки строки являются
литералами с учетом регистра во входных данных:
.Bd -literal -offset indent
eqn     : box | eqn box
box     : text
        | \(dq{\(dq eqn \(dq}\(dq
        | \(dqdefine\(dq text text
        | \(dqndefine\(dq text text
        | \(dqtdefine\(dq text text
        | \(dqgfont\(dq text
        | \(dqgsize\(dq text
        | \(dqset\(dq text text
        | \(dqundef\(dq text
        | \(dqsqrt\(dq box
        | box pos box
        | box mark
        | \(dqmatrix\(dq \(dq{\(dq [col \(dq{\(dq list \(dq}\(dq]* \(dq}\(dq
        | pile \(dq{\(dq list \(dq}\(dq
        | font box
        | \(dqsize\(dq text box
        | \(dqleft\(dq text eqn [\(dqright\(dq text]
col     : \(dqlcol\(dq | \(dqrcol\(dq | \(dqccol\(dq | \(dqcol\(dq
text    : [^space\e\(dq]+ | \e\(dq.*\e\(dq
pile    : \(dqlpile\(dq | \(dqcpile\(dq | \(dqrpile\(dq | \(dqpile\(dq
pos     : \(dqover\(dq | \(dqsup\(dq | \(dqsub\(dq | \(dqto\(dq | \(dqfrom\(dq
mark	: \(dqdot\(dq | \(dqdotdot\(dq | \(dqhat\(dq | \(dqtilde\(dq | \(dqvec\(dq
        | \(dqdyad\(dq | \(dqbar\(dq | \(dqunder\(dq
font    : \(dqroman\(dq | \(dqitalic\(dq | \(dqbold\(dq | \(dqfat\(dq
list    : eqn
        | list \(dqabove\(dq eqn
space   : [\e^~ \et]
.Ed
.Pp
Пробел состоит из символов пробела, табуляции,
окружности и тильды.
Он необходим для разделения символов, состоящих из буквенных символов,
и игнорируется в других местах.
Фигурные скобки и кавычки также разделяют символы.
Если строка заключена в кавычки, эти символы пробела сохраняются.
Строки, заключенные в кавычки, также не проверяются на наличие ключевых слов, названий символов
и расширений определений.
Чтобы напечатать буквальный символ кавычки, его можно дополнить
обратной косой чертой или выразить управляющей последовательностью \e(dq.
.Pp
Вложенные выражения могут быть заключены в фигурные скобки, чтобы передавать их в качестве аргументов
ключевым словам операций, переопределяя приоритет стандартных операций.
Фигурные скобки могут быть вложенными.
Чтобы дословно задать фигурную скобку, ее необходимо заключить в кавычки.
.Pp
Следующие текстовые термины переводятся в визуализированный глиф, если
таковой имеется: alpha, beta, chi, delta, epsilon, eta, gamma, iota, kappa,
lambda, mu, nu, omega, omicron, phi, pi, psi, rho, sigma, tau, theta,
upsilon, xi, zeta, DELTA, GAMMA, LAMBDA, OMEGA, PHI, PI, PSI, SIGMA,
THETA, UPSILON, XI, inter (intersection), union (union), prod (product),
int (integral), sum (summation), grad (gradient), del (vector
differential), times (multiply), cdot (center-dot), nothing (zero-width
space), approx (approximately equals), prime (prime), half (one-half),
partial (partial differential), inf (infinity), >> (much greater), <<
(much less), <\- (left arrow), \-> (right arrow), +\- (plus-minus), !=
(not equal), == (equivalence), <= (less-than-equal), and >=
(more-than-equal).
Управляющие последовательности символов, задокументированные в
.Xr mandoc_char 7
тоже можно использовать.
.Pp
Доступны следующие управляющие инструкции:
.Bl -tag -width Ds
.It Cm define
Замените все вхождения ключа значением.
Его синтаксис следующий:
.Pp
.D1 Cm define Ar key cvalc
.Pp
Первый символ строки значений,
.Ar c ,
используется в качестве разделителя для значения
.Ar val .
Это позволяет заключать термины произвольно (не только в кавычки), например
.Pp
.D1 Cm define Ar foo \(aqbar baz\(aq
.D1 Cm define Ar foo cbar bazc
.Pp
Наличие пустого поля
.Ar key
или
.Ar val 
является ошибкой.
Обратите внимание, что кавычки
.Ar key
вызывают ошибки в некоторых реализациях
.Nm
и не должен рассматриваться как переносимый.
Он не расширяется для замены.
Определения могут ссылаться на другие определения; они вычисляются
рекурсивно при замене текста, а не при создании определения.
.Pp
Определения могут создавать произвольные строки, например, следующая конструкция является
допустимой.
.Bd -literal -offset indent
define foo \(aqdefine\(aq
foo bar \(aqbaz\(aq
.Ed
.Pp
Определения, ссылающиеся на себя, приведут к возникновению ошибки.
Оператор
.Cm ndefine
является синонимом для
.Cm define ,
в то время как
.Cm tdefine
отбрасывается.
.It Cm delim
Этот оператор принимает строковый аргумент, состоящий из двух байт,
который будет использоваться в качестве начального и заключительного разделителей для уравнений
в середине строк ввода текста.
Обычно знак доллара используется для обоих разделителей
следующим образом:
.Bd -literal -offset indent
\&.EQ
delim $$
\&.EN
Уравнение типа $sin pi = 0$ теперь можно ввести
в середине строки ввода текста.
.Ed
.Pp
Специальный оператор
.Cm delim off
временно отключает ранее объявленные разделители и
.Cm delim on
снова включает их.
.It Cm gfont
Установите шрифт по умолчанию для последующего вывода.
Его синтаксис следующий:
.Pp
.D1 Cm gfont Ar font
.Pp
В mandoc это значение отбрасывается.
.It Cm gsize
Установите размер по умолчанию для последующего вывода.
Его синтаксис следующий:
.Pp
.D1 Cm gsize Oo +|\- Oc Ns Ar size
.Pp
Значение
.Ar size
должно быть целым числом.
Если перед текстом стоит знак,
размер шрифта изменяется относительно текущего размера.
.It Cm set
Установите режим уравнения.
В mandoc оба аргумента отбрасываются.
Его синтаксис следующий:
.Pp
.D1 Cm set Ar key val
.Pp
.Ar key
и
.Ar val
не расширяются для замены.
Это утверждение является расширением GNU.
.It Cm undef
Отмените установку ранее определенного ключа.
Его синтаксис следующий:
.Pp
.D1 Cm define Ar key
.Pp
После вызова определение для
.Ar key
отбрасывается.
.Ar key
не расширяется для замены.
Это утверждение является расширением GNU.
.El
.Pp
Ключевые слова операции имеют следующую семантику:
.Bl -tag -width Ds
.It Cm above
Смотрите
.Cm pile .
.It Cm bar
Нарисуйте линию над предыдущим полем.
.It Cm bold
Выделите следующее поле жирным шрифтом.
.It Cm ccol
Как
.Cm cpile ,
но для использования в
.Cm matrix .
.It Cm cpile
Как
.Cm pile ,
но с немного увеличенным расстоянием по вертикали.
.It Cm dot
Поставьте одну точку над предыдущим полем.
.It Cm dotdot
Установите две точки (различные) над предыдущим полем.
.It Cm dyad
Установите символ диады (стрелка влево-вправо) поверх предыдущего поля.
.It Cm fat
Синоним для
.Cm bold .
.It Cm font
Задайте второй аргумент, используя шрифт, указанный в первом аргументе;
в настоящее время не распознается синтаксическим анализатором
.Xr mandoc 1
.Nm .
.It Cm from
Установите следующее поле под предыдущим,
используя шрифт чуть меньшего размера.
Используется для сумм, интегралов, пределов и тому подобного.
.It Cm hat
Наденьте шапочку (circumflex) на предыдущее поле.
.It Cm italic
Установите следующее поле, используя курсивный шрифт.
.It Cm lcol
Как
.Cm lpile ,
но для использования в
.Cm matrix .
.It Cm left
Укажите первый аргумент в качестве большого левого разделителя перед вторым аргументом.
В качестве необязательного третьего аргумента,
.Cm right
может следовать.
В этом случае четвертый аргумент устанавливается как большой правый разделитель после
второго аргумента.
.It Cm lpile
Как
.Cm cpile ,
но вложенные уравнения выравниваются по левому краю.
.It Cm matrix
Далее следует список столбцов, заключенных в фигурные скобки.
Во всех столбцах должно быть одинаковое количество вложенных выражений.
Столбцы задаются в виде матрицы.
Разница по сравнению с несколькими последующими операторами
.Cm pile
заключается в
.Cm matrix ,
соответствующие подзаголовки во всех столбцах выстраиваются горизонтально,
в то время как
.Cm pile
независимо выстраивается по вертикали.
.It Cm over
Задайте дробь.
Предыдущее поле - это числитель, следующее поле - знаменатель.
.It Cm pile
За ним следует список подзаконных актов, заключенных в фигурные скобки,
причем подзаконные акты разделены ключевыми словами
.Cm above .
Задает вложенные уравнения одно над другим, каждое из которых центрируется.
Обычно используется для представления векторов в координатном представлении.
.It Cm rcol
Как
.Cm rpile ,
но для использования в
.Cm matrix .
.It Cm right
Смотрите
.Cm left ;
.Cm right
не может быть использован без
.Cm left .
Чтобы установить большой правый разделитель без большого левого разделителя,
можно использовать следующую конструкцию:
.Pp
.D1 Cm left No \(dq\(dq Ar box Cm right Ar delimiter
.It Cm roman
Установите следующее поле, используя шрифт по умолчанию.
.It Cm rpile
Как
.Cm cpile ,
но подзадачи правильно обоснованы.
.It Cm size
Установите во втором аргументе размер шрифта, указанный в первом
аргументе; в настоящее время игнорируется
.Xr mandoc 1 .
Добавляя знак плюс или минус к первому аргументу,
можно выбрать размер шрифта относительно текущего размера.
.It Cm sqrt
Установите квадратный корень из следующего поля.
.It Cm sub
Установите следующий флажок в качестве нижнего индекса к предыдущему полю.
.It Cm sup
Установите следующий флажок в качестве верхнего индекса к предыдущему полю.
В качестве особого случая, если предложение
.Cm sup
непосредственно следует за предложением
.Cm sub
как в
.Pp
.D1 Ar mainbox Cm sub Ar subbox Cm sup Ar supbox
.Pp
оба они установлены относительно одного и того же
.Ar mainbox ,
то есть,
.Ar supbox
установлен выше
.Ar subbox .
.It Cm tilde
Установите тильду над предыдущим полем.
.It Cm to
Установите следующее поле над предыдущим,
используя шрифт чуть меньшего размера.
Используется для сумм, интегралов и т.п.
В качестве особого случая, если предложение
.Cm to
следует непосредственно за предложением
.Cm from
как в
.Pp
.D1 Ar mainbox Cm from Ar frombox Cm to Ar tobox
.Pp
оба они установлены ниже и выше одного и того же
.Ar mainbox .
.It Cm under
Подчеркните предыдущее поле.
.It Cm vec
Установите векторный символ (стрелку вправо) поверх предыдущего поля.
.El
.Pp
Бинарные операции
.Cm from ,
.Cm to ,
.Cm sub ,
и
.Cm sup
группируются справа, то есть,
.Pp
.D1 Ar mainbox Cm sup Ar supbox Cm sub Ar subbox
.Pp
это то же самое, что
.Pp
.D1 Ar mainbox Cm sup Brq Ar supbox Cm sub Ar subbox
.Pp
и отличается от
.Pp
.D1 Bro Ar mainbox Cm sup Ar supbox Brc Cm sub Ar subbox .
.Pp
По контрасту,
.Cm over
группируется слева.
.Pp
В следующем списке более ранние операции связаны более тесно, чем
более поздние:
.Pp
.Bl -enum -compact
.It
.Cm dyad ,
.Cm vec ,
.Cm under ,
.Cm bar ,
.Cm tilde ,
.Cm hat ,
.Cm dot ,
.Cm dotdot
.It
.Cm fat ,
.Cm roman ,
.Cm italic ,
.Cm bold ,
.Cm size
.It
.Cm sub ,
.Cm sup
.It
.Cm sqrt
.It
.Cm over
.It
.Cm from ,
.Cm to
.El
.Sh СОВМЕСТИМОСТЬ
В этом разделе описывается совместимость реализации mandoc
.Nm
и реализации troff
.Nm
(включая GNU troff).
.Pp
.Bl -dash -compact
.It
Текстовая строка
.Sq \e\(dq
в troff интерпретируется как буквальная цитата.
В mandoc это интерпретируется как комментарий.
.It
В troff символы циркумфлекса и тильды, обозначающие пробелы,
соответствуют символам фиксированной ширины.
В mandoc эти символы являются синонимами символа пробела.
.It
Реализация troff
.Nm
позволяет выравнивать уравнения с помощью токенов
.Cm mark
и
.Cm lineup .
mandoc отбрасывает эти токены.
Команды
.Cm back Ar n ,
.Cm fwd Ar n ,
.Cm up Ar n ,
и
.Cm down Ar n
также игнорируются.
.El
.Sh СМОТРИТЕ ТАКЖЕ
.Xr mandoc 1 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr mdoc 7 ,
.Xr roff 7
.Rs
.%A Брайан У. Керниган
.%A Лоринда Л. Черри
.%T Система для математического набора текста
.%J Сообщения ACM
.%V 18
.%P стр. 151\(en157
.%D Март, 1975
.Re
.Rs
.%A Брайан У. Керниган
.%A Лоринда Л. Черри
.%T Математика набора текста, Руководство пользователя
.%D 1976
.Re
.Rs
.%A Брайан У. Керниган
.%A Лоринда Л. Черри
.%T Математика набора текста, Руководство пользователя (Второе издание)
.%D 1978
.Re
.Sh ИСТОРИЯ
Утилита eqn, препроцессор для troff, была первоначально написана
Брайаном У. Керниганом и Лориндой Л. Черри в 1975 году.
Новая реализация GNU eqn, входящая в состав пакета GNU troff, была
выпущена в 1989 году Джеймсом Кларком.
Компонент eqn в
.Xr mandoc 1
был добавлен в 2011 году.
.Sh АВТОРЫ
Эта ссылка
.Nm
была написана
.An Кристапом Дзонсоном Aq Mt kristaps@bsd.lv .
