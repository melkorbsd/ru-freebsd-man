.\" Copyright (c) 2002 Murray Stokely <murray@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd 6 августа 2023 г.
.Dt RELEASE 7
.Os
.Sh ИМЯ
.Nm release
.Nd "создание инфраструктуры выпуска"
.Sh ОПИСАНИЕ
.Fx
предоставляет полную среду сборки, подходящую пользователям для создания
полных выпусков операционной системы
.Fx .
операционной системы.
Все инструменты, необходимые для создания релиза, доступны в разделе
.Fx
репозиторий исходного кода в
.Pa src/release .
Полный релиз может быть собран с помощью всего одной команды,
включая создание ISO-образов, пригодных для записи на CD-ROM,
образов карт памяти и сетевого каталога установки.
Эта команда носит меткое название
.Dq Li "make release" .
.Pp
Для некоторых пользователей может оказаться желательным обеспечить абсолютно чистую
среду сборки, не внося локальных изменений в дерево исходных текстов или в
.Xr make.conf 5 ,
и с чистыми проверками конкретных версий деревьев doc, src и ports
деревьев.
Для этой цели используется скрипт
.Pq Pa src/release/release.sh
предназначен для автоматизации этих проверок и последующего выполнения
.Dq Li "make release"
в чистом
.Xr chroot 8 .
.Pp
Прежде чем приступить к сборке релиза, пользователь должен быть
прежде чем пытаться собрать релиз, пользователь должен ознакомиться с содержимым
.Xr создать 7 ,
и должен иметь опыт обновления систем из исходных текстов.
.Pp
Процесс сборки релиза требует, чтобы
.Pa /usr/obj
будет заполнена результатами
.Dq Li "make buildworld"
и
.Dq Li "make buildkernel" .
Это необходимо для того, чтобы предоставить объектные файлы для релиза или, при
использовании
.Pa release.sh ,
чтобы объектные файлы для всей системы можно было установить в чистый
.Xr chroot 8
окружение.
.Pp
Если целевая сборка релиза предназначена для другой архитектуры или типа машины, можно использовать
эту
.Va ЦЕЛЬ
и
.Va TARGET_ARCH
должны использоваться переменные.
Смотреть поддерживаемые
.Fa release.conf
для получения дополнительной информации.
.Pp
Процедура выпуска на некоторых архитектурах может также потребовать, чтобы в файле
.Xr md 4
(диск памяти) должен присутствовать в ядре.
.Pq либо в виде компиляции, либо в виде модуля.
.Pp
В этом документе не рассматриваются вопросы управления исходным кодом, обеспечения качества
управления исходным кодом, обеспечения качества или других аспектов процесса разработки релизов.
.Sh СОЗДАНИЕ ЧИСТОГО РЕЛИЗА
Официальные релизы
.Fx
создаются в чистом окружении, чтобы
чтобы обеспечить согласованность между версиями деревьев src, портов и документов
и во избежание заражения от хост-системы
.Po, таких как локальные исправления, изменения
На
.Xr make.conf 5 ,
etc.
.Pc .
Это достигается с помощью скрипта-обертки
.Pa src/release/release.sh .
.Pp
.Ic release.sh
.Op Fl c Ar release.conf
.Pp
.Ic release.sh
проверяет
.Li src/ ,
.Li ports/ ,
и
.Li doc/
деревья в
.Va CHROOTDIR ,
затем вызывает
.Dq Li "make buildworld"
и
.Dq Li "make installworld"
чтобы создать
.Xr chroot 8
окружение.
Далее,
.Dq Li "make release"
запускается в
.Xr chroot 8
и помещает результат в
.Pa $CHROOTDIR/R .
.Pp
Необязательный
.Fa release.conf
Файл конфигурации поддерживает следующие переменные:
.Bl -tag - ширина Ev
.It Va CHROOTDIR
Каталог, в котором будет собран релиз.
.It Va CHROOT_MAKEENV
Дополнительный
.Xr make 1
аргументы для передачи, которые непосредственно влияют на
настройку chroot сборки.
.It Va NOGIT
Не требовать явным образом
.Xr git 1
порт должен быть установлен.
.It Va GITROOT
Сервер
.Xr git 1
используемый для переключения между различными ветками деревьев.
По умолчанию
.Pa https://git.FreeeBSD.org .
.It Va SRCBRANCH
Ветвь
.Li src/
которую следует использовать.
По умолчанию
.Fl b Va main .
.It Va PORTBRANCH
Ветвь
.Li ports/
branch to use.
Defaults to
.Va head/@rHEAD .
.It Va ЦЕЛЬ
Целевой тип машины для кросс-создания релиза.
.It Va TARGET_ARCH
Архитектура целевой машины для кросс-сборки релиза.
.Pp
Список поддерживаемых
.Va ЦЕЛЬ
и 
.Va TARGET_ARCH
комбинации, обратиться к выводу
.Dq ставить цели
как описано в
.Xr build 7 .
.It Va KERNEL
Целевая конфигурация ядра для использования.
По умолчанию
.Va GENERIC .
Множество
.Va KERNEL
могут быть указаны записи.
.It Va MAKE_CONF
Сервер 
.Xr make.conf 5
для использования в сборке релиза.
По умолчанию
.Fa /dev/null
чтобы не загрязнять релиз изменениями в локальной системе.
.It Va SRC_CONF
Сервер 
.Xr src.conf 5
для использования в сборке релиза.
По умолчанию
.Fa /dev/null
чтобы не загрязнять релиз изменениями в локальной системе.
.It Va MAKE_FLAGS
Дополнительные флаги для передачи
.Xr make 1 .
.It Va WORLD_FLAGS
Дополнительные флаги для передачи
.Xr make 1
в течение
.Dq buildworld
этап.
По умолчанию установка количества
.Xr make 1
работы
.Pq Ar -j
к количеству процессоров, доступных в системе с поддержкой SMP.
.It Va KERNEL_FLAGS
Дополнительные флаги для передачи
.Xr make 1
в течение
.Dq buildkernel
этап.
По умолчанию установка количества
.Xr make 1
работа
.Pq Ar -j
до половины количества процессоров, доступных в системе с поддержкой SMP.
.It Va NOPORTS
Установить непустое значение, чтобы пропустить
.Li ports/
проверка дерева.
Когда установлено,
.Va NOPORTS
предотвратит
.Fa ports.txz
не создавать дистрибутивный пакет.
.It Va WITH_DVD
Установить непустое значение, чтобы включить
.Cm dvdrom
цель.
.It Va WITH_COMPRESSED_IMAGES
Установить непустое значение, чтобы сжать изображения релиза с помощью
.Xr xz 1 .
Оригинал
.Pq несжатый
изображения не удаляются.
.It Va XZ_THREADS Pq Vt int
Установить количество потоков
.Xr xz 1
следует использовать при сжатии изображений.
По умолчанию,
.Va XZ_THREADS
устанавливается на
.Va 0 ,
который задействует все доступные в системе ядра.
.It Va VCSCMD
Команда, выполняемая для получения исходных деревьев.
По умолчанию
.Qq Cm git clone Fl q .
.It Va CHROOTBUILD_SKIP
Если определено, то
.Li buildworld ,
.Li installworld ,
и 
.Li дистрибуция
этапы
.Xr chroot 8
настройка окружающей среды сборки пропускается.
Это предназначено исключительно для случаев, когда
.Xr chroot 8
пользовательские земли предоставляются альтернативными средствами.
.It Va SRC_UPDATE_SKIP
Установить непустое значение, чтобы предотвратить выгрузку или обновление
.Fa /usr/src
в пределах
.Xr chroot 8 .
Он предназначен для использования только в тех случаях, когда
.Fa /usr/src
как ожидается, будет существовать с помощью альтернативных средств.
.It Va PORTS_UPDATE_SKIP
Установить непустое значение, чтобы предотвратить выгрузку или обновление
.Fa /usr/ports
в пределах
.Xr chroot 8 .
Он предназначен для использования только в тех случаях, когда
.Fa /usr/ports
как ожидается, будет существовать с помощью альтернативных средств.
.El
.Sh EMBEDDED BUILDS
Следующие
.Fa release.conf
переменные относятся только к сборкам для встраиваемых систем:
.Bl -tag -width Ev
.It Va EMBEDDEDBUILD
Установить ненулевое значение, чтобы включить функцию для встроенных устройств
сборки.
.Pp
Когда установлено,
.Va WITH_DVD
не установлен.
Дополнительно,
.Va EMBEDDED_TARGET
и 
.Va EMBEDDED_TARGET_ARCH
также должны быть определены.
Когда окружающая среда сборки создана,
.Fa release.sh
запускает отдельный сценарий сборки, расположенный в специфическом для архитектуры
каталог в
.Pa src/release/${EMBEDDED_TARGET}/ .
.It Va EMBEDDEDPORTS
Задавать список всех портов, необходимых для целевого устройства
в формате
.Fa category/port .
.It Va EMBEDDED_TARGET
Когда он установлен, его значение передается в
.Xr make 1
для установки
.Va ЦЕЛЬ 
.Pq value of Cm uname Fl m
для создания целевого пользователя.
.It Va EMBEDDED_TARGET_ARCH
Когда он установлен, его значение передается в
.Xr make 1
для установки
.Va TARGET_ARCH
.Pq value of Cm uname Fl p
для создания целевого пользователя.
.El
.Sh ОБРАЗЫ ДИСКОВ ВИРТУАЛЬНЫХ МАШИН
Следующие
.Fa release.conf
Переменные имеют отношение только к сборкам образов дисков виртуальных машин:
.Bl -tag -width Ev
.It Va WITH_VMIMAGES
Установить ненулевое значение, чтобы создавать образы дисков виртуальных машин как часть
сборки релиза.
.Va WITH_VMIMAGES
также может быть указана как переменная окружения, передаваемая в
.Xr make 1 .
.It Va WITH_COMPRESSED_VMIMAGES
Установить ненулевое значение, чтобы сжать образы дисков виртуальных машин с помощью
.Xr xz 1
в рамках
.Cm установить
.Xr make 1
цель.
Обратите внимание, что сжатие образов дисков виртуальных машин может занять очень много времени
времени на некоторых системах.
.It Va VMBASE
Установить, чтобы изменить имя результирующего файла образа диска виртуальной машины.
Значение по умолчанию
.Va vm .
.It Va VMSIZE
Установить, чтобы изменить размер дискового пространства виртуальной машины.
Значение по умолчанию
.Va 20g .
Смотреть 
.Xr makefs 8
для получения допустимых значений.
.Pp
Образы дисков виртуальных машин по умолчанию создаются как разреженные образы.
Когда
.Va WITH_COMPRESSED_VMIMAGES
используется, то результирующие файлы, сжатые с помощью
.Xr xz 1
сжимать до примерно одинакового размера, независимо от указанного размера образа диска
размер.
.It Va VMFS
(Исправлено.)
Установить, чтобы указать, какая из файловых систем, перечисленных в
.Va VMFSLIST
Укажите список типов файловых систем для создания образов.
Допустимыми значениями являются одно или оба из
.Va ufs
и 
.Va zfs .
Значение по умолчанию
.Va ufs zfs .
.It Va VMFORMATS
Установите формат (ы) образа целевого виртуального диска, который нужно создать.
По умолчанию используется
.Va vhdf , Va vmdk , Va qcow2 ,
и 
.Va raw
создаются форматы.
Смотреть 
.Xr mkimg 1
для определения допустимых значений формата.
.El
.Pp
Список поддерживаемых
.Va VMFORMATS
значения
.Pq включающие форматы облачных хостинг-провайдеров
вместе с кратким описанием, запустите:
.Bd -literal -offset indent
cd /usr/src
make -C release list-vmtargets
.Ed
.Sh ОБЛАЧНЫЙ ХОСТИНГ ОБРАЗЫ МАШИН
Инструменты
.Fx
для сборки релизов поддерживают создание образов виртуальных машин для различных
облачных хостинг-провайдеров, каждый из которых имеет свою специфическую конфигурацию, чтобы
по умолчанию включают поддержку каждого хостинг-провайдера.
.Pp
Следующие
.Xr make 1
поддерживаются переменные окружающей среды:
.Bl -tag -width Ev
.It Va CLOUDWARE
Задается списком одного или нескольких провайдеров облачного хостинга, заключенных в кавычки.
Требуется
.Va WITH_CLOUDWARE
также должны быть установлены.
.It Va WITH_CLOUDWARE
Установите непустое значение, чтобы можно было создавать образы виртуальных машин
для различных облачных хостинг-провайдеров.
Требуется
.Va CLOUDWARE
также должны быть установлены.
.El
.Pp
Дополнительно, в 
.Va CLOUDWARE
и 
.Va WITH_CLOUDWARE
переменные могут быть добавлены к
.Pa release.conf ,
и  используется в сочетании с
.Pa release.sh .
.Pp
Список поддерживаемых
.Va CLOUDWARE
значения, выполняйть:
.Bd -literal -offset indent
cd /usr/src
make -C release list-cloudware
.Ed
.Sh MAKEFILE TARGETS
Релизный makefile
.Pq Pa src/release/Makefile
является довольно заумным.
Большинство разработчиков будет интересовать только
.Cm выпуск
и 
.Cm установка 
цели.
.\" XXX: Какое-то вступление к этому списку?  Во всех остальных оно есть.
.Bl -tag -width ".Cm packagesystem"
.It Cm выпуск
Мета-цель для создания всех средств выпуска и дистрибутивов, применимых к данной
платформе.
.It Cm установить
Скопировать все выпущенные носители на
.Pa ${DESTDIR} .
.It Cm cdrom
Создает установочные CD-ROM образы.
Для этого может потребоваться
.Xr md 4
(диска памяти) драйвер устройства  должен присутствовать в ядре
(либо скомпилирован в нем, либо доступен в виде модуля).
Эта цель создает файлы, называемые
.Pa disc1.iso
и 
.Pa bootonly.iso
в качестве выхода.
.It Cm dvdrom
Сборка установочных образов DVD-ROM.
Для этого может потребоваться
.Xr md 4
(диска памяти) драйвер устройства  должен присутствовать в ядре
(либо скомпилирован в нем, либо доступен в виде модуля).
Драйвер устройства (диска памяти) должен присутствовать в ядре
(либо скомпилирован в нем, либо доступен в виде модуля).
Эта цель производит
.Pa dvd1.iso
в качестве выходного файла.
.It Cm memstick
Создает образ установочной карты памяти с именем
.Pa memstick.img .
Применяется не на всех платформах.
Требуется, чтобы
.Xr md 4
.Pq диск памяти
драйвер устройства должен присутствовать в ядре
.Pq либо компилироваться в него, либо быть доступным в виде модуля.
.It Cm mini-memstick
Похожие на
.Cm memstick ,
за исключением того, что установочные дистрибутивы
не включены.
.It Cm ftp
Создает директорию с именем
.Pa ftp
содержащие дистрибутивные файлы, используемые при сетевой установке
и подходит для загрузки на FTP-зеркало.
.It Cm vm-image
Создает образы дисков виртуальных машин в различных форматах.
Цель
.Cm vm-image
требует
.Va WITH_VMIMAGES
.Xr make 1
переменная окружения, которая должна быть установлена на ненулевое значение.
.It Cm vm-cloudware
Создает
.Fx
образы виртуальных машин для различных облачных хостинг-провайдеров.
Смотреть
.Qq ОБЛАЧНЫЙ ХОСТИНГ ОБРАЗЫ МАШИН
для получения подробной информации о реализации.
.It Cm список облачного ПО
Отображает список действующих
.Va CLOUDWARE
значения.
.It Cm list-vmtargets
Отображает список действующих
.Va VMFORMATS
и 
.Va CLOUDWARE
значения.
.El
.Pp
Основные подцели, названные выше:
.Bl -tag -width ".Cm packagesystem"
.It Cm packagesystem
Создает все архивы с дистрибутивами
.Pq base, kernel, ports, doc
применимы на этой платформе.
.It Cm disc1
Создает загрузочную систему установки, содержащую все файлы дистрибутива
упакованные
.Cm packagesystem
цель, и подходит для получения изображения с помощью
.Cm cdrom ,
.Cm dvdrom
и 
.Cm memstick
цели.
.It Cm reldoc
Сборка документации по выпуску.
Она включает в себя примечания к выпуску,
руководство по оборудованию и инструкции по установке.
Другая документация, например книга Hi,
собирается в течение
.Cm base.txz
цель, вызываемая
.Cm packagesystem .
.El
.Sh ОКРУЖАЮЩАЯ СРЕДА
Дополнительные переменные:
.Bl -tag -width ".Ev TARGET_ARCH"
.It Ev OSRELEASE
Необязательное базовое имя для сгенерированных медиаизображений при вызове функции
.Cm установка 
цель
.Pq e.g., FreeBSD-12.1-RELEASE-amd64 .
По умолчанию вывод
.Ic `uname -s`-`uname -r`-`uname -p`
в пределах chroot.
.It Ev WORLDDIR
Расположение каталога, содержащего дерево src.
По умолчанию каталог
выше каталога, содержащего makefile
.Pq Pa src .
.It Ev PORTSDIR
Расположение каталога, содержащего дерево портов.
По умолчанию,
.Pa /usr/ports .
Если значение не установлено или не может быть найдено, порты не будут включены в релиз.
.It Ev NOPORTS
Если это значение задано, коллекция портов будет исключена из выпуска.
.It Ev NOSRC
Если установлено, не включайте исходный код системы в релиз.
.It Ev ЦЕЛЬ
Целевая аппаратная платформа.
Аналогично
.Dq Nm uname Fl m
выход.
Это необходимо для кросс-сборки некоторых целевых архитектур.
Например, для кросс-сборки для машин ARM64 требуется
.Ev TARGET_ARCH Ns = Ns Li aarch64
и 
.Ev TARGET Ns = Ns Li arm64 .
Если не установлено,
.Ev ЦЕЛЬ
По умолчанию текущая аппаратная платформа.
.It Ev TARGET_ARCH
Архитектура процессора целевой машины.
Это аналогично тому, как
.Dq Nm uname Fl p
выход.
Установить это значение для кросс-сборки для другой архитектуры.
Если не установлено,
.Ev TARGET_ARCH
По умолчанию текущая архитектура машины, если только
.Ev ЦЕЛЬ
также установлен, в этом случае он По умолчанию соответствует
значение для данной платформы.
Как правило, достаточно установить
.Ev ЦЕЛЬ .
.El
.Sh ФАЙЛЫ
.Bl -tag -compact -width Pa
.It Pa /usr/doc/Makefile
.It Pa /usr/doc/share/mk/doc.project.mk
.It Pa /usr/ports/Mk/bsd.port.mk
.It Pa /usr/ports/Mk/bsd.sites.mk
.It Pa /usr/share/examples/etc/make.conf
.It Pa /usr/src/Makefile
.It Pa /usr/src/Makefile.inc1
.It Pa /usr/src/release/Makefile
.It Pa /usr/src/release/Makefile.vm
.It Pa /usr/src/release/release.sh
.It Pa /usr/src/release/release.conf.sample
.It Pa /usr/src/release/tools/*.conf
.It Pa /usr/src/release/tools/vmimage.subr
.El
.Sh ПРИМЕРЫ
Следующие последовательности команд могут быть использованы для построения
.Dq "-CURRENT snapshot":
.Bd -literal -offset indent
cd /usr
git clone -b main https://git.freebsd.org/src.git src
cd src
make buildworld buildkernel
cd release
make obj
make release
make install DESTDIR=/var/freebsd-snapshot
.Ed
.Pp
После выполнения этих команд все созданные файлы дистрибутива (tarballs
для FTP, образы CD-ROM и т.д.) доступны в папке
.Pa /var/freebsd-snapshot
каталог.
.Pp
Следующие последовательности команд могут быть использованы для создания
.Dq "-CURRENT snapshot"
в чистой окружающей среде, включая порты и документацию:
.Bd -literal -offset indent
cd /usr/src/release
sh release.sh
.Ed
.Pp
В качестве опции можно использовать файл конфигурации для настройки сборки релиза:
.Bd -literal -offset indent
cd /usr/src/release
sh release.sh -c $HOME/release.conf
.Ed
.Pp
Конфигурационные файлы, специфичные для различных поддерживаемых встроенных систем, таких как
Raspberry Pi, находятся в каталоге, соответствующем директории
.Va ЦЕЛЬ
.Xr make 1
переменная.
Например, чтобы создать образ для Raspberry Pi:
.Bd -literal -offset indent
cd /usr/src/release
sh release.sh -c arm/RPI-B.conf
.Ed
.Pp
Чтобы создать образ для Raspberry Pi 3:
.Bd -literal -offset indent
cd /usr/src/release
sh release.sh -c arm64/RPI3.conf
.Ed
.Pp
После выполнения этих команд все подготовленные файлы релиза будут доступны в
.Pa /scratch
каталог.
Целевую директорию можно изменить, указав параметр
.Va CHROOTDIR
переменная в
.Li release.conf .
.Sh СОВМЕСТИМОСТЬ
Цель reldoc была удалена в комментарии f61e92ca5a23, и 
.Ev DOCDIR ,
.Ev DOCBRANCH ,
.Ev DOC_UPDATE_SKIP ,
и 
.Ev NODOC
поэтому больше не поддерживаются.
.Sh СМОТРЕТЬ ТАКЖЕ
.Xr cc 1 ,
.Xr git 1 Pq Pa ports/devel/git ,
.Xr install 1 ,
.Xr make 1 ,
.Xr mkimg 1 ,
.Xr uname 1 ,
.Xr md 4 ,
.Xr make.conf 5 ,
.Xr build 7 ,
.Xr ports 7 ,
.Xr chroot 8 ,
.Xr mtree 8 ,
.Xr sysctl 8
.Rs
.%T "FreeBSD Release Engineering"
.%U https://docs.freebsd.org/en/articles/freebsd-releng/
.Re
.Rs
.%T "FreeBSD Developers' Handbook"
.%U https://docs.freebsd.org/en/books/developers-handbook/
.Re
.Sh ИСТОРИЯ
.Fx
1.x
использовали ручной контрольный список, составленный
.An Родом Граймсом ,
для создания релиза.
Помимо того, что список был неполным, он предъявлял множество специфических требований к
доступных файловых систем и был довольно мучительным в исполнении.
.Pp
Как часть
.Fx 2.0
инженерные работы по созданию релиза, значительные
усилия были потрачены на то, чтобы
.Pa src/release/Makefile
в форму, в которой он мог бы, по крайней мере, автоматизировать большую часть утомительного
создания релиза в стерильной окружающей среде.
.Pp
Для 
.Fx 9.0
релиз,
.Pa src/release/Makefile
был переделан, а скрипт обертки
.Pa src/release/generate-release.sh
введена для поддержки внедрения новой программы установки.
.Pp
Для
.Fx 9.2
релиз,
.Pa src/release/release.sh
был введен для поддержки конфигурационных файлов для каждой сборки.
.Pa src/release/release.sh
в значительной степени основана на
.Pa src/release/generate-release.sh
скрипт.
.Pp
Имея около 1000 правок, распределенных по нескольким ветвям, скрипт
.Xr git 1
журнал
.Pa src/release/Makefile
содержит яркую историческую справку о некоторых
трудностей, через которые проходят инженеры-выпускники.
.Sh  АВТОРЫ
.Pa src/release/Makefile
первоначально был написан
.An -nosplit
.An Род Граймс ,
.An Джордан Хаббард ,
и 
.An Поуль-Хеннинг Камп .
.Pp
Эта страница руководства была первоначально написана
.An Murray Stokely Aq Mt murray@FreeBSD.org .
.Pp
Он был обновлен
.An Nathan Whitehorn Aq Mt nwhitehorn@FreeBSD.org
включить
.Fa generate-release.sh
скрипт, используемый для
.Fx 9.0
цикл выпуска.
.Pp
Позднее он был обновлен
.An Glen Barber Aq Mt gjb@FreeBSD.org
чтобы включить
.Fa release.sh
сценарий, используемый для
.Fx 9.2
цикла выпуска.
