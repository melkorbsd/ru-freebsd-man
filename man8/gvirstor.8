.\" Авторское право (c) 2006-2011 Иван Ворас <ivoras@FreeBSD.org>
.\" Все права защищены.
.\"
.\" Перераспределение и использование в исходных и бинарных формах, с изменениями или без,
.\" разрешается при условии соблюдения следующих условий:
.\" 1. Перераспределения исходного кода должны сохранять вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от гарантий.
.\" 2. Перераспределения в бинарной форме должны воспроизводить вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от гарантий в
.\"    документации и/или других материалах, распространяемых в комплекте.
.\"
.\" ЭТО ПО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ АВТОРАМИ И УЧАСТНИКАМИ "КАК ЕСТЬ" И
.\" ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПОДРАЗУМЕВАЕМЫМИ ГАРАНТИЯМИ
.\" КОММЕРЧЕСКОЙ ЦЕННОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ ОТКАЗЫВАЮТСЯ. НИ В КОЕМ СЛУЧАЕ АВТОРЫ ИЛИ УЧАСТНИКИ НЕ НЕСУТ
.\" ОТВЕТСТВЕННОСТИ ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, ОСОБЫЕ, ПРИМЕРНЫЕ ИЛИ ПОСЛЕДОВАТЕЛЬНЫЕ
.\" УБЫТКИ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПРИОБРЕТЕНИЕМ ЗАМЕНЯЮЩИХ ТОВАРОВ
.\" ИЛИ УСЛУГ; ПОТЕРЕЙ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕРЫВАНИЕМ БИЗНЕСА)
.\" ОДНАКО ВЫЗВАННЫЕ И НА КАКОЙ-ЛИБО ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В ДОГОВОРЕ, СТРОГАЯ
.\" ОТВЕТСТВЕННОСТЬ ИЛИ ДЕЛИКТ (ВКЛЮЧАЯ ХАЛАТНОСТЬ ИЛИ ИНЫЕ) В ЛЮБОМ СЛУЧАЕ
.\" ВЫХОД ИЗ ИСПОЛЬЗОВАНИЯ ЭТОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ СОВЕТОВАЛИ О ВОЗМОЖНОСТИ
.\" ТАКОГО УЩЕРБА.
.\"
.Dd 1 октября 2013 года
.Dt GVIRSTOR 8
.Os
.Sh ИМЯ
.Nm gvirstor
.Nd "утилита управления для виртуальных устройств хранения данных"
.Sh СИНТАКСИС
.Nm
.Cm label
.Op Fl hv
.Op Fl s Ar virsize
.Op Fl m Ar chunksize
.Ar name
.Ar prov ...
.Nm
.Cm stop
.Op Fl fv
.Ar имя ...
.Nm
.Cm destroy
.Op Fl fv
.Ar имя ...
.Nm
.Cm add
.Op Fl vh
.Ar имя prov ...
.Nm
.Cm remove
.Op Fl v
.Ar имя prov ...
.Nm
.Cm clear
.Op Fl v
.Ar prov ...
.Nm
.Cm dump
.Ar prov ...
.Nm
.Cm list
.Nm
.Cm status
.Nm
.Cm load
.Nm
.Cm unload
.Sh ОПИСАНИЕ
Утилита
.Nm
используется для настройки виртуального устройства хранения произвольного
большого размера
.Pq например, несколько ТБ,
состоящего из произвольного числа физических устройств хранения с
общим размером, равным или меньшим виртуального размера.
Данные для виртуальных устройств будут выделяться с физических устройств по
запросу.
Идея за
.Nm
аналогична концепции Виртуальной Памяти в операционных системах,
фактически позволяя пользователям перераспределить место хранения
.Pq свободное место файловой системы.
Эта концепция также известна как "тонкое провизионирование" в средах виртуализации, только здесь она реализована на уровне физических устройств хранения.
.Pp
Первый аргумент к
.Nm
указывает действие, которое нужно выполнить:
.Bl -tag -width ".Cm remove"
.It Cm label
Настройка виртуального устройства из данного компонента с указанным
.Ar имя.
Метаданные хранятся в последнем секторе каждого компонента.
Аргумент
.Fl s Ar virsize
это размер нового виртуального устройства, по умолчанию установленный в 2 ТиБ
.Pq 2097152 МиБ.
Аргумент
.Fl m Ar chunksize
это размер чанка, по умолчанию установленный в 4 МиБ
.Pq 4096 КиБ.
Таким образом, аргументы по умолчанию это
.Qq Fl s Ar 2097152 Fl m Ar 4096.
.It Cm stop
Выключение существующего виртуального устройства с данным
.Ar имя.
Эта команда не затрагивает метаданные на диске.
Как и в других классах GEOM, остановленные геомы не могут быть запущены вручную.
.It Cm destroy
То же самое, что и
.Cm stop.
.It Cm add
Добавляет новые компоненты к существующему виртуальному устройству с данным
.Ar именем .
Указанное виртуальное устройство хранения должно существовать и быть активным
.Pq то есть модуль загружен, устройство присутствует в Pa /dev .
Это действие можно безопасно выполнять, пока виртуальное устройство хранения используется
.Pq Qo горячая Qc операция .
.It Cm remove
Удаляет компоненты из существующего виртуального устройства с данным
.Ar именем .
Можно удалять только нераспределенные провайдеры.
.It Cm clear
Очищает метаданные на указанных провайдерах.
.It Cm dump
Сдампить метаданные, сохраненные на указанных провайдерах.
.It Cm list
Смотрите
.Xr geom 8 .
.It Cm status
Смотрите
.Xr geom 8 .
.It Cm load
Смотрите
.Xr geom 8 .
.It Cm unload
Смотрите
.Xr geom 8 .
.El
.Pp
Дополнительные опции:
.Bl -tag -width ".Fl f"
.It Fl f
Принудительное удаление указанного виртуального устройства.
.It Fl h
Захардкодить имена провайдеров в метаданных.
.It Fl v
Быть более разговорчивым.
.El
.Sh ПРИМЕРЫ
Следующий пример показывает, как создать виртуальное устройство стандартного размера
.Pq 2 TiB ,
стандартного размера части
.Pq extent
.Pq 4 MiB ,
с двумя физическими устройствами для резервного хранения.
.Bd -literal -offset indent
.No gvirstor label -v Ar mydata Ar /dev/ada4 Ar /dev/ada6
.No newfs Ar /dev/virstor/mydata
.Ed
.Pp
С этого момента виртуальное устройство будет доступно через
.Pa /dev/virstor/mydata
запись устройства.
Чтобы добавить новое физическое устройство / компонент к активному устройству виртуального хранения:
.Bd -literal -offset indent
.No gvirstor add Ar mydata Ar ada8
.Ed
.Pp
Это добавит физическое хранилище
.Ar ada8
к
.Pa /dev/virstor/mydata
устройству.
.Pp
Чтобы увидеть информацию о статусе устройства
.Pq включая, сколько физического хранения еще доступно для виртуального устройства ,
Используйте:
.Bd -literal -offset indent
gvirstor list
.Ed
.Pp
Все стандартные
.Xr geom 8
подкоманды
.Pq например, Cm status, Cm help
также поддерживаются.
.Sh ПЕРЕМЕННЫЕ SYSCTL
.Nm
имеет несколько настраиваемых переменных
.Xr sysctl 8.
.Bd -literal -offset indent
.Va int kern.geom.virstor.debug
.Ed
.Pp
Эта переменная sysctl контролирует уровень подробности вывода модуля ядра в диапазоне
от 1 до 15.
Сообщения, помеченные уровнями подробности выше этого значения,
подавляются.
Значение по умолчанию — 5, и не рекомендуется устанавливать этот параметр меньше
чем 2, поскольку сообщения уровня 1 являются сообщениями об ошибках, а сообщения уровня 2 предупреждают о проблемах системы.
.Bd -literal -offset indent
.Va int kern.geom.virstor.chunk_watermark
.Ed
.Pp
Значение этой переменной sysctl устанавливает уровень предупреждения для использования физических блоков на отдельном компоненте.
Предупреждение выдается, когда у компонента virstor остается меньше,
чем это количество свободных блоков
.Pq по умолчанию 100.
.Bd -literal -offset indent
.Va int kern.geom.virstor.component_watermark
.Ed
.Pp
Значение этой переменной sysctl устанавливает уровень предупреждения для использования компонентов.
Предупреждение выдается, когда количество не выделенных компонентов меньше,
чем это число
.Pq по умолчанию 1.
.Pp
Все эти переменные sysctl также доступны как настраиваемые параметры
.Xr loader 8.
.Sh ДИАГНОСТИКА
.Ex -std
.Pp
.Nm
модуль ядра выдает сообщения журнала с префиксами в стандартизированном формате,
что полезно для фильтрации сообщений журнала и их распределения.
Каждая строка сообщения начинается с
.Bd -literal -offset indent
.Li GEOM_VIRSTOR[%d]:
.Ed
.Pp
Число
.Pq %d
является уровнем подробности / важности сообщения, в диапазоне от 1 до 15.
Если используется система фильтрации сообщений, их распределения или оповещения оператора, рекомендуется серьезно относиться к сообщениям с уровнями 1 и 2.

.Pq например, чтобы отлавливать условия нехватки места, установленные водяными знаками
sysctls.
.Sh СМОТРИ ТАКЖЕ
.Xr geom 4 ,
.Xr fstab 5 ,
.Xr geom 8 ,
.Xr glabel 8 ,
.Xr newfs 8
.Sh ИСТОРИЯ
Утилита
.Nm
впервые появилась в
.Fx 7.0 .
.Sh АВТОРЫ
.An Иван Ворас Aq Mt ivoras@FreeBSD.org
.Pp
Спонсировано программой Google Summer of Code 2006.
.Sh ОШИБКИ
Команды
.Cm add
и
.Cm remove
содержат неизбежные критические секции, которые могут сделать устройство virstor
непригодным для использования, если во время их выполнения произойдёт отключение питания
.Pq или другое разрушительное событие.
Рекомендуется запускать их, когда система находится в спокойном состоянии.
.Sh ПРЕДПОЛОЖЕНИЯ И ВЗАИМОДЕЙСТВИЕ С ФАЙЛОВЫМИ СИСТЕМАМИ
Существует несколько предположений, которые
.Nm
делает в своей работе: что размер виртуального устройства хранения не изменится
после его установки, и что размеры отдельных физических компонентов хранения
всегда будут постоянными в течение их существования.
Для альтернативных способов реализации виртуальных или изменяемых файловых систем смотрите
.Xr zfs 1M ,
.Xr gconcat 8
и
.Xr growfs 8 .
.Pp
Обратите внимание, что
.Nm
имеет немаловажное взаимодействие с файловыми системами, которые инициализируют большое количество
структур на диске во время newfs.
Если такие файловые системы попытаются распределить свои структуры по всему носителю
.Pq как это делают UFS/UFS2 ,
их усилия будут фактически сорваны последовательным выделением
кусков в
.Nm
и все их структуры будут физически размещены в начале
первого компонента virstor.
Это может существенно повлиять на производительность файловой системы
.Pq что в некоторых редких случаях может быть даже позитивным.