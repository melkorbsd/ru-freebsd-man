.\"
.\" Авторское право (c) 2010 Фонд FreeBSD
.\" Все права защищены.
.\"
.\" Данное программное обеспечение было разработано Павлом Якубом Давидеком при спонсорстве
.\" от Фонда FreeBSD.
.\"
.\" Распространение и использование в исходных и бинарных формах, с изменениями или без,
.\" разрешается при условии соблюдения следующих условий:
.\" 1. Распространения исходного кода должны сохранять вышеуказанное уведомление об авторском праве,
.\"    этот список условий и следующее отказ от гарантий.
.\" 2. Распространения в бинарной форме должны воспроизводить вышеуказанное уведомление об авторском праве,
.\"    этот список условий и следующий отказ от гарантий в
.\"    документации и/или других материалах, поставляемых с дистрибутивом.
.\"
.\" ЭТО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ АВТОРАМИ И УЧАСТНИКАМИ "КАК ЕСТЬ" И
.\" ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПОДРАЗУМЕВАЕМЫМИ ГАРАНТИЯМИ
.\" ТОВАРНОЙ ПРИГОДНОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ ОТКЛОНЯЮТСЯ. НИ В КОАКОМ СЛУЧАЕ АВТОРЫ ИЛИ УЧАСТНИКИ НЕ НЕСУТ
.\" ОТВЕТСТВЕННОСТИ ЗА ЛЮБОЙ ПРЯМОЙ, КОСВЕННЫЙ, СЛУЧАЙНЫЙ, ОСОБЫЙ, ЭКЗЕМПЛЯРНЫЙ ИЛИ ПОСЛЕДУЮЩИЙ
.\" УЩЕРБ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПОСТАВКОЙ ЗАМЕНЯЮЩИХ ТОВАРОВ
.\" ИЛИ УСЛУГ; ПОТЕРЕЮ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕРЫВАНИЕ БИЗНЕСА)
.\" ОДНАКО ВЫЗВАННОЕ И НА ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В ДОГОВОРЕ, СТРОГОЙ
.\" ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТЕ (ВКЛЮЧАЯ ХАЛАТНОСТЬ ИЛИ ИНОЕ) ВОЗНИКАЮЩЕЕ В ЛЮБОМ СЛУЧАЕ
.\" ИЗ ИСПОЛЬЗОВАНИЯ ЭТОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ИЗВЕЩЕНО О ВОЗМОЖНОСТИ
.\" ТАКОГО УЩЕРБА.
.\"
.Dd 21 декабря 2019 года
.Dt HASTD 8
.Os
.Sh ИМЯ
.Nm hastd
.Nd "Демон высокодоступного хранилища данных"
.Sh СИНТАКСИС.Nm
.Op Fl dFh
.Op Fl c Ar config
.Op Fl P Ar pidfile
.Sh ОПИСАНИЕ
Демон
.Nm
отвечает за управление высокодоступными провайдерами GEOM.
.Pp
.Nm
позволяет прозрачно хранить данные на двух физически разделенных машинах,
соединенных через сеть TCP/IP.
Только одна машина (узел кластера) может активно использовать хранилище, предоставляемое
.Nm .
Эта машина называется первичной.
Демон
.Nm
работает на уровне блоков, что делает его прозрачным для файловых систем и приложений.
.Pp
Существует один главный демон
.Nm,
который запускает новый рабочий процесс, как только роль для данного
ресурса изменяется на первичную или как только роль для данного
ресурса изменяется на вторичную, и удаленный (первичный) узел будет
успешно подключен к нему.
Каждый рабочий процесс получает новое название процесса (см.
.Xr setproctitle 3 ),
которое описывает его роль и ресурс, которым он управляет.
Точный формат:
.Bd -literal -offset indent
hastd: <имя ресурса> (<роль>)
.Ed
.Pp
Если (и только если)
.Nm
работает в первичной роли для данного ресурса, создается соответствующее
.Pa /dev/hast/<имя>
подобное диску устройство (провайдер GEOM).
Файловые системы и приложения могут использовать этот провайдер для отправки I/O
запросов к нему.
Каждая операция записи, удаления и сброса
.Dv ( BIO_WRITE , BIO_DELETE , BIO_FLUSH )
отправляется на локальный компонент и реплицируется на удаленном (вторичном) узле,
если он доступен.
Операции чтения
.Dv ( BIO_READ )
обрабатываются локально, если только не произошла ошибка ввода/вывода или локальная версия данных
еще не актуализирована (идет синхронизация).
.Pp
Демон
.Nm
использует класс GEOM Gate для получения I/O запросов от
встроенной в ядро инфраструктуры GEOM.Модуль 
.Nm geom_gate.ko 
автоматически загружается, если ядро не было скомпилировано с 
следующей опцией:
.Bd -ragged -offset indent
.Cd "options GEOM_GATE"
.Ed
.Pp
Соединение между двумя 
.Nm
демонами всегда инициируется тем, который работает как первичный, к тому, который 
работает как вторичный.
Когда первичный 
.Nm 
не может установить соединение или соединение терпит неудачу, он будет пытаться 
восстановить связь каждые несколько секунд.
Как только соединение установлено, первичный 
.Nm 
синхронизирует каждый сегмент, который был изменен во время отсутствия связи,
с вторичным 
.Nm .
.Pp
Возможно, что в случае прерывания связи между узлами первичная роль для данного 
ресурса будет настроена на обоих узлах.
Это, в свою очередь, приводит к несовместимым изменениям данных.
Такое состояние называется раздвоением мозга (split-brain) и не может быть 
автоматически разрешено 
.Nm
демоном, так как это скорее всего приведет к повреждению данных или потере 
важных изменений.
Хотя это и не может быть исправлено 
.Nm
самостоятельно, это будет обнаружено, и дальнейшее соединение между 
независимо измененными узлами не будет возможно.
После того как эта ситуация будет вручную разрешена администратором, ресурс 
на одном из узлов можно будет инициализировать (стирая локальные данные), что 
сделает возможным снова соединение с удаленным узлом.
Подключение недавно инициализированного компонента вызовет полную синхронизацию 
ресурса.
.Pp
Демон 
.Nm 
никогда не выбирает свою роль автоматически.
Роль должна быть настроена с помощью утилиты управления 
.Xr hastctl 8 
дополнительным программным обеспечением типа 
.Nm ucarp
или 
.Nm heartbeat,
которые могут надежно управлять разделением ролей и переключением вторичного узла на
.Pp
daemon
.Nm
может быть запущен со следующими аргументами командной строки:
.Bl -tag -width ".Fl P Ar pidfile"
.It Fl c Ar config
Укажите альтернативное расположение файла конфигурации.
Расположение по умолчанию —
.Pa /etc/hast.conf .
.It Fl d
Выводить или записывать отладочную информацию.
Эта опция может быть указана несколько раз для увеличения уровня детализации.
.It Fl F
Запустить
.Nm
демон в режиме переднего плана.
По умолчанию
.Nm
запускается в фоновом режиме.
.It Fl h
Вывести сообщение о использовании
.Nm .
.It Fl P Ar pidfile
Укажите альтернативное расположение файла, где будет храниться PID основного процесса.
Расположение по умолчанию —
.Pa /var/run/hastd.pid .
.El
.Sh FILES
.Bl -tag -width ".Pa /var/run/hastd.pid" -compact
.It Pa /etc/hast.conf
Файл конфигурации для
.Nm
и
.Xr hastctl 8 .
.It Pa /var/run/hastctl
Контрольный сокет, используемый утилитой управления
.Xr hastctl 8
для связи с
.Nm .
.It Pa /var/run/hastd.pid
Расположение по умолчанию PID файла демона
.Nm .
.El
.Sh EXIT STATUS
Код выхода 0 в случае успеха, или одно из значений, описанных в
.Xr sysexits 3
в случае неудачи.
.Sh EXAMPLES
Запустите
.Nm
на обеих нодах.
Установите роль для ресурса
.Nm shared
как primary на
.Nm nodeA
и secondary на
.Nm nodeB .
Создайте файловую систему на
.Pa /dev/hast/shared
провайдере и смонтируйте её.
.Bd -literal -offset indent
nodeB# hastd
nodeB# hastctl role secondary shared

nodeA# hastd
nodeA# hastctl role primary shared
nodeA# newfs -U /dev/hast/shared
nodeA# mount -o noatime /dev/hast/shared /shared
.Ed
.Sh SEE ALSO
.Xr sysexits 3 ,
.Xr geom 4 ,
.Xr hast.conf 5 ,
.Xr ggatec 8 ,
.Xr ggated 8 ,
.Xr ggatel 8 ,
.Xr hastctl 8 ,
.Xr mount 8 ,
.Xr newfs 8 ,
.Xr g_bio 9
.Sh ИСТОРИЯ
Утилита
.Nm
появилась в
.Fx 8.1 .
.Sh АВТОРЫ
Утилиту
.Nm
разработал
.An Павел Якуб Давидек Aq Mt pjd@FreeBSD.org
при спонсорстве Фонда FreeBSD.
