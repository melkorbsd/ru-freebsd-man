.\" Copyright (c) 2018 Kyle Evans <kevans@FreeBSD.org>
.\"
.\" Перераспределение и использование в исходном и двоичном формах, с изменениями или без,
.\" разрешается при условии соблюдения следующих условий:
.\" 1. Перераспределенный исходный код должен сохранять вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от ответственности.
.\" 2. Перераспределенные в двоичной форме данные должны воспроизводить вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от ответственности в
.\"    документации и/или других материалах, предоставляемых с распространением.
.\"
.\" ЭТО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ АВТОРОМ И УЧАСТНИКАМИ "КАК ЕСТЬ" И
.\" ОТКАЗ ОТ ВСЕХ ЯВНЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ ГАРАНТИЙ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПОДРАЗУМЕВАЕМЫЕ
.\" ГАРАНТИИ ТОВАРНОЙ ПРИГОДНОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ ОТКЛОНЕНЫ. НИ В КОЕМ СЛУЧАЕ АВТОР ИЛИ УЧАСТНИКИ НЕ НЕСУТ
.\" ОТВЕТСТВЕННОСТИ ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, ОСОБЫЕ, ПРИМЕРНЫЕ ИЛИ ПОСЛЕДОВАТЕЛЬНЫЕ
.\" УБЫТКИ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПРИОБРЕТЕНИЕ ЗАМЕНЯЮЩИХ ТОВАРОВ ИЛИ УСЛУГ; ПОТЕРЯ ИСПОЛЬЗОВАНИЯ,
.\" ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕРЫВАНИЕ БИЗНЕСА)
.\" ОДНАКО ВЫЗВАННЫЕ И ПО ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В КОНТРАКТЕ, СТРОГОЙ
.\" ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТЕ (ВКЛЮЧАЯ ХАЛАТНОСТЬ ИЛИ ИНЫЙ) ВОЗНИКШИЕ ЛЮБЫМ ОБРАЗОМ
.\" ИЗ-ЗА ИСПОЛЬЗОВАНИЯ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ИЗВЕЩЕН О ВОЗМОЖНОСТИ ТАКОГО
.\" УЩЕРБА.
.\"
.Dd Апрель 28, 2020
.Dt HOOK.LUA 8
.Os
.Sh НАЗВАНИЕ
.Nm hook.lua
.Nd FreeBSD hook модули
.Sh ОПИСАНИЕ
.Nm
содержит функциональные возможности для определения типов крючков и прикрепления крючков.
Хуки — это функции, используемые для прикрепления пользовательского поведения в заранее определенных точках.
выполнение загрузчика.
Эти предопределенные точки, о которых мы говорим, называются
.Dq типы хуков .
Хуки также могут принимать необязательный параметр данных, который может быть или не быть
заполнен вызывающей стороной.
.Pp
Прежде чем использовать функциональность, предоставляемую
.Nm ,
ее необходимо включить с помощью такой инструкции, как следующая:
.Pp
.Dl local hook = require("hook")
.Ss Экспортируемые функции
Следующие функции экспортируются из
.Nm :
.Bl -tag -width hook.registerType -offset indent
.It Fn hook.registerType hooktype
Добавляет
.Ev hooktype
как признанный тип хука.
Это позволяет добавлять функции для выполнения, когда вызываются хуки данного типа
с использованием
.Fn hook.runAll hooktype .
.It Fn hook.register hooktype hookfunc
Регистрирует
.Ev hookfunc
для выполнения, когда вызываются хуки типа
.Ev hooktype .
.It Fn hook.runAll hooktype
Вызывает все зарегистрированные хуки для типа
.Ev hooktype .
Хуки вызываются в порядке их регистрации.
.El
.Ss Руководство по именованию хуков
Имена хуков должны состоять из названия модуля, в котором они определены, а также
глагола, описывающего, когда хук выполняется, разделенных точкой.
Например,
.Dq config.reloaded
определен в модуле
.Xr config.lua 8
и выполняется, когда конфигурация перезагружена.
.Sh ПРИМЕРЫ
Для регистрации хука, который будет запущен при перезагрузке конфигурации:
.Pp
.Bd -literal -offset indent -compact
local hook = require("hook")

local function configuration_was_reloaded()
	print("Конфигурация была перезагружена!")
end

hook.register("config.reloaded", configuration_was_reloaded)
.Ed
.Sh АВТОРЫ
Файл
.Nm
был изначально написан
.An Kyle Evans Aq Mt kevans@FreeBSD.org .