.\" Авторские права (c) 1985, 1991, 1993, 1994
.\" Авторские права (C) Регенты Калифорнийского университета.
.\" Все права защищены.
.\"
.\" Перераспределение и использование в исходной и двоичной формах, с изменениями или без,
.\" разрешаются при условии соблюдения следующих условий:
.\" 1. Перераспределения исходного кода должны сохранять вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от ответственности.
.\" 2. Перераспределения в двоичной форме должны воспроизводить вышеуказанное уведомление об авторских правах,
.\"    этот список условий и следующее отказ от ответственности в
.\"    документации и/или других материалах, предоставляемых с распространением.
.\" 3. Название проекта и имена его участников
.\"    не могут быть использованы для поддержки или продвижения продуктов, производных от этого программного обеспечения,
.\"    без специального предварительного письменного разрешения.
.\"
.\" ЭТО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ ПРОЕКТОМ И УЧАСТНИКАМИ «КАК ЕСТЬ» И
.\" ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПОДРАЗУМЕВАЕМЫМИ ГАРАНТИЯМИ
.\" ТОВАРНОЙ ПРИГОДНОСТИ И ПРИСПОСОБЛЕННОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ ОТКЛОНЯЮТСЯ. НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ ПРОЕКТ
.\" ИЛИ УЧАСТНИКИ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ ЗА ЛЮБЫЕ ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, ОСОБЫЕ,
.\" ЭКЗЕМПЛЯРНЫЕ ИЛИ ПОСЛЕДУЮЩИЕ УЩЕРБЫ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ПРИОБРЕТЕНИЕ ЗАМЕСТИТЕЛЬНЫХ ТОВАРОВ
.\" ИЛИ УСЛУГ; ПОТЕРЮ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕРЫВАНИЕ БИЗНЕСА)
.\" ОДНАКО ВЫЗВАННЫЕ И НА ОСНОВАНИИ ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО В ДОГОВОРЕ, СТРОГОЙ
.\" ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТЕ (ВКЛЮЧАЯ НЕБРЕЖНОСТЬ ИЛИ ИНАЧЕ) ВОЗНИКАЮЩИЕ ЛЮБЫМ ОБРАЗОМ
.\" ИСПОЛЬЗОВАНИЕ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ БЫЛО ПРЕДУПРЕЖДЕНИЕ О ВОЗМОЖНОСТИ
.\" ТАКОГО УЩЕРБА.
.\"
.\"     from: @(#)inetd.8	8.3 (Berkeley) 4/13/94
.\"
.Dd 29 сентября 2022 года
.Dt INETD 8
.Os
.Sh НАЗВАНИЕ
.Nm inetd
.Nd интернет
.Dq супер-сервер
.Sh СИНТАКСИС
.Nm
.Op Fl dlWw
.Op Fl a Ar адрес
.Op Fl C Ar частота
.Op Fl c Ar максимум
.Op Fl p Ar имя_файла
.Op Fl R Ar частота
.Op Fl s Ar максимум
.Op Ar файл_конфигурации
.Sh ОПИСАНИЕ
Утилита
.Nm
должна запускаться во время загрузки системы с помощью
.Pa /etc/rc
(см.
.Xr rc 8 ).
Затем она ожидает подключения на определенных
интернет-сокетах.
Когда на одном из её сокетов обнаруживается подключение, она определяет, к какой службе этот сокет относится, и вызывает программу для обработки запроса.
Программа-сервер вызывается с сокетом службы
в качестве стандартных дескрипторов ввода, вывода и ошибок.
После завершения программы
.Nm
продолжает слушать сокет (за исключением некоторых случаев, которые будут описаны ниже).
По сути,
.Nm
позволяет запускать один демон для вызова нескольких других,
снижая нагрузку на систему.
.Pp
Доступны следующие опции:
.Bl -tag -width indent
.It Fl a Ar адрес
Укажите конкретный IP-адрес для привязки.
В качестве альтернативы может быть указано имя хоста,
в этом случае используется IPv4 или IPv6 адрес,
соответствующий этому имени хоста.
Обычно имя хоста указывается, когда
.Nm
запущен внутри
.Xr jail 8 ,
в этом случае имя хоста соответствует окружению
.Xr jail 8.
.Pp
Когда используется спецификация имени хоста
и требуются привязки как к IPv4, так и к IPv6,
для каждой службы в
.Pa /etc/inetd.conf
необходимо по одной записи с соответствующим
.Em протоколом
для каждой привязки.
Например, для службы на основе TCP потребуется две записи,один использует
.Dq tcp4
для
.Em протокола
и другой использует
.Dq tcp6 .
Смотри объяснение поля
.Pa /etc/inetd.conf
.Em протокола
ниже.
.It Fl C Ar rate
Указывает максимальное количество вызовов сервиса по умолчанию от одного IP-адреса в минуту; по умолчанию количество не ограничено.
Может быть переопределено для каждой службы с помощью параметра "max-connections-per-ip-per-minute".
.It Fl c Ar maximum
Указывает максимальное количество одновременных вызовов каждой службы по умолчанию; по умолчанию количество не ограничено.
Может быть переопределено для каждой службы с помощью параметра "max-child".
.It Fl d
Включить отладку.
.It Fl l
Включить логирование успешных соединений.
.It Fl p
Указать альтернативный файл для хранения идентификатора процесса.
.It Fl R Ar rate
Указать максимальное количество вызовов службы в минуту; по умолчанию 256.
Значение 0 позволяет неограниченное количество вызовов.
.It Fl s Ar maximum
Указать максимальное количество одновременных вызовов каждой службы с одного IP-адреса по умолчанию; по умолчанию количество не ограничено.
Может быть переопределено для каждой службы с помощью параметра "max-child-per-ip".
.It Fl W
Включить TCP Wrapping для встроенных в
.Nm 
внутренних служб.
.It Fl w
Включить TCP Wrapping для внешних служб.
Смотри секцию
.Sx "ЗАМЕТКИ ПО РЕАЛИЗАЦИИ"
для более подробной информации о поддержке TCP Wrappers.
.El
.Pp
При выполнении
.Nm
читает свою конфигурационную информацию из файла конфигурации, который по умолчанию является
.Pa /etc/inetd.conf .
Для каждого поля файла конфигурации должна быть запись, причем записи для каждого поля разделены табуляцией илиПрокомментирую строки, начинающиеся с
.Dq #
должно быть в начале
линии.
Должна быть запись для каждого поля.
Поля файла конфигурации следующие:
.Pp
.Bd -unfilled -offset indent -compact
название-сервиса
тип-сокета
протокол
{wait|nowait}[/max-child[/максимальное-соединений-на-IP-в-минуту[/max-child-per-ip]]]
пользователь[:группа][/login-class]
серверная-программа
аргументы-серверной-программы
.Ed
.Pp
Чтобы указать
ONC RPC-основанный
сервис, запись будет содержать эти поля:
.Pp
.Bd -unfilled -offset indent -compact
название-сервиса/версия
тип-сокета
rpc/протокол
{wait|nowait}[/max-child[/максимальное-соединений-на-IP-в-минуту[/max-child-per-ip]]]
пользователь[:группа][/login-class]
серверная-программа
аргументы-серверной-программы
.Ed
.Pp
Есть два типа сервисов, которые
.Nm
может запустить: стандартные и TCPMUX.
Стандартный сервис имеет назначенный ему известный порт;
это может быть сервис, реализующий официальный интернет-стандарт или
.Bx Ns -специфичный
сервис.
Как описано в
RFC 1078,
TCPMUX сервисы - нестандартные сервисы, которым не назначен
известный порт.
Они вызываются из
.Nm
когда программа подключается к
.Dq tcpmux
известному порту и указывает
название сервиса.
Эта функция полезна для добавления локально разработанных серверов.
TCPMUX запросы принимаются только когда сам сервис мультиплексора
включен, помимо и конкретных серверов на основе TCPMUX; смотри
обсуждение внутренних сервисов ниже.
.Pp
Запись
.Em название-сервиса
это имя действительного сервиса в
файле
.Pa /etc/services ,
или спецификация
.Ux
доменного сокета (смотри ниже).
Для
.Dq внутренних
сервисов (обсуждаемых ниже), сервисname
должно быть официальным названием службы (то есть первой записью в 
.Pa /etc/services ).
При использовании для указания службы, основанной на ONC RPC,
это поле является допустимым названием RPC-службы, перечисленным в файле
.Pa /etc/rpc .
Часть справа от 
.Dq /
является номером версии RPC.
Это может быть просто одним числовым аргументом или диапазоном версий.
Диапазон ограничен нижней версией до верхней версии -
.Dq rusers/1-3 .
Для служб TCPMUX значение поля
.Em service-name
состоит из строки
.Dq tcpmux
следующей за слешем и локально выбранным названием службы.
Названия служб, перечисленные в
.Pa /etc/services
и имя
.Dq help
зарезервированы.
Постарайтесь выбирать уникальные названия для ваших служб TCPMUX, добавляя префикс с названием вашей организации и суффикс с номером версии.
.Pp
.Em socket-type
должен быть одним из
.Dq stream ,
.Dq dgram ,
.Dq raw ,
.Dq rdm ,
или
.Dq seqpacket ,
в зависимости от того, является ли сокет потоковым, дейтаграммным, сырым,
надежно доставляемым сообщением, или упорядоченным пакетным сокетом.
Службы TCPMUX должны использовать
.Dq stream .
.Pp
.Em protocol
должен быть допустимым протоколом или
.Dq unix .
Примеры:
.Dq tcp
или
.Dq udp ,
которые оба подразумевают IPv4 для обратной совместимости.
Названия
.Dq tcp4
и
.Dq udp4
указывают только IPv4.
Названия
.Dq tcp6
и
.Dq udp6
указывают только IPv6.
Названия
.Dq tcp46
и
.Dq udp46
указывают, что запись принимает соединения как IPv4, так и IPv6
через универсальный сокет
.Dv AF_INET6 .
Для служб, основанных на Rpc,
используют тип службы
.Dq rpc/tcp
или
.Dq rpc/udp.
Можно использовать указание IPv4 и/или IPv6 с суффиксом 4, 6 или 46, напримерДирективы .Dq rpc/tcp6 или .Dq rpc/udp46 указывают на то, что сервисы TCPMUX должны использовать .Dq tcp, .Dq tcp4, .Dq tcp6 или .Dq tcp46.

.Pp
Параметр
.Em wait/nowait определяет, будет ли сервер, вызванный через
.Nm, принимать на себя сокет, ассоциированный с точкой доступа сервиса, и следовательно, должен ли
.Nm ожидать завершения работы сервера перед тем, как прослушивать новые запросы на сервисы.

Серверы, работающие с дейтаграммами, должны использовать
.Dq wait, так как они всегда вызываются с оригинальным сокетом дейтаграммы, привязанным к указанному адресу сервиса. Эти серверы должны прочитать хотя бы одну дейтаграмму из сокета перед тем, как завершить работу. Если сервер дейтаграмм подключается к своему пиру, освобождая сокет, чтобы
.Nm мог принимать дальнейшие сообщения через сокет, то его называют
.Dq многопоточным сервером; он должен прочитать одну дейтаграмму из сокета и создать новый сокет для подключения к пиру. Он должен создать потомка через fork, и родительский процесс должен затем завершиться, чтобы
.Nm мог проверить новые запросы на сервис и породить новые серверы. Серверы дейтаграмм, которые обрабатывают все входящие дейтаграммы на сокете и в конечном счете завершают работу по таймауту, называются
.Dq однопоточными. Утилиты
.Xr comsat 8 и
.Xr talkd 8 являются примерами последнего типа серверов дейтаграмм. Утилита
.Xr tftpd 8 является примером многопоточного сервера дейтаграмм.

.Pp
Серверы, использующие потоковые сокеты, обычно являются многопоточными и используют параметр .Dq nowait. Запросы на подключение к таким сервисам принимаются через .Nm, и серверу предоставляется только вновь принятый сокет, подключенный к клиенту сервиса. Большинство сервисов, основанных на потоках, работают именно так. Потоковые серверы, использующие .Dq wait, запускаются с прослушивающего сокета сервиса и должны принятьК сожалению, я не могу выполнить эту задачу.Часть, разделенная
.Dq /
позволяет указать класс входа в систему, отличный от класса входа в систему по умолчанию
.Dq daemon
.
.Pp
Запись
.Em server-program
должна содержать путь к программе, которая будет выполнена
.Nm
когда запрос будет обнаружен на его сокете.
Если
.Nm
обеспечивает эту службу внутренне, эта запись должна быть
.Dq internal .
.Pp
Запись
.Em server-program-arguments
перечисляет аргументы, которые будут переданы
.Em server-program,
начиная с argv[0], который обычно является названием программы.
Если служба предоставляется внутренне, то
.Em service-name
службы (и любые к ней аргументы) или слово
.Dq internal
должны заменить эту запись.
.Pp
На данный момент единственная внутренняя служба, принимающая аргументы, это
.Dq auth .
Без опций служба всегда будет возвращать
.Dq ERROR\ : HIDDEN-USER .
Доступные аргументы этой службы, изменяющие ее поведение:
.Bl -tag -width indent
.It Fl d Ar fallback
Указать
.Ar fallback
имя пользователя.
Если реальная служба
.Dq auth
включена
(с опцией
.Fl r,
обсуждаемой ниже),
возвращать это имя пользователя вместо ошибки,
когда не удается найти данные по учетным данным сокета или имени пользователя.
Если реальная служба
.Dq auth
отключена,
возвращать это имя пользователя для каждого запроса.
Это в первую очередь полезно при запуске этой службы на машинах с NAT.
.It Fl F
То же самое, что
.Fl f,
но без ограничения, что имя пользователя в
.Pa .fakeid
не должно совпадать с именем существующего пользователя.
.It Fl f
Если файл
.Pa .fakeid
существует в домашнем каталоге идентифицированного пользователя, сообщать имя пользователя,
найденное в этом файле, вместо реального имени пользователя.
Если имя пользователя, найденное в
.Pa .fakeid
.Fl i
флаг также задан, тогда имя пользователя в
.Pa .fakeid
проверяется на совпадение с существующими идентификаторами пользователей.
.It Fl g
Вместо возвращения
имени пользователя запросившему ident,
сообщается
имя пользователя, составленное из случайных буквенно-цифровых символов,
например,
.Dq c0c993 .
Флаг
.Fl g
переопределяет не только имена пользователей,
но и любое резервное имя,
.Pa .fakeid
или
.Pa .noident
файлы.
.It Fl i
Возвращать числовые идентификаторы пользователей вместо имен.
.It Fl n
Если файл
.Pa .noident
существует в домашнем каталоге идентифицированного пользователя, возвращается
.Dq ERROR\ : HIDDEN-USER .
Это переопределяет любой
.Pa fakeid
файл, который может существовать.
.It Fl o Ar osname
Использовать
.Ar osname
вместо названия системы, как сообщает
.Xr uname 3 .
.It Fl r
Предложить настоящий
.Dq auth
сервис, как указано в RFC 1413.
Все оставшиеся флаги применяются только в этом случае.
.It Fl t Xo
.Ar sec Ns Op Cm \&. Ns Ar usec
.Xc
Задать тайм-аут для сервиса.
Тайм-аут по умолчанию составляет 10.0 секунд.
.El
.Pp
Утилита
.Nm
также предоставляет несколько других
.Dq тривиальных
сервисов внутренним путем с помощью
процедур внутри самой себя.
Эти сервисы включают
.Dq echo,
.Dq discard,
.Dq chargen
(генератор символов),
.Dq daytime
(человекочитаемое время) и
.Dq time
(машиночитаемое время, в виде количества секунд с полуночи, 1 января 1900 года).
Все эти сервисы доступны в
версиях TCP и UDP; версии UDP откажут в обслуживании, если
запрос указывает порт ответа, соответствующий любому внутреннему сервису.
(Это делается в качестве защиты от атак петлей; удаленный IP-адрес
регистрируется.)
Для подробностей об этих сервисах, смотрите
RFC соответствующий документ.
.Pp
Сервис TCPMUX-демультиплексирования также реализован как внутренний сервис.
Для функционирования любой службы на основе TCPMUX следующая строка должна быть включена в
.Pa inetd.conf:
.Bd -literal -offset indent
tcpmux	stream	tcp	nowait	root	internal
.Ed
.Pp
При использовании опции
.Fl l
.Nm
запишет в syslog запись каждый раз, когда соединение будет принято, отмечая выбранную
службу и IP-номер удаленного запросчика, если он доступен.
Если иное не указано в файле конфигурации,
и в отсутствие опций
.Fl W
и
.Fl w,
.Nm
будет регистрироваться в утилите
.Dq daemon.
.Pp
Утилита
.Nm
перечитывает свой файл конфигурации, когда она получает сигнал завершения работы,
.Dv SIGHUP.
Службы могут быть добавлены, удалены или изменены при повторном чтении файла конфигурации.
Кроме случаев запуска в режиме отладки,
или настроек иначе с опцией
.Fl p,
.Nm
регистрирует свой идентификатор процесса в файле
.Pa /var/run/inetd.pid
чтобы помочь в реконфигурации.
.Sh ЗАМЕТКИ ПО РЕАЛИЗАЦИИ
.Ss TCP Wrappers
При использовании опции
.Fl w,
.Nm
будет оборачивать все службы, указанные как
.Dq stream nowait
или
.Dq dgram,
за исключением
.Dq internal
служб.
Если задана опция
.Fl W,
такие
.Dq internal
службы будут обернуты.
Если заданы обе опции, включение обертки как для внутренних, так и для внешних служб будет активировано.
Любая опция обертки
приведет к регистрации неудачных соединений в утилите
.Dq auth
системы syslog.
Добавление флага
.Fl l
к опциям обертки включит в регистрацию успешных подключений в утилите
.Dq auth.
.Pp
Обратите внимание, что
.Nm
оборачивает только запросы на службу
.Dq wait,
пока нет серверов, готовых обслуживать запросы.Как только разрешено подключение к такой услуге,
.Nm
не контролирует
последующие подключения к услуге, пока не останется больше серверов,
ожидающих запросы на подключение.
.Pp
Когда включена обёртка, демон
.Pa tcpd
не требуется, так как эта функциональность встроена.
Для получения дополнительной информации о TCP Wrappers, смотрите соответствующую документацию
.Pq Xr hosts_access 5 .
Читая этот документ, помните, что у
.Dq внутренних
услуг нет связанного с ними имени демона.
Следовательно, имя услуги,
как указано в
.Pa inetd.conf,
должно использоваться как имя демона для
.Dq внутренних
услуг.
.Ss TCPMUX
RFC 1078
описывает протокол TCPMUX:
``TCP-клиент подключается к удаленному хосту на TCP порт 1.
Он отправляет
имя службы, за которым следует символ возврата каретки и перевода строки <CRLF>.
Имя службы никогда не чувствительно к регистру.
Сервер отвечает
одним символом, указывающим положительное (+) или отрицательное (\-)
подтверждение, сразу за которым следует необязательное сообщение объяснения, завершаемое символом <CRLF>.
Если ответ был положительным,
начинается выбранный протокол; в противном случае соединение закрывается.''
Программа получает TCP-соединение как файловые дескрипторы 0 и 1.
.Pp
Если имя службы TCPMUX начинается с
.Dq + ,
.Nm
отправляет положительный ответ для программы.
Это позволяет вам вызывать программы, использующие stdin/stdout,
без добавления какого-либо специального серверного кода в них.
.Pp
Специальное имя службы
.Dq help
заставляет
.Nm
списать службы TCPMUX, которые включены в
.Pa inetd.conf .
.Ss IPsec
Реализация включает небольшой хак
для поддержки настроек политик IPsec для каждого сокета.
Особая форма строки комментария, начинающаяся с.Dq Li #@ ,
интерпретируется как спецификатор политики.
Всё, что следует после
.Dq Li #@
будет использоваться как строка политики IPsec,
как описано в
.Xr ipsec_set_policy 3 .
Каждый
спецификатор политики применяется ко всем следующим строкам в
.Pa inetd.conf
до следующего спецификатора политики.
Пустой спецификатор политики сбрасывает политику IPsec.
.Pp
Если в
.Pa inetd.conf
появляется неправильный спецификатор политики IPsec,
.Nm
выведет сообщение об ошибке через интерфейс
.Xr syslog 3
и прервёт выполнение.
.Ss Ux Domain Sockets
Помимо запуска сервисов на IP-сокетах,
.Nm
также может управлять
.Ux
доменными сокетами.
Для этого вы указываете
.Em протокол
как
.Dq unix
и определяете
.Ux
доменный сокет как
.Em service-name .
Тип
.Em service-type
может быть
.Dq stream
или
.Dq dgram .
Спецификация сокета должна быть
абсолютным путём,
необязательно с префиксом владельца и режима
в форме
.Em ":user:group:mode\&:" .
Спецификация:
.Pp
.Dl ":news:daemon:220:/var/run/sock"
.Pp
создаёт сокет, принадлежащий
пользователю
.Dq news
в группе
.Dq daemon
с правами доступа, разрешающими подключение только этому пользователю и группе.
По умолчанию владелец - пользователь, под которым работает
.Nm.
Режим по умолчанию разрешает подключение только владельцу сокета.
.Pp
.Sy ВНИМАНИЕ:
при создании
.Ux
доменного сокета,
.Nm
должен изменить владельца и права на сокет.
Это может быть сделано безопасно только если
каталог, в котором создаётся сокет,
доступен для записи только root.
Не
.Em используйте
.Nm
для создания сокетов в каталогах, доступных для записи всем,
таких как
.Pa /tmp;
используйте
.Pa /var/run
или подобный каталог вместо этого.
.Pp
Внутренние сервисы могут быть запущены на
.Ux
доменных сокетах обычным способом.Название внутренней службы определяется с помощью последнего компонента пути к сокету. Например, если указать сокет с именем
.Pa /var/run/chargen,
то при получении соединения на этот сокет будет вызвана служба
.Dq chargen.
.Sh "ФАЙЛЫ"
.Bl -tag -width /var/run/inetd.pid -compact
.It Pa /etc/inetd.conf
файл конфигурации
.It Pa /etc/netconfig
база данных конфигурации сети
.It Pa /etc/rpc
преобразование имен служб в номера программ RPC
.It Pa /etc/services
преобразование имен служб в номера портов
.It Pa /var/run/inetd.pid
PID текущего процесса
.Nm
.El
.Sh "ПРИМЕРЫ"
Примеры для различных служб доступны в файле
.Pa /etc/inetd.conf.
.Pp
В него включены примеры для
.Nm bootpd,
.Nm comsat,
.Nm cvs,
.Nm date,
.Nm fingerd,
.Nm ftpd,
.Nm imapd,
.Nm nc,
.Nm nmbd,
.Nm nntpd,
.Nm rlogind,
.Nm rpc.rquotad,
.Nm rpc.rusersd,
.Nm rpc.rwalld,
.Nm rpc.statd,
.Nm rpc.sprayd,
.Nm rshd,
.Nm prometheus_sysctl_exporter,
.Nm smtpd,
.Nm smbd,
.Nm swat
.Nm talkd,
.Nm telnetd,
.Nm tftpd,
.Nm uucpd.
.Pp
Также включены внутренние службы, предоставляемые
.Nm
для daytime, time, echo, discard и chargen, а также chargen для
.Nm ipsec
Authentication Headers.
.Pp
Примеры обработки запросов аутентификации через
.Nm identd,
также включены.
.Sh "СООБЩЕНИЯ ОБ ОШИБКАХ"
Сервер
.Nm
регистрирует сообщения об ошибках с использованием
.Xr syslog 3.
Важные сообщения об ошибках и их пояснения:
.Pp
.Bl -ohang -compact
.It Xo
.Ar service Ns / Ns Ar protocol
.No "сервер не работает (зацикливание), служба завершена."
.Xc
Количество запросов на указанную службу за прошедшую минутуПревышен лимит.
Лимит существует для предотвращения перегрузки системы из-за сбойной программы
или злонамеренного пользователя.
Данное сообщение может появиться по нескольким причинам:
.Bl -enum -offset indent
.It
Слишком много хостов запрашивают сервис в короткий промежуток времени.
.It
Сбойная клиентская программа запрашивает сервис слишком часто.
.It
Злонамеренный пользователь запускает программу для вызова сервиса в
атаке типа "отказ в обслуживании".
.It
Вызываемая сервисная программа имеет ошибку, из-за которой клиенты
начинают повторять попытки очень быстро.
.El
.Pp
Используйте
.Fl R Ar rate
опцию,
как описано выше, чтобы изменить ограничение по частоте.
Как только лимит будет достигнут, сервис будет
автоматически восстановлен через 10 минут.
.Pp
.It Xo
.Ar service Ns / Ns Ar protocol :
.No \&Нет такого пользователя
.Ar user ,
.No сервис проигнорирован
.Xc
.It Xo
.Ar service Ns / Ns Ar protocol :
.No getpwnam :
.Ar user :
.No \&Нет такого пользователя
.Xc
Запись для
.Ar user
не найдена в базе данных
.Xr passwd 5.
Первое сообщение
появляется, когда
.Nm
(пере)читывает файл конфигурации.
Второе сообщение появляется, когда
сервис вызывается.
.Pp
.It Xo
.Ar service :
.No не удается установить uid
.Ar uid
.Xc
.It Xo
.Ar service :
.No не удается установить gid
.Ar gid
.Xc
Идентификатор пользователя или группы для поля
.Ar user
недействителен.
.Pp
.It "setsockopt(SO_PRIVSTATE): Operation not supported"
Утилита
.Nm
попыталась отказаться от привилегированного состояния, связанного с сокетом, но не смогла.
.Pp
.It Xo unknown
.Ar rpc/udp
или
.Ar rpc/tcp
.Xc
Запись не найдена ни для
.Ar udp
ни для
.Ar tcp
в базе данных
.Xr netconfig 5.
.Pp
.It Xo unknown
.Ar rpc/udp6
или
.Ar rpc/tcp6
.Xc
Запись не найдена ни для
.Ar udp6.Ar tcp6
в
.Xr netconfig 5
базе данных.
.El
.Sh СМОТРИ ТАКЖЕ
.Xr cvs 1 Pq Pa ports/devel/opencvs ,
.Xr date 1 ,
.Xr nc 1 ,
.Xr ipsec_set_policy 3 ,
.Xr ipsec 4 ,
.Xr hosts_access 5 ,
.Xr hosts_options 5 ,
.Xr login.conf 5 ,
.Xr netconfig 5 ,
.Xr passwd 5 ,
.Xr rpc 5 ,
.Xr services 5 ,
.Xr bootpd 8 ,
.Xr comsat 8 ,
.Xr fingerd 8 ,
.Xr ftpd 8 ,
.Xr imapd 8 Pq Pa ports/mail/courier-imap ,
.Xr nmbd 8 Pq Pa ports/net/samba412 ,
.Xr rlogind 8 ,
.Xr rpc.rquotad 8 ,
.Xr rpc.rusersd 8 ,
.Xr rpc.rwalld 8 ,
.Xr rpc.statd 8 ,
.Xr rshd 8 ,
.Xr prometheus_sysctl_exporter 8 ,
.Xr smbd 8 Pq Pa ports/net/samba412 ,
.Xr talkd 8 ,
.Xr telnetd 8 Pq Pa ports/net/freebsd-telnetd ,
.Xr tftpd 8 ,
.Xr uucpd 8 Pq Pa ports/net/freebsd-uucp
.Rs
.%A Майкл С. Сент-Джонс
.%T Протокол Идентификации
.%O RFC1413
.Re
.Sh ИСТОРИЯ
Утилита
.Nm
появилась в
.Bx 4.3 .
TCPMUX основан на коде и документации Марка Лоттора.
Поддержка
ONC RPC-базированных сервисов моделируется в соответствии с тем,
что предоставляется
SunOS
4.1.
Хак IPsec был внесен проектом KAME в 1999 году.
Поддержка
.Fx
TCP Wrappers впервые появилась в
.Fx 3.2 .