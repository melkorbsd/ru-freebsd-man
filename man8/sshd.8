.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $OpenBSD: sshd.8,v 1.325 2023/09/19 20:37:07 deraadt Exp $
.Dd $Mdocdate: September 19 2023 $
.Dt SSHD 8
.Os
.Sh ИМЯ
.Nm sshd
.Nd демон OpenSSH
.Sh СИНТАКСИС
.Nm sshd
.Bk -words
.Op Fl 46DdeGiqTtV
.Op Fl C Ar connection_spec
.Op Fl c Ar host_certificate_file
.Op Fl E Ar log_file
.Op Fl f Ar config_file
.Op Fl g Ar login_grace_time
.Op Fl h Ar host_key_file
.Op Fl o Ar option
.Op Fl p Ar port
.Op Fl u Ar len
.Ek
.Sh ОПИСАНИЕ
.Nm
(OpenSSH Daemon) это программа-демон для
.Xr ssh 1 .
Она обеспечивает безопасные зашифрованные коммуникации между двумя ненадежными хостами
через небезопасную сеть.
.Pp
.Nm
ожидает соединения от клиентов.
Обычно она запускается при загрузке из
.Pa /etc/rc.d/sshd .
Она порождает нового
демона для каждого входящего соединения.
Порожденные демоны управляют
обменом ключами, шифрованием, аутентификацией, выполнением команд,
и обменом данными.
.Pp
.Nm
может быть настроен с помощью параметров командной строки или файла конфигурации
(по умолчанию
.Xr sshd_config 5 ) ;
параметры командной строки переопределяют значения указанные в
файле конфигурации.
.Nm
перечитывает файлы конфигурации при получении сигнала
.Dv SIGHUP ,
выполнив себя с именем и параметрами, с которыми она была запущена, например\&
.Pa /usr/sbin/sshd .
.Pp
Параметры следующие:
.Bl -tag -width Ds
.It Fl 4
Принуждает
.Nm
использовать только IPv4 адреса.
.It Fl 6
Принуждает
.Nm
использовать только IPv6 адреса.
.It Fl C Ar connection_spec
Указывает параметры соединения для использования
.Fl T
расщиренного тестового режима.
Если предусмотрено, любые
.Cm Match
директивы примененные в файле конфигурации, применяются до
записи конфигурации в стандартный вывод.
Параметры подключения предоставляются как пары ключевое слово=значение и могут быть
поставлены в любом порядке, также с множеством
.Fl C
параметров или разделенным запятыми списком.
Ключевые слова
.Dq addr ,
.Dq user ,
.Dq host ,
.Dq laddr ,
.Dq lport ,
и
.Dq rdomain
и соответствуют адресу источника, пользователю, разрешенному имени хоста источника,
локальному адресу, номеру локального порта и домену маршртизации соответственно.
.It Fl c Ar host_certificate_file
Указывает путь к файлу сертификата для идентификации
.Nm
во время обмена ключами.
Файл сертификата должен соответствовать файлу ключа хоста, указанному использованием параметра
.Fl h
или директивой конфигурации
.Cm HostKey .
.It Fl D
Когда указываается этот параметр,
.Nm
не отсоединится и не станет демоном.
Это позволяет легко контролировать
.Nm sshd .
.It Fl d
Режим отладки.
Сервер выводит подробную отладочную информацию на стандартный вывод ошибок,
не переходя в фоновый режим.
Сервер также не будет
.Xr fork 2
и будет обрабатывать только одно соединение.
Этот параметр предназначен только для отладки на сервере.
Несколько
.Fl d
параметров увеличивают уровень отладки.
Максимум 3.
.It Fl E Ar log_file
Добавить протоколы отладки в 
.Ar log_file
вместо системного протокола.
.It Fl e
Записать протокол отладки в стандартный вывод ошибок вместо системного протокола.
.It Fl f Ar config_file
Указывает имя файла конфигурации.
По умолчанию это
.Pa /etc/ssh/sshd_config .
.Nm
отказывается запускаться если здесь нет файла конфигурации.
.It Fl G
Проанализировать и напечатать файл конфигурации.
Проверяет достоверность файла конфигурации, выводит актуальную конфигурацию
на стандартный вывод и затем завершается.
Выборочно правила
.Cm Match
могут быть применены путем указания параметров соединения, используя один или более параметров
.Fl C .
.It Fl g Ar login_grace_time
Дает дополнительное время для клиентов аутентифицировать себя (по умолчанию
120 секунд).
Если клиент не проходит аутентификацию пользователя в течение
этого множества секунд, сервер отключается и завершает работу.
Значение ноль указывает на отсутствие лимита.
.It Fl h Ar host_key_file
Указывает файл, из которого читается ключ хоста.
Этот параметр должен быть предоставлен, если
.Nm
не запускается от root (поскольку
ключевые файлы хоста обычно не могут быть прочитаны никем кроме root).
По умолчанию это
.Pa /etc/ssh/ssh_host_ecdsa_key ,
.Pa /etc/ssh/ssh_host_ed25519_key
и
.Pa /etc/ssh/ssh_host_rsa_key .
Возможно иметь несколько ключевых файлов хоста для
разных ключевых алгоритмов хоста.
.It Fl i
Указывает что
.Nm
был запущен из
.Xr inetd 8 .
.It Fl o Ar option
Может быть использован для выдачи параметров в формате, используемом в файле конфигурации.
Это полезно для указания параметров, для которых нет отдельного
флага командной строки.
Для получения подробных деталей о параметрах и их значениях, смотрите
.Xr sshd_config 5 .
.It Fl p Ar port
Указывает порт, на котором сервер прослушивает соединения
(по умолчанию 22).
Разрешено указание нескольких портов в параметрах.
Порты, указанные в файле конфигурации с параметром
.Cm Port
игнорируются, если порт указан в параметрах командной строки.
Порты указываются с использованием параметра
.Cm ListenAddress
переопределяются параметры в командной строки.
.It Fl q
Тихий режим.
Ничего не отправляется в системный протокол.
Обычно аутентификация в начале и завершение каждого соединения протоколируется.
.It Fl T
Расширенный тестовый режим.
Проверяет достоверность файла конфигурации, выводит эффективную конфигурацию
на стандартный вывод и затем выходит.
Выборочно, правила
.Cm Match
могут быть применены указанием параметров соединения, используя один или более параметров
.Fl C .
Это похоже на флаг
.Fl G ,
но оно включает проведение дополнительного тестирования, выполняемого флагом
.Fl t .
.It Fl t
Тестовый режим.
Проверяет только достоверность файла конфигурации и работоспособность ключей.
Это полезно для надежного обновления
.Nm 
, поскольку параметры конфигурации могут измениться.
.It Fl u Ar len
Этот параметр используется для указания размера поля в структуре
.Vt utmp ,
которая содержит имя удаленного хоста.
Если разрешенное имя хоста длиннее, чем
.Ar len ,
вместо него будет использовано десятичное значение с точками.
Это позволяет хостам с очень длинными именами хоста, которые 
переполняют это поле, оставаться однозначно идентифицированными.
Указание
.Fl u0
показывает что только десятичные адреса с точками
следует помещать в файл
.Pa utmp .
.Fl u0
может быть использовано, чтобы запретить
.Nm
выполнять DNS-запросы, если механизм аутентификации
или конфигурация не требуют этого.
Механизмы аутентификации, которые могут требовать DNS включают
.Cm HostbasedAuthentication
и используют параметр
.Cm from="pattern-list"
в ключевом файле.
Параметры конфигурации, которые требуют DNS включают использование шаблона
USER@HOST в
.Cm AllowUsers
или
.Cm DenyUsers .
.It Fl V
Отображает номер версии и завершается.
.El
.Sh АУТЕНТИФИКАЦИЯ
OpenSSH SSH демон поддерживает только протокол SSH 2.
Каждый хост имеет свой специфичный ключ,
используемый для идентификации хоста.
Всякий раз, когда клиент подключается, демон отвечает свой публичный ключ
вместе с ответом.
Клиент сравнивает
ключ хоста со свой собственной базой данных для проверки, что он не изменился.
Дальнейшая секретность обеспечивается соглашением о ключах Диффи-Хеллмана.
Результатом такого согласования ключей является общий сеансовый ключ.
Остальная часть сеанса шифруется с использованием симметричного шифра.
Клиент выбирает используемый алгоритм шифрования
из числа предложенных сервером.
Кроме того, целостность сеанса обеспечивается
с помощью криптографического ключа аутентификации (MAC).
.Pp
Наконец, сервер и клиент вступают в диалог аутентификации.
Клиент пытается аутентифицировать себя, используя
аутентификацию на основе хоста, аутентификацию с
открытым ключом, аутентификацию по
запросу-ответу
или аутентификацию по паролю.
.Pp
Независимо от типа аутентификации, учетная запись проверяется, чтобы
убедиться, что она доступна.  Учетная запись недоступна, если она
заблокирована, указана в
.Cm DenyUsers
или его группа указана в
.Cm DenyGroups
\&. Определение заблокированной учетной записи зависит от системы. Некоторые платформы
имеют собственную базу данных учетных записей (например, AIX), а некоторые изменяют поле пароля (
.Ql \&*LK\&*
в Solaris и UnixWare,
.Ql \&*
в HP-UX, содержащий
.Ql Nologin
в Tru64,
ведущий
.Ql \&*LOCKED\&*
в FreeBSD и ведущий
.Ql \&!
на большинстве Linux-систем).
Если существует требование отключить аутентификацию по паролю
для учетной записи, сохраняя при этом доступ к открытому ключу, то в поле пароль
должно быть установлено значение, отличное от этих значений (например,
.Ql NP
или
.Ql \&*NP\&*
).
.Pp
Если клиент успешно прошел аутентификацию, открывается диалог для
подготовки сеанса.
В это время клиент может запросить
такие действия, как выделение псевдо-терминала, переадресация соединений X11,
переадресация TCP-соединений или переадресация
соединения агента аутентификации по защищенному каналу.
.Pp
После этого клиент запрашивает либо интерактивную оболочку, либо выполнение
неинтерактивной команды, которую
.Nm
выполнит через пользовательскую оболочку, используя свой параметр
.Fl c .
Затем стороны переходят в режим сеанса.
В этом режиме любая из сторон может отправлять
данные в любое время, и такие данные передаются в/из
командной строки или команды на стороне сервера, и терминала пользователя на стороне клиента.
.Pp
Когда пользовательская программа завершает работу и все переадресованные X11 и другие
соединения закрыты, сервер отправляет клиенту статус завершения команды, и обе стороны завершают работу.
.Sh ПРОЦЕСС ВХОДА В СИСТЕМУ
Когда пользователь успешно входит в систему,
.Nm
выполняет следующие действия:
.Bl -enum -offset indent
.It
Если для входа используется tty и не была указана ни одна команда,
выводится время последнего входа в систему и
.Pa /etc/motd
(если это не запрещено в файле конфигурации или с помощью
.Pa ~/.hushlogin ;
смотрите раздел
.Sx FILES
).
.It
Если для входа используется tty, записывается время входа в систему.
.It
Проверяются
.Pa /etc/nologin и
.Pa /var/run/nologin ;
если таковой существует, выводится содержимое и завершается
(если только он не является root).
.It
Запускается с обычными правами пользователя.
.It
Настраивает базовую среду.
.It
Читает содержимое файла файла
.Pa ~/.ssh/environment ,
если он существует, и пользователям разрешено изменять свое окружение.
Смотрите параметр
.Cm PermitUserEnvironment
в
.Xr sshd_config 5 .
.It
Переходит в домашний каталог пользователя.
.It
Если
.Pa ~/.ssh/rc
существует и параметр
.Xr sshd_config 5
.Cm PermitUserRC
установлен, запускает его; если же существует
.Pa /etc/ssh/sshrc ,
то запускает
его; в противном случае запускается
.Xr xauth 1 .
Файлы
.Dq rc
передаются
протоколу аутентификации X11 и cookie из стандартного ввода.
Смотрите
.Sx SSHRC ,
ниже.
.It
Запускает оболочку пользователя или команду.
Все команды выполняются под учетной записью пользователя, как указано в
системной базе данных паролей.
.El
.Sh SSHRC
Если файл
.Pa ~/.ssh/rc
существует,
.Xr sh 1
запускает его после чтения файлов
окружения, но перед запуском пользовательской оболочки или команды.
Он не должен выдавать никаких выходных данных в стандартный вывод; вместо этого должна использоваться стандартный вывод ошибок.
Если используется переадресация X11, она получит пару "proto cookie" в
своем стандартном вводе(и
.Ev DISPLAY
в своем окружении).
Скрипт должен вызывать
.Xr xauth 1
потому что
.Nm
не будет автоматически запускать xauth для добавления X11 cookie.
.Pp
Основное назначение этого файла - запустить любые процедуры инициализации, которые могут потребоваться до того, как домашний каталог пользователя станет
доступным; AFS является конкретным примером такой среды.
.Pp
Этот файл, вероятно, будет содержать некоторый код инициализации, за которым последует
что-то похожее на:
.Bd -literal -offset 3n
if read proto cookie && [ -n "$DISPLAY" ]; then
	if [ `echo $DISPLAY | cut -c1-10` = 'localhost:' ]; then
		# X11UseLocalhost=yes
		echo add unix:`echo $DISPLAY |
		    cut -c11-` $proto $cookie
	else
		# X11UseLocalhost=no
		echo add $DISPLAY $proto $cookie
	fi | xauth -q -
fi
.Ed
.Pp
Если этот файл не существует,
.Pa /etc/ssh/sshrc
запускается, и если
он также не существует, для добавления cookie используется xauth.
.Sh ФОРМАТ ФАЙЛА AUTHORIZED_KEYS
.Cm AuthorizedKeysFile
указывает файлы, содержащие открытые ключи для
аутентификации с помощью открытого ключа;
если этот параметр не указан, по умолчанию это
.Pa ~/.ssh/authorized_keys
и
.Pa ~/.ssh/authorized_keys2 .
Каждая строка файла содержит один
ключ (пустые строки и строки, начинающиеся с
.Ql #
игнорируются как
комментарии).
Открытые ключи состоят из следующих полей, разделенных пробелами:
параметры, тип ключа, ключ в кодировке base64, комментарий.
Поле параметры является необязательным.
Поддерживаются следующие типы ключей:
.Pp
.Bl -item -compact -offset indent
.It
sk-ecdsa-sha2-nistp256@openssh.com
.It
ecdsa-sha2-nistp256
.It
ecdsa-sha2-nistp384
.It
ecdsa-sha2-nistp521
.It
sk-ssh-ed25519@openssh.com
.It
ssh-ed25519
.It
ssh-dss
.It
ssh-rsa
.El
.Pp
Поле для комментариев ни для чего не используется (но может быть удобным для
пользователя при идентификации ключа).
.Pp
Обратите внимание, что длина строк в этом файле может составлять несколько сотен байт
(из-за размера кодировки с открытым ключом)
, но не более 8 килобайт, что позволяет использовать ключи RSA объемом до 16 килобит.
Вы не хотите вводить их; вместо этого скопируйте
.Pa id_dsa.pub ,
.Pa id_ecdsa.pub ,
.Pa id_ecdsa_sk.pub ,
.Pa id_ed25519.pub ,
.Pa id_ed25519_sk.pub ,
или
.Pa id_rsa.pub
файл и отредактируйте его.
.Pp
.Nm
устанавливает минимальный размер модуля ключа RSA в 1024 бита.
.Pp
Параметры (если таковые имеются) состоят из
спецификаций опций, разделенных запятыми.
Пробелы не допускаются, за исключением двойных кавычек.
Поддерживаются следующие спецификации параметров (обратите
внимание, что ключевые слова параметров не чувствительны к регистру):
.Bl -tag -width Ds
.It Cm agent-forwarding
Включает переадресацию агента аутентификации, которая ранее была отключена с помощью параметра
.Cm restrict
.It Cm cert-authority
Указывает, что указанный ключ является центром сертификации (CA), которому
доверено проверять подписанные сертификаты для аутентификации пользователя.
.Pp
Сертификаты могут содержать ограничения доступа, аналогичные этим параметрам ключа.
Если присутствуют как ограничения сертификата, так и параметры ключа, применяется наиболее
строгое объединение из них.
.It Cm command="command"
Указывает, что команда выполняется всякий раз, когда этот ключ используется для
аутентификации.
Команда, введенная пользователем (если таковая имеется), игнорируется.
Команда выполняется с помощью pty, если клиент запрашивает pty;
в противном случае она выполняется без tty.
Если требуется 8-битный чистый канал,
не нужно запрашивать pty или следует указать
.Cm no-pty .
Кавычка может быть включена в команду с обратной косой чертой перед ней.
.Pp
Этот параметр может быть полезен
для ограничения доступа к определенным открытым ключам для выполнения только определенной операции.
Примером может служить ключ, который разрешает удаленное резервное копирование, но ни что иное.
Обратите внимание, что клиент может указать переадресацию по протоколу TCP и/или X11, если они явно не запрещены, например, с помощью параметра ключа
.Cm restrict .
.Pp
Команда, первоначально предоставленная клиентом, доступна в переменной среды
.Ev SSH_ORIGINAL_COMMAND .
Обратите внимание, что этот параметр применяется к командной строке, выполнению команды или подсистемы.
Также обратите внимание, что эта команда может быть заменена директивой
.Xr sshd_config 5
.Cm ForceCommand .
.Pp
Если указана команда и принудительная команда встроена в сертификат, используемый для аутентификации, то сертификат будет принят только в том случае, если эти
две команды идентичны.
.It Cm environment="NAME=value"
Указывает, что строка должна быть добавлена в среду при
входе в систему с использованием этого ключа.
Переменные среды, заданные таким образом, 
переопределяют другие значения среды по умолчанию.
Допускается несколько параметров данного типа.
Обработка среды отключена по умолчанию и
управляется с помощью параметра
.Cm PermitUserEnvironment .
.It Cm expiry-time="timespec"
Указывает время, по истечении которого ключ не будет принят.
Время может быть указано в виде даты YYYYMMDD[Z] или времени YYYYMMDDHHMM[SS][Z].
Даты и время будут интерпретироваться в системном часовом поясе, если
к ним не добавлен символ Z, и в этом случае они будут интерпретироваться в часовом поясе UTC.
.It Cm from="pattern-list"
Указывает, что в дополнение к аутентификации с помощью открытого ключа
в списке шаблонов, разделенных запятыми, должно присутствовать либо каноническое имя удаленного хоста, либо его IP-адрес.
Смотрите PATTERNS в
.Xr ssh_config 5
для получения дополнительной информации о шаблонах.
.Pp
В дополнение к подстановочному знаку, который может быть применен к именам хостов или
адресам, строфа
.Cm from
может соответствовать IP-адресам с использованием обозначения CIDR адреса/маски.
.Pp
Целью этого параметра является дополнительное повышение безопасности:
аутентификация с помощью открытого ключа сама по себе не обеспечивает доверия к сети, серверам имен или
чему-либо еще (кроме ключа); однако, если кто-то каким-то образом украдет ключ,
он позволит злоумышленнику войти в систему из любой точки мира.
Этот дополнительный параметр усложняет использование украденного ключа 
(серверы имен и/или маршрутизаторы должны быть скомпрометированы в дополнение к
самому ключу).
.It Cm no-agent-forwarding
Запрещает переадресацию агента аутентификации, когда этот ключ используется для
аутентификации.
.It Cm no-port-forwarding
Запрещает переадресацию TCP, когда этот ключ используется для аутентификации.
Любые запросы клиента на переадресацию порта будут возвращать сообщение об ошибке.
Это может быть использовано, например, в сочетании с опцией
.Cm command .
.It Cm no-pty
Предотвращает выделение tty (запрос на выделение pty завершится ошибкой).
.It Cm no-user-rc
Отключает выполнение
.Pa ~/.ssh/rc .
.It Cm no-X11-forwarding
Запрещает переадресацию X11, когда этот ключ используется для аутентификации.
Любые запросы клиента на переадресацию X11 будут возвращать сообщение об ошибке.
.It Cm permitlisten="[host:]port"
Ограничивает удаленную переадресацию портов с помощью параметра
.Xr ssh 1
.Fl R , 
таким образом, чтобы она могла прослушивать только указанный хост (необязательно) и порт.
Адреса IPv6 можно указать, заключив их в квадратные скобки.
Несколькко параметров
.Cm permitlisten
могут быть применены через запятую.
Имена хостов могут содержать шаблоны, как описано в разделе PATTERNS в
.Xr ssh_config 5 .
.Cm * 
вместо порта соответствует любому порту.
Обратите внимание, что настройка
.Cm GatewayPorts
может дополнительно ограничить адреса прослушивания.
Обратите внимание, что
.Xr ssh 1
будет использовать имя хоста
.Dq localhost
если при запросе переадресации не был указан прослушиваемый хост и
это имя обрабатывается иначе, чем явные адреса локального хоста
.Dq 127.0.0.1
и
.Dq ::1 .
.It Cm permitopen="host:port"
Ограничивает переадресацию локальных портов с помощью параметра
.Xr ssh 1
.Fl L
позволяющего подключаться только к указанному хосту и порту.
Адреса IPv6 можно указать, заключив адрес в квадратные скобки.
Несколько параметров
.Cm permitopen
могут быть использованы через запятую.
Для указанных имен хостов не выполняется сопоставление с шаблоном или поиск по имени, они должны быть буквальными именами хостов и/или адресами.
.Cm * 
вместо порта соответствует любому порту.
.It Cm port-forwarding
Включить переадресацию портов, ранее отключенную с помощью параметра
.Cm restrict .
.It Cm principals="principals"
В строке
.Cm cert-authority ,
указываются разрешенные участников для проверки подлинности сертификата в
виде списка, разделенного запятыми.
Чтобы сертификат был принят, по крайней мере одно имя из этого списка должно присутствовать в
списке участников сертификата.
Этот параметр игнорируется для ключей, которые не помечены как доверенные
лица, подписывающие сертификаты, используя параметр
.Cm cert-authority .
.It Cm pty
Разрешает распределение tty, ранее отключенное с помощью параметра
.Cm restrict .
.It Cm no-touch-required
Для подписей, созданных с использованием этого ключа, не требуется демонстрация присутствия пользователя.
Этот параметр имеет смысл только для алгоритмов аутентификации FIDO
.Cm ecdsa-sk
и
.Cm ed25519-sk .
.It Cm verify-required
Требуется, чтобы подписи, сделанные с использованием этого ключа, подтверждали, что они проверили
пользователя, например, с помощью PIN-кода.
Этот параметр имеет смысл только для алгоритмов аутентификации FIDO
.Cm ecdsa-sk
и
.Cm ed25519-sk .
.It Cm restrict
Выключает все ограничения, т.е. отключает переадресацию портов, агентов и X11,
а также отключите распределение PTY
и выполнение
.Pa ~/.ssh/rc .
Если в будущем к файлам authorized_keys будут добавлены какие-либо возможности ограничения,
они будут включены в этот набор.
.It Cm tunnel="n"
Принудительно подключает устройство
.Xr tun 4
к серверу.
При отсутствии этого параметра будет использовано следующее доступное устройство, если
клиент запросит туннель.
.It Cm user-rc
Включает выполнение
.Pa ~/.ssh/rc ,
которое ранее было отключено с помощью параметра
.Cm restrict .
.It Cm X11-forwarding
Разрешает переадресацию X11, которая ранее была отключена с помощью параметра
.Cm restrict .
.El
.Pp
Пример файла authorized_keys:
.Bd -literal -offset 3n
# Комментарии допускаются в начале строки. Допускаются пустые строки.
# Простой ключ, без ограничений
ssh-rsa ...
# Принудительная команда, отключающая PTY и всю переадресацию
restrict,command="dump /home" ssh-rsa ...
# RОграничение адресатов переадресации по ssh -L
permitopen="192.0.2.1:80",permitopen="192.0.2.2:25" ssh-rsa ...
# Ограничение прослушивателей пересылки по ssh -R
permitlisten="localhost:8080",permitlisten="[::1]:22000" ssh-rsa ...
# Конфигурация для туннельной переадресации
tunnel="0",command="sh /etc/netstart tun0" ssh-rsa ...
# Переопределение ограничения для разрешения распределения PTY
restrict,pty,command="nethack" ssh-rsa ...
# Разрешить использование клавиши FIDO без необходимости касания
no-touch-required sk-ecdsa-sha2-nistp256@openssh.com ...
# Требуется подтверждение пользователя (например, PIN-код или биометрические данные) для получения ключа FIDO
verify-required sk-ecdsa-sha2-nistp256@openssh.com ...
# Доверенный ключу CA, разрешайте бесконтактный доступ к FIDO, если это запрошено в сертификате
cert-authority,no-touch-required,principals="user_a" ssh-rsa ...
.Ed
.Sh ФОРМАТ ФАЙЛА SSH_KNOWN_HOSTS
Файлы
.Pa /etc/ssh/ssh_known_hosts
и
.Pa ~/.ssh/known_hosts
содержат открытые ключи хостов для всех известных хостов.
Глобальный файл должен
быть подготовлен администратором (необязательно), а файл для каждого пользователя
поддерживается автоматически: всякий раз, когда пользователь подключается к неизвестному хосту,
его ключ добавляется в файл для каждого пользователя.
.Pp
Каждая строка в этих файлах содержит следующие поля: маркер (необязательно),
имена хостов, тип ключа, ключ в кодировке base64, комментарий.
Поля разделены пробелами.
.Pp
Маркер необязателен, но если он присутствует, то это должен быть один из
.Dq @cert-authority ,
чтобы указать, что строка содержит ключ центра сертификации (CA),
или
.Dq @revoked ,
чтобы указать, что ключ, содержащийся в строке, аннулирован и никогда не должен
быть принят.
На ключевой линии следует использовать только один маркер.
.Pp
Имена хостов - это список шаблонов, разделенных запятыми
.Pf ( Ql *
и
.Ql \&?
действуют как
шаблоны); каждый шаблон, в свою очередь, сопоставляется с именем хоста.
Когда
.Nm sshd
выполняет аутентификацию клиента, например, при использовании
.Cm HostbasedAuthentication ,
это будет каноническое имя клиентского хоста.
Когда
.Xr ssh 1
производит аутентификацию сервера - это будет имя хоста,
указанное пользователем, значение
.Xr ssh 1
.Cm HostkeyAlias
если оно было указано, или каноническое имя хоста сервера, если параметр
.Xr ssh 1
.Cm CanonicalizeHostname
был использован.
.Pp
Шаблону также может предшествовать
.Ql \&!
чтобы указать на отрицание: если имя хоста соответствует отрицаемому
шаблону, оно не принимается (этой строкой), даже если оно соответствует другому
шаблону в строке.
Имя хоста или адрес могут быть необязательно заключены в скобки
.Ql \&[
и
.Ql \&]
с последующим
.Ql \&:
и нестандартным номером порта.
.Pp
В качестве альтернативы, имена хостов могут храниться в хэшированном виде, который скрывает имена хостов
и адреса в случае раскрытия содержимого файла.
Хэшированные имена хостов начинаются с символа
.Ql | .
В одной строке может отображаться только одно хэшированное имя хоста, и ни один из вышеперечисленных
операторов отрицания или подстановочных знаков не может быть применен.
.Pp
Тип ключа и ключ в кодировке base64 берутся непосредственно из ключа хоста; они
могут быть получены, например, из
.Pa /etc/ssh/ssh_host_rsa_key.pub .
Необязательное поле для комментариев продолжается до конца строки и не используется.
.Pp
Строки, начинающиеся с
.Ql #
и пустые строки игнорируются как комментарии.
.Pp
При выполнении проверки подлинности хоста проверка подлинности принимается, если какая-либо
соответствующая строка содержит соответствующий ключ; либо тот, который точно соответствует, либо,
если сервер предоставил сертификат для проверки подлинности, ключ
центра сертификации, подписавшего сертификат.
Чтобы ключу можно было доверять в качестве центра сертификации, он должен использовать маркер, описанный выше.
.Dq @cert-authority ,
описанный выше.
.Pp
Файл известных хостов также предоставляет возможность помечать ключи как аннулированные,
например, когда известно, что связанный с ними закрытый ключ был
украден.
Аннулированные ключи указываются путем включения маркера
.Dq @revoked
в начале строки ключа и никогда не принимаются для
проверки подлинности или в качестве центров сертификации, а вместо этого
выдают предупреждение от
.Xr ssh 1
когда они встречаются.
.Pp
Допустимо (но не
рекомендуется) использовать одни и те же имена в разных строках или разных ключах хоста.
Это неизбежно произойдет, если в файл будут помещены краткие формы имен хостов
из разных доменов.
Возможно, что файлы содержат противоречивую информацию; аутентификация
принимается, если в любом из файлов можно найти достоверную информацию.
.Pp
Обратите внимание, что длина строк в этих файлах обычно составляет сотни символов, и вам определенно не захочется вводить ключи хоста вручную.
Лучше сгенерируйте их с помощью скрипта
.Xr ssh-keyscan 1 ,
или взяв, например,
.Pa /etc/ssh/ssh_host_rsa_key.pub
и добавить имена хостов в начале.
.Xr ssh-keygen 1
также предлагает некоторые базовые функции автоматического редактирования для
.Pa ~/.ssh/known_hosts
включая удаление хостов, соответствующих имени хоста, и преобразование всех
имен хостов в их хэшированные представления.
.Pp
Пример файла ssh_known_hosts:
.Bd -literal -offset 3n
# Комментарии разрешены в начале строки
cvs.example.net,192.0.2.10 ssh-rsa AAAA1234.....=
# Хэшированное имя хоста
|1|JfKTdBh7rNbXkVAQCRp4OQoPfmI=|USECr3SWf1JUPsms5AqfD5QfxkM= ssh-rsa
AAAA1234.....=
# Отозванный ключ
@revoked * ssh-rsa AAAAB5W...
# Ключ CA, принятый для любого хоста в *.mydomain.com или *.mydomain.org
@cert-authority *.mydomain.org,*.mydomain.com ssh-rsa AAAAB5W...
.Ed
.Sh ФАЙЛЫ
.Bl -tag -width Ds -compact
.It Pa ~/.hushlogin
Этот файл используется для того, чтобы не выводить на печать время последнего входа в систему и
.Pa /etc/motd ,
если
.Cm PrintLastLog
и
.Cm PrintMotd ,
соответственно,
включены.
Это не препятствует печати баннера, указанного в
.Cm Banner .
.Pp
.It Pa ~/.rhosts
Этот файл используется для аутентификации на основе хоста (смотрите
.Xr ssh 1
для получения дополнительной информации).
На некоторых компьютерах этот файл может быть
доступен для чтения во всем мире, если домашний каталог пользователя находится в разделе NFS,
поскольку
.Nm
читает его от имени root.
Кроме того, этот файл должен принадлежать пользователю
и не должен иметь разрешений на запись для кого-либо еще.
Рекомендуемое
разрешение для большинства компьютеров - чтение/запись для пользователя,
отсутствие доступа для других.
.Pp
.It Pa ~/.shosts
Этот файл используется точно так же, как
.Pa .rhosts ,
но допускает аутентификацию на основе хоста без разрешения входа в систему с
помощью rlogin/rsh.
.Pp
.It Pa ~/.ssh/
Этот каталог является расположением по умолчанию для всей пользовательской конфигурации
и информации об аутентификации.
Нет общего требования сохранять все содержимое этого каталога
в секрете, но рекомендуемые разрешения на чтение/запись/выполнение для пользователя
и отсутствие доступа для остальных.
.Pp
.It Pa ~/.ssh/authorized_keys
Содержит список открытых ключей (DSA, ECDSA, Ed25519, RSA), 
которые можно использовать для входа в систему под именем этого пользователя.
Формат этого файла описан выше.
Содержимое файла не является особо конфиденциальным, но рекомендуемые
права доступа - чтение/запись для пользователя и отсутствие доступа для остальных.
.Pp
Если этот файл, каталог
.Pa ~/.ssh
или домашний каталог пользователя доступен для записи
другим пользователям, то файл может быть изменен или заменен неавторизованными
пользователями.
В этом случае,
.Nm
не позволит его использовать, если только для параметра
.Cm StrictModes
не было установлено значение
.Dq no .
.Pp
.It Pa ~/.ssh/environment
Этот файл читается окружением при входе в систему (если он существует).
Он может содержать только пустые строки, строки комментариев (которые начинаются с
.Ql # )
и строки присвоения вида имя=значение.
Файл должен быть доступен
только для записи пользователем; он не должен быть доступен для чтения кем-либо еще.
Обработка окружения по умолчанию отключена и
управляется с помощью параметра
.Cm PermitUserEnvironment .
.Pp
.It Pa ~/.ssh/known_hosts
Содержит список ключей хоста для всех хостов, на которые пользователь заходил
и которые еще не включены в общесистемный список известных ключей хоста.
Формат этого файла описан выше.
Этот файл должен быть доступен для записи только root/владельцу и
может быть доступен для чтения всему миру (но не обязательно).
.Pp
.It Pa ~/.ssh/rc
Содержит процедуры инициализации, которые должны быть запущены до
того, как домашний каталог пользователя станет доступным.
Этот файл должен быть доступен только для записи пользователю и не должен быть
доступен для чтения кому-либо еще.
.Pp
.It Pa /etc/hosts.allow
.It Pa /etc/hosts.deny
Элементы управления доступом, которые должны быть реализованы с помощью tcp-оболочек, определены здесь.
Более подробная информация описана в
.Xr hosts_access 5 .
.Pp
.It Pa /etc/hosts.equiv
Этот файл предназначен для проверки подлинности на основе хоста (смотрите
.Xr ssh 1 ) .
Он должен быть доступен для записи только пользователю root.
.Pp
.It Pa /etc/moduli
Содержит группы Диффи-Хеллмана, используемые для метода обмена ключами "обмен группами Диффи-Хеллмана".
Формат файла описан в
.Xr moduli 5 .
Если в этом файле не найдено доступных групп, то будут использоваться фиксированные внутренние группы.
.Pp
.It Pa /etc/motd
Смотрите
.Xr motd 5 .
.Pp
.It Pa /etc/nologin
Если этот файл существует,
.Nm
не позволяет входить в систему никому, кроме пользователя root.
Содержимое файла
отображается всем, кто пытается войти в систему, затем подключения, не связанные с root, отклоняются.
Файл должен быть доступен для чтения всему миру.
.Pp
.It Pa /etc/shosts.equiv
Этот файл используется точно так же, как
.Pa hosts.equiv ,
но допускает аутентификацию на основе хоста без разрешения входа в систему с
помощью rlogin/rsh.
.Pp
.It Pa /etc/ssh/ssh_host_ecdsa_key
.It Pa /etc/ssh/ssh_host_ed25519_key
.It Pa /etc/ssh/ssh_host_rsa_key
Эти файлы содержат закрытые части ключей хоста.
Эти файлы должны принадлежать только пользователю root, быть доступны для чтения только пользователю root и
недоступны для других пользователей.
Обратите внимание, что
.Nm
не запускается, если эти файлы доступны для группы или всего мира.
.Pp
.It Pa /etc/ssh/ssh_host_ecdsa_key.pub
.It Pa /etc/ssh/ssh_host_ed25519_key.pub
.It Pa /etc/ssh/ssh_host_rsa_key.pub
Эти файлы содержат открытые части ключей хоста.
Эти файлы должны быть доступны для чтения всему миру, но доступны для записи только пользователю
root.
Их содержимое должно соответствовать соответствующим закрытым частям.
Эти файлы
на самом деле ни для чего не используются; они предоставлены для удобства
пользователя, чтобы их содержимое можно было скопировано в файлы известных хостов.
Эти файлы созданы с помощью
.Xr ssh-keygen 1 .
.Pp
.It Pa /etc/ssh/ssh_known_hosts
Общесистемный список известных ключей хоста.
Системный администратор должен подготовить этот файл, содержащий общедоступные ключи хоста для всех компьютеров в
организации.
Формат этого файла описан выше.
Этот файл должен быть доступен для записи только root и владельцу и
доступен для чтения всему миру.
.Pp
.It Pa /etc/ssh/sshd_config
Содержит конфигурационные данные для
.Nm sshd .
Формат файла и параметры конфигурации описаны в
.Xr sshd_config 5 .
.Pp
.It Pa /etc/ssh/sshrc
Похожий на
.Pa ~/.ssh/rc ,
он может использоваться для
специфичной для данного компьютера инициализации при входе в систему.
Этот файл должен быть доступен для записи только пользователю root и доступен для чтения всему миру.
.Pp
.It Pa /var/empty
Каталог
.Xr chroot 2 , 
используемый
.Nm
во время разделения привилегий на этапе предварительной аутентификации.
Каталог не должен содержать никаких файлов и должен принадлежать пользователю root
и не должен быть доступен для записи группе или миру.
.Pp
.It Pa /var/run/sshd.pid
Содержит ID процесса
.Nm ,
прослушивающего соединения (если есть несколько демонов, запущенных
одновременно для разных портов, здесь содержится идентификатор процесса,
запущенного последним).
Содержимое этого файла не является конфиденциальным; оно может быть доступно для чтения всему миру.
.El
.Sh СМОТРИТЕ ТАКЖЕ
.Xr scp 1 ,
.Xr sftp 1 ,
.Xr ssh 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr ssh-keygen 1 ,
.Xr ssh-keyscan 1 ,
.Xr chroot 2 ,
.Xr hosts_access 5 ,
.Xr login.conf 5 ,
.Xr moduli 5 ,
.Xr sshd_config 5 ,
.Xr inetd 8 ,
.Xr sftp-server 8
.Sh АВТОРЫ
OpenSSH является производной от оригинальной и бесплатной
версии ssh 1.2.12 от Tatu Ylonen.
Аарон Кэмпбелл, Боб Бек, Маркус Фридл, Нильс Провос,
Тео де Раадт и Дуг Сонг
устранили множество ошибок, добавили новые функции и
создали OpenSSH.
Маркус Фридл внес свой вклад в поддержку
протоколов SSH версий 1.5 и 2.0.
Нильс Провос и Маркус Фридл внесли
свой вклад в поддержку разделения привилегий.
