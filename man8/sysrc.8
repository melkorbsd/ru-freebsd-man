.\" Copyright (c) 2011-2016 Devin Teske
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 3, 2022
.Dt SYSRC 8
.Os
.Sh ИМЯ
.Nm sysrc
.Nd безопасное редактирование системных rc-файлов
.Sh КРАТКИЙ ОБЗОР
.Nm
.Op Fl cdDeEFhinNqvx
.Op Fl s Ar name
.Op Fl f Ar file
.Op Fl j Ar jail | Fl R Ar dir
.Ar name Ns Op Ns Oo +|- Oc Ns = Ns Ar value
.Ar ...
.Nm
.Op Fl cdDeEFhinNqvx
.Op Fl s Ar name
.Op Fl f Ar file
.Op Fl j Ar jail | Fl R Ar dir
.Fl a | A
.Nm
.Op Fl E
.Op Fl s Ar name
.Op Fl f Ar file
.Fl l
.Nm
.Op Fl eEqv
.Fl L
.Op Ar name ...
.Sh ОПИСАНИЕ
.Nm
утилита извлекает
.Xr rc.conf 5
переменные из коллекции системных rc-файлов и позволяет процессам с
соответствующими привилегиями изменять значения безопасным и эффективным способом.
.Pp
Доступны следующие параметры:
.Bl -tag -width indent+
.It Fl a
Выводит список всех переменных конфигурации, не используемых по умолчанию.
.It Fl A
Выводит список всех конфигурационных переменных
.Pq включая значения по умолчанию .
.It Fl c
Только проверка.
Для запроса возвращает значение success, если заданы все запрошенные переменные
.Pq даже если значение равно НУЛЮ ,
в противном случае возвращает статус ошибки.
Для назначений возвращает значение success, если изменения не требуются, в противном случае - failure.
Если подробный
.Pq see Dq Fl v
выводит сообщение о том, установлены ли переменные и/или требуются ли изменения.
.It Fl d
Выводит описание данной переменной.
.It Fl D
Показывает только значения по умолчанию (это то же самое, что присвоить RC_CONFS значение NULL или
передать `-f' с нулевым файловым аргументом).
.It Fl e
Выводит результаты запроса в виде
.Xr sh 1
совместимого синтаксиса,
.Pq например, Ql var=value .
Игнорируется, если
.Ql Fl n
или
.Ql Fl F
указывается.
.It Fl E
Когда дается
.Sq Fl l
или
.Sq Fl L
чтобы отобразить список файлов конфигурации, указываются только те, которые существуют.
При изменении настроек предпочительнее изменять существующие файлы.
.It Fl f Ar file
Работает с указанными файлами вместо файлов, полученных при чтении
.Sq rc_conf_files
записи в
.Ev RC_DEFAULTS
файле.
Этот параметр может быть указан несколько раз для дополнительных файлов.
.It Fl F
Показывает только последний
.Xr rc.conf 5
файл, в котором находится каждая директива.
.It Fl h
Печатает короткое  описание использования в stderr и завершает работу.
.It Fl -help
Печатает полное описание использования в stderr и завершает работу.
.It Fl i
Игнорирует неизвестные переменные.
.It Fl j Ar jail
.Ar jid
или название
.Ar jail
будет действовать в пределах
.Pq переопределяет So Fl R Ar dir Sc ; требует Xr jexec 8 .
.It Fl l
Перечисляет конфигурационные файлы, используемые при запуске в стандартном режиме вывода и при выходе.
.It Fl L
Выводит список всех конфигурационных файлов, включая записи rc.conf.d в стандартном режиме вывода и exit.
Может сочетаться с
.Sq Fl v
или
.Sq Fl e
чтобы отображать названия служб.
.Nm
завершается успешно, если установлены все названные службы, в противном случае происходит сбой.
.It Fl n
Отображает только значения переменных, а не их имена.
.It Fl N
Отображает только имена переменных, а не их значения.
.It Fl q
Бесшумный.
Отключает детализацию и скрывает некоторые ошибки.
В сочетании с
.Sq Fl L
и одним или несколькими
.Ar name
аргументами, укажет только статус выхода и никаких выходных данных.
.It Fl R Ar dir
Работает в корневом каталоге
.Sq Ar dir
вместо
.Sq / .
.It Fl s Ar name
Если бы
.Li rc.d
скрипт с таким
.Ar name
существовал
.Po
в
.Dq /etc/rc.d
или
.Li local_startup
каталогах
.Pc ,
обрабатывает его
.Dq rc.conf.d
записи в качестве потенциальных заменителей для
.Sq rc_conf_files .
Смотрите
.Xr rc.subr 8
для получения дополнительной информации о
.Dq rc.conf.d .
Может сочетаться с
.Sq Fl l ,
чтобы отобразить список конфигурационных файлов, используемых службой при запуске.
.It Fl v
Подробный.
Выводит путь к конкретному
.Xr rc.conf 5
файлу, в котором была найдена директива.
.It Fl -version
Выводит информацию о версии для стандартного вывода и завершает работу.
.It Fl x
Удаляет переменную(ые) из указанного файла(ов).
.El
.Pp
Эта утилита имеет синтаксис, аналогичный
.Xr sysctl 8 .
Он использует опции `-e" и `-n" совместно
.Pq подробно описано выше
и также имеет тот же самый
.Ql name[=value]
синтаксис для выполнения запросов/назначений.
В дополнение
.Pq но в отличие от Xr sysctl 8 ,
.Ql name+=value
поддерживается добавление элементов к значениям
.Pq смотрите СЛОЖЕНИЕ ЗНАЧЕНИЙ
и
.Ql name-=value
поддерживается удаление элементов из значений
.Pq смотрите ВЫЧИТАНИЕ ЗНАЧЕНИЙ .
.Pp
Однако, в то время как
.Xr sysctl 8
служит для запроса/изменения MIB-файлов в ядре entrant,
.Nm
вместо этого работает со значениями в системе
.Xr rc.conf 5
конфигурационных файлов.
.Pp
Список файлов конфигурации системы настраивается в файле
.Ql /etc/defaults/rc.conf
внутри переменной
.Ql rc_conf_files ,
которая по умолчанию содержит список путей, разделенных пробелами.
На всех
.Fx
системах по умолчанию используется значение "/etc/rc.conf /etc/rc.conf.local".
Каждое
имя пути задается по порядку при запуске.
Это происходит таким же образом, что
.Nm
создает исходные файлы конфигурации перед возвратом значения данной
переменной.
.Pp
Если указано имя переменной,
.Nm
вернет значение переменной.
Если переменная не отображается ни в одном
из настроенных
.Ql rc_conf_files ,
выводится сообщение об ошибке и возвращается статус ошибки.
.Pp
При изменении значения данной переменной, не имеет значения появляется ли эта переменная
в каком-либо из
.Ql rc_conf_files
или нет.
Если переменная не появляется ни в одном из файлов, она добавляется в
конец первого пути
.Ql rc_conf_files
переменной.
Иначе,
.Nm
заменит только последнее вхождение в последнем найденном файле, содержащем
переменную.
Это позволяет получить значение, которое вступит в силу при следующей загрузке без существенного
изменения этих целых файлов (тем не менее, следует позаботиться о том, чтобы файл не
стал громоздким
.Nm
вызывается повторно).
.Sh СЛОЖЕНИЕ ЗНАЧЕНИЙ
При использовании
.Ql key+=value
синтаксиса для добавления элементов к существующим значениям
в качестве разделителя между элементами используется первый символ значения
.Pq обычно Qo " " Qc или Qo , Qc .
Например, в следующем заявлении:
.Bl -item -offset indent
.It
.Nm
cloned_interfaces+=" gif0"
.El
.Pp
первый символ - это пробел, сообщающий
.Nm ,
что существующие значения следует рассматривать как разделенные пробелом.
Если
.Ql gif0
не найден в существующем значении для
.Va cloned_interfaces ,
он добавляется
.Pq с разделителем только в том случае, если существующее значение не является нулевым .
.Pp
Для удобства, если первый символ является буквенно-цифровым
.Pq буквы A-Z, a-z, или цифры 0-9 ,
точка
.Pq Li \&. ,
или слэш
.Pq Li / ,
.Nm
использует значение пробела по умолчанию в качестве разделителя.
Например, приведенные выше и ниже инструкции эквивалентны, поскольку
.Dq gif0
начинается с буквенно-цифрового символа
.Pq буква Li g :
.Bl -item -offset indent
.It
.Nm
cloned_interfaces+=gif0
.El
.Pp
Возьмем, к примеру, следующую последовательность действий:
.Bl -item -offset indent
.It
.Nm
cloned_interfaces= # start with NULL
.It
.Nm
cloned_interfaces+=gif0
.Dl # NULL -> `gif0' Pq NB: no preceding delimiter
.It
.Nm
cloned_interfaces+=gif0 # no change
.It
.Nm
cloned_interfaces+="tun0 gif0"
.Dl # `gif0' -> `gif0 tun0' Pq NB: no duplication
.El
.Pp
.Nm
предотвращает добавление того же значения, если оно уже существует.
.Sh ВЫЧИТАНИЕ ЗНАЧЕНИЙ
При использовании
.Ql key-=value
синтаксиса для удаления элементов из существующих значений
в качестве разделителя между элементами используется первый символ значения
.Pq обычно Qo " " Qc или Qo , Qc .
Например, в следующем выражении:
.Pp
.Dl Nm cloned_interfaces-=" gif0"
.Pp
первый символ - это пробел, сообщающий
.Nm
что существующие значения следует рассматривать как разделенные пробелом.
Если
.Ql gif0
находится в существующем значении для
.Va cloned_interfaces ,
он удаляется
.Pq удаляются лишние разделители .
.Pp
Для удобства, если первый символ является буквенно-цифровым
.Pq буквы A-Z, a-z, или цифры 0-9 ,
точка
.Pq Li \&. ,
или слэш
.Pq Li / ,
.Nm
использует значение пробела по умолчанию в качестве разделителя.
Например, приведенные выше и ниже инструкции эквивалентны, поскольку
.Dq gif0
начинается с буквенно-цифрового символа
.Pq буквы Li g :
.Bl -item -offset indent
.It
.Nm
cloned_interfaces-=gif0
.El
.Pp
Возьмем, к примеру, следующую последовательность действий:
.Bl -item -offset indent
.It
.Nm
foo="bar baz" # start
.It
.Nm
foo-=bar # `bar baz' -> `baz'
.It
.Nm
foo-=baz # `baz' -> NULL
.El
.Pp
.Nm
удаляет все вхождения всех предоставленных элементов и удаляет дополнительные разделители между элементами.
.Sh ОКРУЖЕНИЕ
На следующие переменные среды ссылаются
.Nm :
.Bl -tag -width ".Ev RC_DEFAULTS"
.It Ev RC_CONFS
Переопределить значение по умолчанию
.Ql rc_conf_files
.Pq даже если установлено значение NULL .
.It Ev RC_DEFAULTS
Местонахождение
.Ql /etc/defaults/rc.conf
файла.
.El
.Sh ЗАВИСИМОСТИ
Для этого требуются следующие стандартные команды
.Nm :
.Pp
.Xr awk 1 ,
.Xr cat 1 ,
.Xr chmod 1 ,
.Xr env 1 ,
.Xr grep 1 ,
.Xr mktemp 1 ,
.Xr mv 1 ,
.Xr rm 1 ,
.Xr sh 1 ,
.Xr stat 1 ,
.Xr tail 1 ,
.Xr chown 8 ,
.Xr chroot 8 ,
.Xr jls 8 ,
and
.Xr jexec 8 .
.Sh ФАЙЛЫ
.Bl -tag -width ".Pa /etc/defaults/rc.conf" -compact
.It Pa /etc/defaults/rc.conf
.It Pa /etc/rc.conf
.It Pa /etc/rc.conf.local
.It Pa /etc/rc.conf.d/name
.It Pa /etc/rc.conf.d/name/*
.It Pa /usr/local/etc/rc.conf.d/name
.It Pa /usr/local/etc/rc.conf.d/name/*
.El
.Sh ПРИМЕРЫ
Ниже приведены несколько простых примеров того, как
.Nm
может использоваться для запроса определенных значений из
.Xr rc.conf 5
коллекции файлов конфигурации системы:
.Pp
.Nm
sshd_enable
.Dl возвращает значение $sshd_enable, обычно YES или NO .
.Pp
.Nm
defaultrouter
.Dl возвращает IP-адрес маршрутизатора по умолчанию Pq если настроен .
.Pp
Работа с другими файлами, такими как
.Xr crontab 5 :
.Pp
.Nm
-f /etc/crontab MAILTO
.Dl возвращает значение параметра MAILTO Pq если настроен .
.Pp
Добавление к существующим значениям:
.Pp
.Nm
\&cloned_interfaces+=gif0
.Dl добавляет Qo gif0 Qc к $cloned_interfaces Pq смотрите СЛОЖЕНИЕ ЗНАЧЕНИЙ .
.Pp
.Nm
\&cloned_interfaces-=gif0
.Dl удаляет Qo gif0 Qc из $cloned_interfaces Pq смотрите ВЫЧИТАНИЕ ЗНАЧЕНИЙ .
.Pp
В дополнение к приведенному выше синтаксису,
.Nm
также поддерживает встроенное
.Xr sh 1
расширение параметров для изменения способа представления значений, показанное ниже:
.Pp
.Nm
\&'hostname%%.*'
.Dl возвращает $hostname вплоть до (но не включая) первой `.' .
.Pp
.Nm
\&'network_interfaces%%[$IFS]*'
.Dl возвращает первое слово из $network_interfaces .
.Pp
.Nm
\&'ntpdate_flags##*[$IFS]'
.Dl возвращает последнее слово из $ntpdate_flags (адрес сервера времени) .
.Pp
.Nm
usbd_flags-"default"
.Dl возвращает $usbd_flags или "по умолчанию" если значение не задано или равно нулю .
.Pp
.Nm
cloned_interfaces+"alternate"
.Dl возвращает "alternate" если $cloned_interfaces установлен .
.Sh СМОТРИТЕ ТАКЖЕ
.Xr rc.conf 5 ,
.Xr jail 8 ,
.Xr jexec 8 ,
.Xr jls 8 ,
.Xr rc 8 ,
.Xr rc.subr 8 ,
.Xr sysctl 8
.Sh ИСТОРИЯ
.Nm
утилита впервые появилась в
.Fx 9.2 .
.Sh АВТОРЫ
.An Девин Теске Aq Mt dteske@FreeBSD.org
.Sh БЛАГОДАРНОСТЬ
Брэндон Гуч, Энджи Купер, Джулиан Элишер, Павел Якуб Давидек,
Сирил Лефевр, Росс Уэст, Стефан Эссер, Марко Стейнбах, Жиль Тьелкер.,
Аллану Джуду и Ларсу Энгельсу за предложения, помощь и тестирование.
