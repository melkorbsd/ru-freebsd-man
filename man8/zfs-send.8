.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or https://opensource.org/licenses/CDDL-1.0.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright (c) 2009 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 2011 Joshua M. Clulow <josh@sysmgr.org>
.\" Copyright (c) 2011, 2019 by Delphix. All rights reserved.
.\" Copyright (c) 2013 by Saso Kiselkov. All rights reserved.
.\" Copyright (c) 2014, Joyent, Inc. All rights reserved.
.\" Copyright (c) 2014 by Adam Stevko. All rights reserved.
.\" Copyright (c) 2014 Integros [integros.com]
.\" Copyright 2019 Richard Laager. All rights reserved.
.\" Copyright 2018 Nexenta Systems, Inc.
.\" Copyright 2019 Joyent, Inc.
.\"
.Dd July 27, 2023
.Dt ZFS-SEND 8
.Os
.
.Sh ИМЯ
.Nm zfs-send
.Nd генерирует поток резервных копий набора данных ZFS
.Sh СИНТАКСИС
.Nm zfs
.Cm send
.Op Fl DLPVbcehnpsvw
.Op Fl R Op Fl X Ar dataset Ns Oo , Ns Ar dataset Oc Ns …
.Op Oo Fl I Ns | Ns Fl i Oc Ar snapshot
.Ar snapshot
.Nm zfs
.Cm send
.Op Fl DLPVcensvw
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot
.Nm zfs
.Cm send
.Fl -redact Ar redaction_bookmark
.Op Fl DLPVcenpv
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar snapshot
.Nm zfs
.Cm send
.Op Fl PVenv
.Fl t
.Ar receive_resume_token
.Nm zfs
.Cm send
.Op Fl PVnv
.Fl S Ar filesystem
.Nm zfs
.Cm redact
.Ar snapshot redaction_bookmark
.Ar redaction_snapshot Ns …
.
.Sh ОПИСАНИЕ
.Bl -tag -width ""
.It Xo
.Nm zfs
.Cm send
.Op Fl DLPVbcehnpsvw
.Op Fl R Op Fl X Ar dataset Ns Oo , Ns Ar dataset Oc Ns …
.Op Oo Fl I Ns | Ns Fl i Oc Ar snapshot
.Ar snapshot
.Xc
Создает потоковое представление второго
.Ar снапшот ,
который записывается в стандартный вывод.
Вывод может быть перенаправлен в файл или в другую систему
.Po например, используя
.Xr ssh 1
.Pc .
По умолчанию генерируется полный поток.
.Bl -tag -width "-D"
.It Fl D , -dedup
Дедуплицированная отправка больше не поддерживается.
Этот флаг используется для обеспечения обратной совместимости, но будет создан обычный,
не дедуплицированный поток.
.It Fl I Ar snapshot
Создаёт потоковый пакет, который отправляет все промежуточные снимки из первого снапшота во второй.
Например,
.Fl I Em @a Em fs@d
похож на
.Fl i Em @a Em fs@b Ns \&; Fl i Em @b Em fs@c Ns \&; Fl i Em @c Em fs@d .
Добавочный источник может быть указан с помощью параметра
.Fl i .
.It Fl L , -large-block
Генерирует поток, который может содержать блоки размером более 128 КБ.
Этот флаг не действует, если функция пула
.Sy large_blocks
отключена, или если свойство
.Sy recordsize
этой файловой системы никогда не превышал 128 КБ.
Принимающая система должна также имень включенную функцию пула 
.Sy large_blocks .
Смотрите
.Xr zpool-features 7
для получения подробной информации о флагах функций ZFS и функции
.Sy large_blocks .
.It Fl P , -parsable
Выводит поддающуюся машинному анализу подробную информацию о сгенерированном потоковом пакете.
.It Fl R , -replicate
Генерирует потоковый пакет репликации, который будет реплицировать указанную
файловую систему и все дочерние файловые системы вплоть до именованного снапшота.
При получении все свойства, снапшоты, дочерние файловые системы и клоны
сохраняются.
.Pp
Если флаги
.Fl i
или
.Fl I
используются в сочетании с флагом
.Fl R ,
генерируется поток добавочной репликации.
При получении потока устанавливаются текущие значения свойств, а также имена текущего моментального снимка и файловой системы.
Если флаг
.Fl F
указан при получении этого потока, снапшоты и файловые системы, которые
не существуют на стороне отправителя, уничтожаются.
Если флаг
.Fl R
используется для отправки зашифрованных наборов данных, затем
.Fl w
также должен быть указан.
.It Fl V , -proctitle
Устанавливает для заголовка процесса значение ежесекундный отчет о том, сколько данных было отправлено.
.It Fl X , -exclude Ar dataset Ns Oo , Ns Ar dataset Oc Ns …
.Fl R ,
.Fl X
определяет набор наборов данных (и, следовательно, их потомки),
который будет исключен из потока отправки.
Корневой набор данных может быть не исключен.
.Fl X Ar a Fl X Ar b
эквивалентно
.Fl X Ar a , Ns Ar b .
.It Fl e , -embed
Создаёт более компактный поток, используя записи
.Sy WRITE_EMBEDDED
для блоков, которые хранятся на диске в более компактном виде с помощью функции пула
.Sy embedded_data .
Этот флаг не действует, если функция
.Sy embedded_data
отключена.
Принимающая система должна иметь включенную функцию
.Sy embedded_data .
Если функция
.Sy lz4_compress
активна в отправляющей системе, то в принимающей системе также должна быть
включена эта функция.
Наборы данных, отправленные с этим флагом, могут не быть
получены в зашифрованном виде, поскольку в зашифрованных наборах данных нельзя использовать функцию
.Sy embedded_data .
Смотрите
.Xr zpool-features 7
для получения подробной информации о флагах функций ZFS и функции
.Sy embedded_data .
.It Fl b , -backup
Отправляет только полученные значения свойств, будь переопределены они локальными
настройками или нет, но только если набор данных когда-либо был получен.
Используйте этот параметр, когда захотите, чтобы
.Nm zfs Cm receive
восстановил полученные свойства, скопированные из отправленного набора данных, и избежать
отправки локальных настроек, которые могут не иметь ничего общего с исходным набором данных,
а только с тем, как выполняется резервное копирование данных.
.It Fl c , -compressed
Созд`n` более компактный поток, используя сжатые записи WRITE для блоков,
которые сжимаются на диске и в памяти
.Po смотрите свойство
.Sy compression
для получения более подробной информации
.Pc .
Если функция
.Sy lz4_compress
активна в отправляющей системе, то в принимающей системе также должна быть
включена эта функция.
Если функция
.Sy large_blocks
включена в отправляющей системе, но параметр
.Fl L
не поставляется в комплекте с
.Fl c ,
тогда данные будут распакованы перед отправкой, чтобы их можно было разделить на
блоки меньшего размера.
Потоки, отправленные с
.Fl c
не будут повторно сжиматься их данные на стороне получателя с помощью
.Fl o Sy compress Ns = Ar value .
Данные останутся сжатыми в том виде, в каком они были получены от отправителя.
Для будущих данных будет установлено новое свойство сжатия.
Обратите внимание, что несжатые данные от отправителя по-прежнему будут пытаться
сжать в получателе, если вы не укажете
.Fl o Sy compress Ns = Em off .
.It Fl w , -raw
Для зашифрованных наборов данных отправляйте данные в том виде, в каком они есть на диске.
Это позволяет создавать резервные копии, даже если ключи шифрования в данный момент не
загружены.
В этом случае резервная копия может быть получена на ненадежном компьютере, поскольку у этого компьютера
не будет ключей шифрования для чтения защищенных данных или их изменения без
обнаружения.
После получения набор данных будет иметь те же
ключи шифрования, что и при отправке, хотя значение свойства
.Sy keylocation
по умолчанию будет
.Sy prompt ,
если не предусмотрено иное.
Для незашифрованных наборов данных этот флаг будет эквивалентен
.Fl Lec .
Обратите внимание, что если вы не используете этот флажок для отправки зашифрованных наборов данных, данные будут
отправляться в незашифрованном виде и могут быть повторно зашифрованы с помощью другого ключа шифрования в
принимающей системе, что отключит возможность отправки необработанных данных в эту
систему для увеличения.
.It Fl h , -holds
Генерирует потоковый пакет, который включает в себя все хранилища снапшотов (созданные с помощью команды
.Nm zfs Cm hold
), и указывающий на
.Nm zfs Cm receive ,
чтобы удержания были применены к набору данных в принимающей системе.
.It Fl i Ar snapshot
Генерирует добавочный поток с первого
.Ar спаншота
.Pq дополнительный источник
ко второму
.Ar снапшоту
.Pq инкрементальный целевой объект .
Добавочный источник может быть указан в качестве последнего компонента имени снапшота
.Po символ
.Sy @
и следующие за ним
.Pc
и предполагается, что он находится в той же файловой системе, что и инкрементальный целевой объект.
.Pp
Если конечным объектом является клон, источником может быть исходный снапшот, который должен
быть указан полностью
.Po например,
.Em pool/fs@origin ,
не просто
.Em @origin
.Pc .
.It Fl n , -dryrun
Выполняет пробную отправку
.Pq Qq No-op .
Не генерирует никаких фактических данных для отправки.
Это полезно в сочетании с флагами
.Fl v
или
.Fl P ,
определяющими, какие данные будут отправлены.
В этом случае подробный вывод будет записан в стандартный вывод
.Po в отличие от простого запуска, когда поток записывается в стандартный вывод, подробный вывод преобразуется в стандартный вывод ошибок
.Pc .
.It Fl p , -props
Включает свойства набора данных в поток.
Этот флаг неявно используется, когда указан
.Fl R .
Принимающая система также должна поддерживать эту функцию.
При отправке зашифрованных наборов данных необходимо использовать
.Fl w
при использовании этого флага.
.It Fl s , -skip-missing
Позволяет отправлять поток репликации даже в том случае, если в иерархии отсутствуют снапшоты.
Когда снапшот отсутствует, вместо выдачи сообщения об ошибке и прерывания отправки
в стандартный поток ошибок выводится предупреждение, а набор данных, к которому он
относится, и его потомки пропускаются.
Этот флаг можно использовать только в сочетании с
.Fl R .
.It Fl v , -verbose
Выводит подробную информацию о сгенерированном потоковом пакете.
Эта информация включает в себя ежесекундный отчет о том, сколько данных было отправлено.
Такой же отчет можно запросить, отправив
.Dv SIGINFO
или
.Dv SIGUSR1 ,
независимо от
.Fl v .
.Pp
Формат потока определен.
Вы сможете получать свои потоки в будущих версиях ZFS.
.El
.It Xo
.Nm zfs
.Cm send
.Op Fl DLPVcenvw
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar filesystem Ns | Ns Ar volume Ns | Ns Ar snapshot
.Xc
Генерирует поток отправки, который может относиться к файловой системе и может быть добавочным
из закладки.
Если адресатом является файловая система или том, пул должен быть доступен только для чтения, или
файловая система не должна быть подключена.
При получении потока, сгенерированного из файловой системы или тома, имя снапшота по умолчанию будет
.Qq --head-- .
.Bl -tag -width "-D"
.It Fl D , -dedup
Дедуплицированная отправка больше не поддерживается.
Этот флаг используется для обеспечения обратной совместимости, но будет создан обычный,
не дедуплицированный поток.
.It Fl L , -large-block
Генерирует поток, который может содержать блоки размером более 128 КБ.
Этот флажок не действует, если функция пула
.Sy large_blocks
отключена, или если размер файловой системы
.Sy recordsize
никогда не превышал 128 КБ.
Принимающая система должна также иметь включенную функцию пула
.Sy large_blocks .
Смотрите
.Xr zpool-features 7
для получения подробной информации о флагах функций ZFS и финкции
.Sy large_blocks .
.It Fl P , -parsable
Выдает подробную информацию о сгенерированном потоковом пакете, поддающуюся машинному анализу.
.It Fl c , -compressed
Создайте более компактный поток, используя сжатые записи WRITE для блоков,
которые сжимаются на диске и в памяти
.Po смотрите свойство
.Sy compression
для получения подробной информации
.Pc .
Если функция
.Sy lz4_compress
активна в отправляющей системе, то в принимающей системе также должна быть
включена эта функция.
Если функция
.Sy large_blocks
включена в отправляющей системе, но параметр
.Fl L
не поставляется в комплекте с
.Fl c ,
тогда данные будут распакованы перед отправкой, чтобы их можно было разделить на
блоки меньшего размера.
.It Fl w , -raw
Для зашифрованных наборов данных отправляйте данные в том виде, в каком они есть на диске.
Это позволяет создавать резервные копии, даже если ключи шифрования в данный момент не
загружены.
В этом случае резервная копия может быть получена на ненадежном компьютере, поскольку у этого компьютера
не будет ключей шифрования для чтения защищенных данных или их изменения без
обнаружения.
После получения набор данных будет иметь те же
ключи шифрования, что и при отправке, хотя значение свойства
.Sy keylocation
по умолчанию будет
.Sy prompt ,
если не предусмотрено иное.
Для незашифрованных наборов данных этот флаг будет эквивалентен
.Fl Lec .
Обратите внимание, что если вы не используете этот флажок для отправки зашифрованных наборов данных, данные будут
отправляться в незашифрованном виде и могут быть повторно зашифрованы с помощью другого ключа шифрования в
принимающей системе, что отключит возможность отправки необработанных данных в эту
систему для увеличения.
.It Fl e , -embed
Создёт более компактный поток используя записи
.Sy WRITE_EMBEDDED
для блоков, которые более компактно хранятся на диске с помощью функции пула
.Sy embedded_data .
Этот флаг не действует, если функция
.Sy embedded_data
отключена.
Принимающая система должна иметь включенную функцию
.Sy embedded_data .
Если функция
.Sy lz4_compress
активна в отправляющей системе, тогда в принимающей системе также должна быть
включена эта функция.
Наборы данных, отправленные с этим флагом, могут быть получены не в зашифрованном виде, поскольку зашифрованные наборы данных не могут использовать функцию
.Sy embedded_data .
Смотрите
.Xr zpool-features 7
для получения подробной информации о флагах функций ZFS и функции
.Sy embedded_data .
.It Fl i Ar snapshot Ns | Ns Ar bookmark
Генерирует инкрементный поток отправки.
Источником инкремента должен быть более ранний снапшот в истории получателя.
Обычно это будет более ранний снапшот в файловой системе получателя, и в
этом случае он может быть указан как последний компонент имени
.Po символ
.Sy #
или
.Sy @
и следующие
.Pc .
.Pp
Если инкрементным целевым объектом является клон, то инкрементным источником может быть исходный
снапшот, или более ранний снапшот в файловой системе источника, или
исходный файл источника и т.д.
.It Fl n , -dryrun
Выполняет пробную отправку
.Pq Qq No-op .
Не генерирует никаких фактических данных для отправки.
Это полезно в сочетании с флагами
.Fl v
или
.Fl P ,
определяющими, какие данные будут отправлены.
В этом случае подробный вывод будет записан в стандартный вывод
.Po в отличие от простого запуска, когда поток записывается в стандартный вывод, подробный вывод преобразуется в стандартный вывод ошибок
.Pc .
.It Fl v , -verbose
Выводит подробную информацию о сгенерированном потоковом пакете.
Эта информация включает в себя ежесекундный отчет о том, сколько данных было отправлено.
Такой же отчет можно запросить, отправив
.Dv SIGINFO
или
.Dv SIGUSR1 ,
независимо от
.Fl v .
.El
.It Xo
.Nm zfs
.Cm send
.Fl -redact Ar redaction_bookmark
.Op Fl DLPVcenpv
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Ar snapshot
.Xc
Генерирует отредактированный поток отправки.
Этот поток отправки содержит все блоки из отправляемого снапшота, которые не
включены в список редактирования, содержащийся в закладке, указанной флагом
.Fl -redact
(или
.Fl d ).
Считается, что результирующий поток отправки отредактирован в отношении снимков, с помощью которых была создана закладка, указанная флагом
.Fl -redact No .
Закладка должна быть создана с помощью запуска
.Nm zfs Cm redact
на отправляемом снапшоте.
.Pp
Эта функция может быть использована для того, чтобы сделать доступными клоны файловой системы на
удаленной системе в случае, когда их родительская система не нужна (или не нуждается в том, чтобы ее можно было
использовать).
Например, если файловая система содержит конфиденциальные данные и у нее есть клоны, в которых
эти конфиденциальные данные были защищены или заменены фиктивными данными,
можно использовать отредактированные сообщения для репликации защищенных данных без репликации исходных
конфиденциальных данных, при этом все возможные блоки будут разделены.
Моментальный снимок, который был отредактирован относительно набора моментальных снимков, будет
содержать все блоки, на которые ссылается хотя бы один моментальный снимок в наборе, но не будет
содержать ни одного из блоков, на которые не ссылается ни один из моментальных снимков в наборе.
Другими словами, если все снимки в наборе изменили данный блок в
родительском файле, этот блок не будет отправлен; но если один или несколько снимков не
изменили блок в родительском файле, они все равно будут ссылаться на родительский блок, так
что этот блок будет отправлен.
Обратите внимание, что будут отредактированы только пользовательские данные.
.Pp
Когда отредактированный поток отправки будет получен, мы создадим отредактированный
снапшот.
Из-за особенностей редактирования отредактированный набор данных можно использовать только
следующими способами:
.Bl -enum -width "a."
.It
Чтобы получить в качестве клона добавочную отправку из исходного снапшота в один
из тех снимков, в отношении которых он был отредактирован.
В этом случае поток при получении выдаст корректный набор данных, поскольку все
блоки, которые были отредактированы в родительском файле, гарантированно будут присутствовать в
потоке отправки дочернего файла.
В этом случае будет создан обычный снапшот, который можно использовать так же, как и другие снапшоты.
.
.It
Чтобы получить добавочную отправку от исходного снапшота к чему-либо,
отредактированному по отношению к подмножеству набора снапшотов, по отношению к которым был отредактирован исходный снапшот.
В этом случае каждый блок, который был отредактирован в оригинале, по-прежнему отредактирован
(редактирование дополнительных снапшотов приводит к тому, что редактируется меньше данных
(поскольку снапшоты определяют, что разрешено, а все остальное
редактируется)).
В этом случае будет создан новый отредактированный снапшот.
.It
Чтобы получить добавочную отправку из закладки редактирования исходного
снапшота, который был создан при редактировании по отношению к подмножеству набора
снапшотов, исходный снапшот был создан по отношению ко
всему остальному.
Поток отправки из такой закладки редактирования будет содержать все блоки,
необходимые для заполнения любых отредактированных данных, если это потребуется, поскольку отправляющая
система знает, какие блоки были первоначально отредактированы.
Это приведет либо к созданию обычного снапшота, либо к его редактированию, в зависимости от
того, будет ли отредактирован новый поток отправки.
.It
Чтобы получить добавочную отправку из отредактированной версии исходного
снапшота, которая отредактирована в отношении объекта из набора снапшотов, для которого был создан исходный снапшот.
Поток отправки из совместимого отредактированного набора данных будет содержать все блоки,
необходимые для заполнения любых отредактированных данных.
В результате будет создан либо обычный снапшот, либо отредактированный, в зависимости от
того, был ли отредактирован новый поток отправки.
.It
Чтобы получить полную отправку в виде клона отредактированного снапшота.
Поскольку поток является полной отправкой, он по определению содержит все данные, необходимые
для создания нового набора данных.
В этом случае будет создан либо обычный снапшот, либо отредактированный, в зависимости
от того, был ли отредактирован полный поток отправки.
.El
.Pp
Эти ограничения обнаруживаются и применяются с помощью
.Nm zfs Cm receive ;
отредактированный поток отправки будет содержать список снапшотов, в отношении которых поток был
отредактирован.
Они сохраняются вместе с отредактированным снапшотом и используются для обнаружения и
корректной обработки описанных выше случаев.
Обратите внимание, что по техническим причинам
необработанные и отредактированные отправки в данный момент не могут быть объединены.
.It Xo
.Nm zfs
.Cm send
.Op Fl PVenv
.Fl t
.Ar receive_resume_token
.Xc
Создает поток отправки, который возобновляет прерванный прием.
.Ar receive_resume_token
это значение этого свойства для файловой системы или тома, в который был
получен файл.
Смотрите документацию по
.Nm zfs Cm receive Fl s
для получения болеее подробной информации.
.It Xo
.Nm zfs
.Cm send
.Op Fl PVnv
.Op Fl i Ar snapshot Ns | Ns Ar bookmark
.Fl S
.Ar filesystem
.Xc
Генерирует поток отправки из набора данных, который был получен частично.
.Bl -tag -width "-L"
.It Fl S , -saved
Этот флаг требует, чтобы указанная файловая система ранее получала
отправку с возможностью возобновления, которая не завершилась и была прервана.
В таких случаях этот флаг
позволяет пользователю отправлять это частично полученное состояние.
Использование этого флага всегда приведет к использованию последнего полностью полученного снапшота в качестве добавочного источника, если он существует.
.El
.It Xo
.Nm zfs
.Cm redact
.Ar snapshot redaction_bookmark
.Ar redaction_snapshot Ns …
.Xc
Создайте новую закладку редактирования.
В дополнение к обычной информации о закладках, закладка редактирования содержит
список отредактированных блоков и список указанных снапшотов редактирования.
Отредактированные блоки - это блоки в снапшоте, на которые не ссылается ни
один из снапшотов редактирования.
Эти блоки обнаруживаются путем перебора метаданных в каждом снапшоте редактирования,
чтобы определить, что изменилось с момента создания целевого снапшота.
Редакция предназначена для поддержки отредактированных отправлений zfs; смотрите запись 
.Nm zfs Cm send
для получения дополнительной информации о цели этой операции.
Если операция редактирования завершается неудачей на полпути (из-за ошибки или системного
сбоя), редактирование можно возобновить, повторно выполнив ту же команду.
.El
.Ss Редакция
ZFS поддерживает ограниченную версию поднабора данных в виде
редактирования.
Используя команду
.Nm zfs Cm redact ,
.Sy redaction bookmark
может быть создан список блоков, содержащих конфиденциальную информацию.
При предоставлении
.Nm zfs Cm send ,
это приводит к происхождению
.Sy redacted send .
В отредактированных отправлениях отсутствуют блоки, содержащие конфиденциальную информацию,
заменяя их отредактированными записями.
Когда эти потоки отправки получены, создается
.Sy redacted dataset .
Отредактированный набор данных по умолчанию не может быть подключен, поскольку он является неполным.
Его можно использовать для получения других потоков отправки.
Таким образом, наборы данных можно использовать для резервного копирования и репликации данных
со всеми преимуществами, которые может предложить система отправки и получения данных zfs,
защищая при этом конфиденциальную информацию от
хранения на компьютерах или службах, которым не доверяют.
.Pp
FПроцесс редактирования состоит из двух этапов.
Этап редактирования и этап отправки/получения.
Сначала создается закладка для редактирования.
Это делается путем предоставления команде
.Nm zfs Cm redact
родительского снапшота, создать закладка и несколько
снапшотов редактирования.
Эти снапшоты редактирования должны быть потомками родительского снапшота,
и они должны каким-либо образом изменять данные, которые считаются конфиденциальными.
Любые блоки данных, измененные всеми снапшотами редактирования, будут
перечислены в закладке редактирования, поскольку они представляют действительно конфиденциальную
информацию.
Когда дело доходит до шага отправки, процесс отправки не будет отправлять
блоки, перечисленные в закладке редактирования, вместо этого они будут заменены на
REDUCT записи.
При получении в целевой системе это приведет к созданию
отредактированного набора данных, в котором будут отсутствовать данные, соответствующие блокам в закладке
редактирования в отправляющей системе.
Добавочные потоки отправки от
исходного родительского устройства к снапшотам редактирования затем также могут быть получены в
целевой системе, и это приведет к созданию полного снапшота, который можно использовать
в обычном режиме.
Инкрементальные изменения из одного снапшота в родительской файловой системе и из другого
также могут быть выполнены путем отправки из закладки редактирования, а не
из самих снапшотов.
.Pp
Чтобы было более понятно назначение этой функции, приведен пример.
Рассмотрим файловую систему zfs, содержащую четыре файла.
Эти файлы представляют собой информацию для службы онлайн-покупок.
Один файл содержит список имен пользователей и паролей, другой -
историю покупок,
третий - данные отслеживания кликов, а четвертый - настройки пользователя.
Владелец этих данных хочет предоставить их своим командам разработчиков для
тестирования, а группам маркетинговых исследований - для анализа.
Командам разработчиков нужна информация о предпочтениях пользователей и
данные отслеживания кликов, в то время как группам маркетинговых исследований нужна информация об
истории покупок и предпочтениях пользователей.
Ни одному из них не требуется доступ к именам пользователей и паролям.
Однако, поскольку все эти данные хранятся в одной файловой системе ZFS,
их необходимо отправлять и получать вместе.
Кроме того, владелец данных
хочет воспользоваться преимуществами таких функций, как сжатие, контрольная сумма и
снапшоты, поэтому он хочет продолжать использовать ZFS для хранения и передачи своих
данных.
Редакция может помочь ему в этом.
Сначала они создают два клона снапшота данных из источника.
В одном клоне они создают настройки, которые хотят, чтобы их команда по исследованию рынка увидела;
они удаляют файл с именами пользователей и паролями
и заменяют данные отслеживания кликов фиктивной информацией.
В другом случае они создают настройки, которые, по их
мнению, должны увидеть команды разработчиков, заменяя пароли поддельной информацией и заменяя истории
покупок случайно сгенерированными.
Затем они создадут закладку редактирования на родительском снапшоте,
используя снапшоты двух клонов в качестве снапшотов редактирования.
Затем родительский файл, отредактированный, может быть отправлен на целевой
сервер, к которому имеют доступ команды исследователей и разработчиков.
Наконец, инкрементные посылки из родительского снапшота каждому из клонов могут быть
отправлены
на целевой сервер и получены им; эти снапшоты идентичны тем,
что были на исходном сервере, и готовы к использованию, в то время как родительский снапшот на
целевом сервере не содержит данных имени пользователя и пароля, присутствующих в источнике,
поскольку он был удален в результате отредактированной операции отправки.
.
.Sh СИГНАЛЫ
Смотрите
.Fl v .
.
.Sh ПРИМЕРЫ
.\" These are, respectively, examples 12, 13 from zfs.8
.\" Make sure to update them bidirectionally
.Ss Пример 1 : No Удаленная репликация данных ZFS
Следующие команды отправляют полный поток, а затем добавочный поток на
удаленный компьютер, восстанавливая их в
.Em poolB/received/fs@a
и
.Em poolB/received/fs@b ,
соответственно.
.Em poolB
должен содержать файловую систему
.Em poolB/received ,
и изначально не должен содержать
.Em poolB/received/fs .
.Bd -literal -compact -offset Ds
.No # Nm zfs Cm send Ar pool/fs@a |
.No "   " Nm ssh Ar host Nm zfs Cm receive Ar poolB/received/fs Ns @ Ns Ar a
.No # Nm zfs Cm send Fl i Ar a pool/fs@b |
.No "   " Nm ssh Ar host Nm zfs Cm receive Ar poolB/received/fs
.Ed
.
.Ss Пример 2 : No Использование параметра Nm zfs Cm receive Fl d No
Следующая команда 
.Ar poolA/fsA/fsB@snap
отправляет полный поток на удаленный компьютер, получая его в
.Ar poolB/received/fsA/fsB@snap .
Часть имени полученного снимка, содержащая 
.Ar fsA/fsB@snap
, определяется на основе имени отправленного
снапшота.
.Ar poolB
должен содержать файловую систему
.Ar poolB/received .
Если
.Ar poolB/received/fsA
не существует, она создается как пустая файловая система.
.Bd -literal -compact -offset Ds
.No # Nm zfs Cm send Ar poolA/fsA/fsB@snap |
.No "   " Nm ssh Ar host Nm zfs Cm receive Fl d Ar poolB/received
.Ed
.
.Sh СМОТРИТЕ ТАКЖЕ
.Xr zfs-bookmark 8 ,
.Xr zfs-receive 8 ,
.Xr zfs-redact 8 ,
.Xr zfs-snapshot 8
